{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fnil\fcharset204{\*\fname Courier New;}Courier New CYR;}{\f1\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green0\blue255;\red247\green150\blue70;\red255\green0\blue0;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\lang1049\kerning1\f0\fs22\'ca\lang1033\f1  \lang1049\f0\'ed\'e8\'e3\'e0 "\'d1++ \'e7\'e0 21 \'e4\'e5\'ed\'fc" \'ef\'e8\'f8\'f3\'f2 \'ee\'e1\'fa\'e5\'ea\'f2 \'e1\'fb\'f1\'f2\'f0\'e5\'e9 \'e2\'f1\'e5\'e3\'ee \'ef\'e5\'f0\'e5\'e4\'e0\'b8\'f2\'f1\'ff \'ef\'ee const \'f1\'f1\'fb\'eb\'ea\'e5:\cf0\par
\cf1 void foo(const A& a)\par
\par
\'ce\'e1\'fa\'e5\'ea\'f2\'fb \'fd\'f2\'ee: \'c8\'ec\'ff - \'d2\'e8\'ef/\'c4\'eb\'e8\'ed\'e0 - \'c0\'e4\'f0\'e5\'f1 - \'c7\'ed\'e0\'f7\'e5\'ed\'e8\'e5.\par
\'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'f1\'f1\'fb\'eb\'e0\'e5\'f2\'f1\'ff \'ed\'e0 \'c0\'e4\'f0\'e5\'f1.\par
\'d1\'f1\'fb\'eb\'ea\'e0 \'f1\'f1\'fb\'eb\'e0\'e5\'f2\'f1\'ff \'ed\'e0 \'c8\'ec\'ff.\par
\par
Valgrind\lang1033\f1  - \lang1049\f0\'e4\'eb\'ff \'ee\'f2\'eb\'e0\'e4\'ea\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'ef\'e0\'ec\'ff\'f2\'e8, \'ee\'e1\'ed\'e0\'f0\'f3\'e6\'e5\'ed\'e8\'ff \'f3\'f2\'e5\'f7\'e5\'ea \'ef\'e0\'ec\'ff\'f2\'e8, \'ef\'f0\'ee\'f4\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff.\cf0\par
\cf1\par
\'c4\'eb\'ff \'ec\'ed\'ee\'e3\'ee\'ef\'ee\'f2\'ee\'f7\'ed\'ee\'f1\'f2\'e8 \'e2 \'d1++ \'e5\'f1\'f2\'fc <thread>, <mutex>, <conditional_variable>, <future>, <atomic>\cf0\par
\cf1\par
\'ca\'e0\'e6\'e4\'e0\'ff OS \'e8\'ec\'e5\'e5\'f2 \'f1\'e2\'ee\'e9 GUI toolkit. \'c4\'eb\'ff Windows \emdash  Win32 API \'e8 MFC (IDE \'e4\'eb\'ff \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'ff GUI App - WPF = Windows Presentation Foundation)\cf0\par
\cf1\'c5\'f1\'f2\'fc cross \'ef\'eb\'e0\'f2\'f4\'ee\'f0\'ec\'e5\'ed\'ed\'fb\'e5 GUI \'f1\'ee \'f1\'e2\'ee\'e8\'ec\'e8 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0\'ec\'e8 \'e4\'eb\'ff \'eb\'fe\'e1\'fb\'f5 OS \emdash  GTK+, QT.\cf0\par
\cf1\par
Ncurses - \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0 \'e4\'eb\'ff \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'ff \'f2\'e5\'f0\'ec\'e8\'ed\'e0\'eb\'fc\'ed\'fb\'f5 \'ef\'f0\'e8\'eb\'ee\'e6\'e5\'ed\'e8\'e9, \'ef\'ee\'f5\'ee\'e6 \'ed\'e0 Norton Commander\cf0\par
\cf1\par
\'cc\'ee\'e4\'e8\'f4\'e8\'ea\'e0\'f2\'ee\'f0\'fb \'e4\'ee\'f1\'f2\'f3\'ef\'e0:\cf0\par
\pard\nowidctlpar\hyphpar0\fi-360\li720\sl240\slmult1\cf1\kerning0  1.\tab\kerning1 Public - \'e2\'e8\'e4\'e8\'ec\'fb\'e9 \'eb\'fe\'e1\'fb\'ec \'e4\'f0\'f3\'e3\'e8\'ec \'ea\'eb\'e0\'f1\'f1\'ee\'ec\cf0\par
\cf1\kerning0  2.\tab\kerning1 Protected - \'e2\'e8\'e4\'e8\'ec\'fb\'e9 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'ec\'e8 \'ea\'eb\'e0\'f1\'f1\'e0\'ec\'e8\cf0\par
\cf1\kerning0  3.\tab\kerning1 Private - \'ee\'f2\'f1\'f3\'f2\'f1\'f2\'e2\'e8\'e5 \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'e8\'e7 \'e2\'ed\'e5\cf0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\'cc\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc friend \'e4\'eb\'ff \'ee\'e1\'f5\'ee\'e4\'e0 \'ec\'ee\'e4\'e8\'f4\'e8\'ea\'e0\'f2\'ee\'f0\'ee\'e2.\cf0\par
\cf1\par
// - \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2 \'ea\'ee\'ec\'ec\'e5\'ed\'f2\'e0\'f0\'e8\'e9, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e7\'e0\'ea\'e0\'ed\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'e2 \'ea\'ee\'ed\'f6\'e5 \'f1\'f2\'f0\'ee\'ea\'e8\cf0\par
\cf1 /* - \'ea\'ee\'ec\'ec\'e5\'ed\'f2\'e0\'f0\'e8\'e9, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e7\'e0\'ea\'e0\'ed\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'e7\'ed\'e0\'ea\'ee\'ec */\cf0\par
\cf1\par
apt install build-essential\tab\tab\tab\'f3\'f1\'f2\'e0\'ed\'ee\'e2\'e8\'f2\'fc GCC\cf0\par
\cf1 apt install linux-headers-$(uname -r)\tab\'f3\'f1\'f2\'e0\'ed\'ee\'e2\'e8\'f2\'fc \'e7\'e0\'e3\'ee\'eb\'ee\'e2\'ee\'f7\'ed\'fb\'e5 \'f4\'e0\'e9\'eb\'fb \'ff\'e4\'f0\'e0\cf0\par
\cf1 apt-get source linux-image-$(uname -r)\tab\'f1\'ea\'e0\'f7\'e0\'f2\'fc \'e8\'f1\'f5\'ee\'e4\'ed\'e8\'ea \'ff\'e4\'f0\'e0\cf0\par
\cf1 apt install gdb\cf0\par
\cf1 apt install strace\cf0\par
\cf1\par
\cf0{\field{\*\fldinst{HYPERLINK "https://www.quora.com/What-are-significance-of-__init-and-__exit-macro-in-Linux"}}{\fldrslt{\ul\cf2 https://www.quora.com/What-are-significance-of-__init-and-__exit-macro-in-Linux}}}\f0\fs22\par
\cf1\'ef\'f0\'ee \'eb\'e8\'ed\'ea\'ee\'e2\'f9\'e8\'ea\'e8 \'e8 __init \'ec\'e0\'ea\'f0\'ee\'f1\cf0\par
{\field{\*\fldinst{HYPERLINK "https://www.sourceware.org/binutils/docs-2.10/ld_3.html"}}{\fldrslt{\ul\cf2 https://www.sourceware.org/binutils/docs-2.10/ld_3.html}}}\cf1\f0\fs22  \'ef\'f0\'ee \'eb\'e8\'ed\'ea\'ee\'e2\'f9\'e8\'ea \'e8\'e7 \'ef\'e0\'ea\'e5\'f2\'e0 binutils (ar, ld, as, nm, ranlib, strip \'e8 \'f2.\'ef.) - \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'e1\'e8\'ed\'e0\'f0\'ed\'fb\'ec \'ea\'ee\'e4\'ee\'ec.\cf0\par
\cf1\par
\b nm\b0  -D /lib/x86_64-linux-gnu/libc.so.6 | grep malloc - \'ef\'ee\'ea\'e0\'e6\'e5\'f2 \'e5\'f1\'f2\'fc \'eb\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'ff malloc \'e2 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e5 libc.so.6\cf0\par
\cf1 000000000008a0f0 T malloc@@GLIBC_2.2.5\cf0\par
\cf1\par
\'d3\'f2\'e8\'eb\'e8\'f2\'e0 \b nm\b0  \'e2\'fb\'e4\'e0\'b8\'f2 \'f2\'e0\'e1\'eb\'e8\'f6\'f3 symbols - \'f2\'e0\'e1\'eb\'e8\'f6\'e0, \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'fe\'f9\'e0\'ff \'e8\'ec\'e5\'ed\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 (\'f4\'f3\'ed\'ea\'f6\'e8\'e9, \'ea\'eb\'e0\'f1\'f1\'ee\'e2) \'f1 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e8\'ec\'e8 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec\'e8 \'e8 \'e8\'f5 \'f2\'e8\'ef\'e0\'ec\'e8 (\'f1\'e2\'ee\'e9\'f1\'f2\'e2\'e0\'ec\'e8) \'e2\'ed\'f3\'f2\'f0\'e8 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb. \'d2\'e0\'e1\'eb\'e8\'f6\'e0 \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'ed\'e0 \'e2 ELF \'e7\'e0\'e3\'ee\'eb\'ee\'e2\'ea\'e0\'f5 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'f5 \'f4\'e0\'e9\'eb\'ee\'e2, \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea \'e8 \'f2.\'ef.:\cf0\par
\cf1 Name                  Value    Class       Type           Size   Line  Section \cf0\par
\cf1 fn_a                |        |   U  |            NOTYPE|        |     |*UND*\cf0\par
\cf1 z_global            |        |   U  |            NOTYPE|        |     |*UND*\cf0\par
\cf1 fn_b                |00000000|   t  |              FUNC|00000009|     |.text\cf0\par
\cf1 x_global_init       |00000000|   D  |            OBJECT|00000004|     |.data\cf0\par
\cf1 y_global_uninit     |00000000|   b  |            OBJECT|00000004|     |.bss\cf0\par
\cf1 x_global_uninit     |00000004|   C  |            OBJECT|00000004|     |*COM*\cf0\par
\cf1 y_global_init       |00000004|   d  |            OBJECT|00000004|     |.data\cf0\par
\cf1 fn_c                |00000009|   T  |              FUNC|00000055|     |.text\cf0\par
\cf1\par
\'cf\'f0\'ee \'f4\'e0\'e9\'eb\'fb \'f2\'e8\'ef\'e0 \b mem.ld\b0  \'cd\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'f1\'f6\'e5\'ed\'e0\'f0\'e8\'e9 \'eb\'e8\'ed\'ea\'e5\'f0\'e0 \cf0{\field{\*\fldinst{HYPERLINK "https://www.opennet.ru/docs/RUS/gnu_ld/gnuld-3.html"}}{\fldrslt{\ul\cf2 https://www.opennet.ru/docs/RUS/gnu_ld/gnuld-3.html}}}\cf1\f0\fs22  .\'ce\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'e3\'e4\'e5 \'f3 \'ed\'e0\'f1 \'f4\'eb\'e5\'f8, \'e3\'e4\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'e8\'e2\'ed\'e0\'ff \'ef\'e0\'ec\'ff\'f2\'fc, \'ea\'e0\'ea\'e8\'e5 \'f3 \'ed\'e8\'f5 \'f0\'e0\'e7\'ec\'e5\'f0\'fb. \'ca\'e0\'ea \'ef\'f0\'e0\'e2\'e8\'eb\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ef\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 kernels/\'e4\'eb\'ff \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'ff OS, \'f2.\'e5. \'ea\'ee\'e3\'e4\'e0 \'e2 \'e3\'ee\'eb\'ee\'e9 \'ce\'c7\'d3 \'ed\'e0\'e4\'ee \'f0\'e0\'e7\'ec\'e5\'f1\'f2\'e8\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5. \'d3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'ec \'ea\'e0\'ea\'e8\'e5 \'f1\'e5\'e3\'ec\'e5\'ed\'f2\'fb \'ea\'f3\'e4\'e0 \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'f2\'fc:\cf0\par
\pard\nowidctlpar\hyphpar0\fi-1410\li2130\sl240\slmult1\cf1 .text\tab\tab\'ea\'ee\'e4 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb. \'cf\'f0\'e0\'e2\'e0 \'e2 GTD: Read-Only + Execute. \'d5\'ee\'f0\'ee\'f8 \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 L1 L2 cache.\cf0\par
\cf1 .data\tab\tab static + global \'c8\'cd\'c8\'d6\'c8\'c0\'cb\'c8\'c7\'c8\'d0\'ce\'c2\'c0\'cd\'cd\'db\'c5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5, \'e2 \'ee\'e1\'f9\'e5\'ec \'ee\'e1\'ee\'e7\'ed\'e0\'f7\'e5\'ed\'ed\'fb\'e5 \'ea\'e0\'ea extern. \'d0\'e0\'e7\'ec\'e5\'f0 \'f1\'e5\'e3\'ec\'e5\'ed\'f2\'e0 \'e7\'e0\'e4\'e0\'b8\'f2\'f1\'ff \'ef\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'e1\'ee\'eb\'fc\'f8\'e5 \'ed\'e5 \'e8\'e7\'ec\'e5\'ed\'ff\'e5\'f2\'f1\'ff. \'cf\'f0\'e0\'e2\'e0 \'e2 GTD: Read-Write.\cf0\par
\cf1 .bss\tab\tab static + global \'cd\'c5 \'c8\'cd\'c8\'d6\'c8\'c0\'cb\'c8\'c7\'c8\'d0\'ce\'c2\'c0\'cd\'cd\'db\'c5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5, \'f2.\'e5. static int a. \'c5\'f1\'eb\'e8 \'e2\'ed\'f3\'f2\'f0\'e8 .\'e5\'f5\'e5-\'f8\'ed\'e8\'ea\'e0 \'f1\'e5\'e3\'ec\'e5\'ed\'f2 .data \'e7\'e0\'ed\'e8\'ec\'e0\'e5\'f2 \'ea\'e0\'ea\'ee\'e5-\'f2\'ee \'ec\'e5\'f1\'f2\'ee, \'f2\'ee \'ef\'f0\'ee .bss \'f1\'e5\'e3\'ec\'e5\'ed\'f2 \'e1\'f3\'e4\'e5\'f2 \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'ee: bss size = 123 \'e1\'e5\'e7 \'ea\'e0\'ea\'e8\'f5-\'eb\'e8\'e1\'ee \'e4\'e0\'ed\'ed\'fb\'f5.\cf0\par
\cf1 .rodata\tab const + string. \'cf\'f0\'e0\'e2\'e0 \'e2 GTD: Read-Only \'e1\'e5\'e7 Execute.\cf0\par
\cf1 .stack\tab\'f1\'f0\'e0\'e7\'f3 \'ed\'e0 \'f1\'f2\'e5\'ea \'ec\'ee\'e6\'e5\'ec \'f7\'f2\'ee-\'ed\'e8\'e1\'f3\'e4\'fc \'ef\'ee\'eb\'ee\'e6\'e8\'f2\'fc. \'cf\'f0\'e0\'e2\'e0 \'e2 GTD: Read-Write \'f1 \'ee\'e3\'f0\'e0\'ed\'e8\'f7\'e5\'ed\'e8\'ff\'ec\'e8, \'f3\'f7\'e8\'f2\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'f1\'ef\'e5\'f6\'e8\'f4\'e8\'ea\'e0 \'f0\'e0\'e1\'ee\'f2\'fb \'f1\'f2\'e5\'ea\'e0, \'ed\'e5 \'ea\'e0\'ea \'f3 .data\cf0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\'c7\'e0\'e4\'e0\'b8\'ec \'f1\'e8\'ec\'e2\'ee\'eb: _stack_base \endash  \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'ed\'e0 \'e2\'e5\'f0\'f8\'e8\'ed\'f3 \'f1\'f2\'e5\'ea\'e0.\cf0\par
\cf1\par
_stack_base = 0x10002000;\cf0\par
\cf1 MEMORY \{\cf0\par
\pard\nowidctlpar\hyphpar0\li720\sl240\slmult1\cf1 rom(RX)   : ORIGIN = 0x00000000, LENGTH = 0x8000\cf0\par
\cf1 ram(WAIL) : ORIGIN = 0x10000000, LENGTH = 0x2000\}\cf0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1 SECTIONS \{\cf0\par
\pard\nowidctlpar\hyphpar0\li720\sl240\slmult1\cf1 .text : \{ *(.text*) \} > rom\cf0\par
\cf1 .bss  : \{ *(.bss*) \} > ram\}\cf0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\par
\b strip\b0  \'f3\'e4\'e0\'eb\'ff\'e5\'f2 symbols \'e8\'e7 \'e7\'e0\'e3\'ee\'eb\'ee\'e2\'ea\'e0 ELF \'e8\'f1\'ef\'ee\'eb\'ed\'ff\'e5\'ec\'fb\'f5 \'f4\'e0\'e9\'eb\'ee\'e2 (.so .a .exe) \'e4\'eb\'ff \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'e8 \'f0\'e0\'f1\'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'ed\'e0 \'f1\'f2\'ee\'f0\'ee\'ed\'f3 \'f1 \'f1\'ee\'ea\'f0\'fb\'f2\'e8\'e5\'ec \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'e5\'e9 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb.\cf0\par
\cf1\b readelf -a\b0  \i asd.o\i0  \'e2\'fb\'e4\'e0\'b8\'f2 \'e2\'f1\'b8 \'f7\'f2\'ee \'e5\'f1\'f2\'fc \'e2 \'e7\'e0\'e3\'ee\'eb\'ee\'e2\'ea\'e5 ELF\cf0\par
\cf1\b readelf -s\b0  \i asd.o\i0  \'e2\'fb\'e4\'e0\'b8\'f2 \'f2\'ee\'eb\'fc\'ea\'ee \'e2\'ed\'e5\'f8\'ed\'e8\'e5 \'f1\'f1\'fb\'eb\'ea\'e8, \'f2\'e8\'ef\'e0 \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe swap\cf0\par
\cf1\'d3\'f2\'e8\'eb\'e8\'f2\'e0 \b gcc\b0  \'e8\'e7 \'d1++ \'e4\'e5\'eb\'e0\'e5\'f2 \'e0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0\'ed\'fb\'e9 \'f4\'e0\'e9\'eb .S\cf0\par
\cf1\'d3\'f2\'e8\'eb\'e8\'f2\'e0 \b as\b0  \'e8\'e7 \'e0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0\'ed\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'e0 \'e4\'e5\'eb\'e0\'e5\'f2 \'e1\'e8\'ed\'e0\'f0\'ed\'e8\'ea \'f1 \'f1\'fb\'eb\'ea\'e0\'ec\'e8 \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'f2\'e8\'ef\'e0 printf().\cf0\par
{\field{\*\fldinst{HYPERLINK "https://www.opennet.ru/docs/262.shtml"}}{\fldrslt{\ul\cf2 https://www.opennet.ru/docs/262.shtml}}}\cf1\f0\fs22  \'e0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0 \'ed\'e0 \'f0\'f3\'f1\'f1\'ea\'ee\'ec.\cf0\par
{\field{\*\fldinst{HYPERLINK "http://asm.sourceforge.net"}}{\fldrslt{\ul\cf2 http://asm.sourceforge.net}}}\cf1\f0\fs22  (\'ef\'f0\'ee syscall, ELF \'e8 \'ec\'ed\'ee\'e3\'ee\'e5 \'e4\'f0\'f3\'e3\'ee\'e5) /usr/include/sys/syscall.h\cf0\par
\cf1\'d3\'f2\'e8\'eb\'e8\'f2\'e0 \b ld\b0  \'ea\'ee\'ec\'ef\'e0\'ed\'f3\'e5\'f2 \'f4\'e0\'e9\'eb\'fb, \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'ed\'fb\'e5 \'ed\'e0 Linker Command Language.\cf0\par
\cf1\b ld --verbose\b0  \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'e4\'eb\'ff \'f3\'f2\'e8\'eb\'e8\'f2\'fb ld\cf0\par
\cf1\'d3\'f2\'e8\'eb\'e8\'f2\'e0 \b objdump\b0  \'e4\'e5\'eb\'e0\'e5\'f2 \'e2\'fb\'e4\'e0\'b8\'f2 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'fe \'ee \'f4\'e0\'e9\'eb\'e5: \'ec\'ed\'ee\'e3\'ee \'ee\'ef\'f6\'e8\'e9 \'ea\'e0\'ea\'e8\'e5 header-\'fb, \'f7\'f2\'ee \'e2 ELF \'e8 \'f2.\'e4. + \'ec\'ee\'e6\'e5\'f2 \'e4\'e5\'eb\'e0\'f2\'fc \ul\'e4\'e8\'f1\'e0\'f1\'f1\'e5\'ec\'e1\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5\ulnone  objdump -d a.out\cf0\par
\cf1\par
section .text\cf0\par
\cf1\tab global _start\cf0\par
\cf1\par
_start:\cf0\par
\cf1\tab mov edx,len\tab\tab\'e4\'eb\'e8\'ed\'e0 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'ff\cf0\par
\cf1\tab mov ecx,msg\tab\tab\'f2\'e5\'eb\'ee  \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'ff\cf0\par
\cf1\tab mov ebx,1\tab\tab\'ee\'f2\'ef\'f0\'e0\'e2\'e8\'f2\'fc \'e2 file descriptor 1 = stdout\cf0\par
\cf1\tab mov eax,4\tab\tab sys_\cf3 write\cf1  \'e7\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'e2 fd\cf0\par
\cf1\tab int 0x80\cf0\par
\cf1\tab mov eax,1\tab\tab sys_exit\cf0\par
\cf1\tab int 0x80\cf0\par
\cf1\par
section .data\cf0\par
\cf1 msg\tab db\tab 'Hello, world',0xa\cf0\par
\cf1 len\tab equ\tab $ - msg\cf0\par
\cf1\par
# nasm -f elf hello.S\cf0\par
\cf1 # ld -s hello.o\cf0\par
\cf1 # strace ./hello\cf0\par
\cf1 execve("./hello",..) = 0\cf0\par
\cf3 write\cf1 (1,"Hello, world!\\n", 14Hello, world!) = 14\cf0\par
\cf1 _exit(1) = ?\cf0\par
\cf1\par
\'dd\'f2\'f3 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3 \'ec\'ee\'e6\'ed\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'f2\'e0\'ea:\cf0\par
\cf1 #include <unistd.h> - \'eb\'e5\'e6\'e0\'f2 \'f0\'e5\'e0\'eb\'fc\'ed\'fb\'e5 syscall\cf0\par
\cf1 const char msg[] = "Hello, world";\cf0\par
\cf3 write\cf1 (STDOUT_FILENO, msg, sizeof(msg)-1);\cf0\par
\cf1\par
\b gdb\b0  Debugger (\'cb\'e5\'ea\'f6\'e8\'ff 4 | \'c0\'f0\'f5\'e8\'f2\'e5\'ea\'f2\'f3\'f0\'e0 \'dd\'c2\'cc \'e8 \'ee\'f1\'ed\'ee\'e2\'fb \'ce\'d1 | \'ca\'e8\'f0\'e8\'eb\'eb \'ca\'f0\'e8\'ed\'ea\'e8\'ed | CSC | \'cb\'e5\'ea\'f2\'ee\'f0\'e8\'f3\'ec 1:22:00)\cf0\par
{\field{\*\fldinst{HYPERLINK "https://www.opennet.ru/docs/RUS/gdbint/"}}{\fldrslt{\ul\cf2 https://www.opennet.ru/docs/RUS/gdbint/}}}\f0\fs22\par
\cf1\'c4\'eb\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff gdb \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3 \'f1\'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'f1 \'ee\'ef\'f6\'e8\'e5\'e9 -g\cf0\par
\cf1 gcc -g<0,1,2,3> Debug information levels, \'ee\'e1\'fb\'f7\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2 3\cf0\par
\cf1 gcc -O<0,1,2,3> \'f3\'f0\'ee\'e2\'e5\'ed\'fc \'ee\'ef\'f2\'e8\'ec\'e8\'e7\'e0\'f6\'e8\'e8 (\'e8\'e7 \'f1\'e5\'f0\'e8\'e8 \'ea\'ee\'e3\'e4\'e0 \'e4\'e5\'eb\'e0\'e5\'f8\'fc for i=1 to 4, \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'e4\'e5\'eb\'e0\'e5\'f2 \'f7\'e5\'f0\'e5\'e7 jmp \'e8\'eb\'e8 \'ef\'f0\'ee\'f1\'f2\'ee \'f7\'e5\'f2\'fb\'f0\'e5 \'f0\'e0\'e7\'e0 \'ee\'e4\'e8\'ed \'e8 \'f2\'ee\'f2 \'e6\'e5 \'ea\'ee\'e4) -O0 \'e1\'e5\'e7 \'ee\'ef\'f2\'e8\'ec\'e8\'e7\'e0\'f6\'e8\'e8\cf0\par
\cf1 gcc -ggdb  \'f1\'ee\'e7\'e4\'e0\'b8\'f2 \'f4\'e0\'e9\'eb\'e8\'ea \'e2 \'f4\'ee\'f0\'ec\'e0\'f2\'e5 \'e4\'eb\'ff debug-\'e0 \'e2 gdb\cf0\par
\cf1 gdb ./a.out\cf0\par
\cf1 gdb ./a.out -c core \ul Core Dump\ulnone  - \'e5\'f1\'eb\'e8 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'ec\'f0\'b8\'f2, OS \'c5\'d1\'cb\'c8 \'c2\'ca\'cb\'de\'d7\'c5\'cd\'c0 \'ce\'cf\'d6\'c8\'df \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 dump \'ef\'e0\'ec\'ff\'f2\'e8 \'e2 \'f4\'e0\'e9\'eb\'e8\'ea core... \'c2\'ea\'eb\'fe\'f7\'e8\'f2\'fc \'ee\'ef\'f6\'e8\'fe: unlim -c unlimited, \'f2.\'e5. \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'f0\'e0\'e7\'ec\'e5\'f0 \'f4\'e0\'e9\'eb\'e0 \'e4\'eb\'ff core dump = unlimited, \'ef\'ee default=0.\cf0\par
\cf1 gdb -pid \i pid\i0  \'e5\'f1\'eb\'e8 web-\'f1\'e5\'f0\'e2\'e5\'f0 \'ef\'e0\'e4\'e0\'e5\'f2 \'ef\'f0\'e8 \'ef\'ee\'eb\'f3\'f7\'e5\'ed\'e8\'e8 \'ea\'e0\'ea\'ee\'e3\'ee-\'f2\'ee \'e7\'e0\'ef\'f0\'ee\'f1\'e0, \'f2.\'e5. \'ed\'e0\'e4\'ee \'ee\'f2\'eb\'e0\'e6\'e8\'e2\'e0\'f2\'fc \'ed\'e0 \'f0\'e0\'e1\'ee\'f2\'e0\'fe\'f9\'e5\'ec \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e5. \'d0\'e0\'e7\'e3\'ee\'e2\'ee\'f0 \'ee breakpoint - \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 \'f1\'f2\'e0\'e2\'e8\'ec int 0x03 \'e8 \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'e8\'ec \'e2 \'f0\'e5\'e6\'e8\'ec \'ee\'f2\'eb\'e0\'e4\'ea\'e8 \cf0{\field{\*\fldinst{HYPERLINK "http://www8.cs.umu.se/education/examina/Rapporter/PatrikWestman.pdf"}}{\fldrslt{\ul\cf2 http://www8.cs.umu.se/education/examina/Rapporter/PatrikWestman.pdf}}}\f0\fs22\par
\cf1\'c2 gdb \'ec\'ee\'e6\'ed\'ee \'e4\'e5\'eb\'e0\'f2\'fc start, info registers, disassemble, run, si(\'e8\'eb\'e8 stepi) \'ef\'e5\'f0\'e5\'e9\'f2\'e8 \'ed\'e0 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'f3\'fe \'e8\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'fe, x \'ee\'f2 \'f1\'eb\'ee\'e2\'e0 examine, c \'ee\'f2 \'f1\'eb\'ee\'e2\'e0 continue, help si\cf0\par
\cf1\'cf\'f0\'e8 \'e8\'e7\'f3\'f7\'e5\'ed\'e8\'e8 xv6 \'ef\'ee\'ed\'e0\'e4\'ee\'e1\'e8\'eb\'ee\'f1\'fc gdb -ix .gdbinit \'e7\'e0\'ef\'f3\'f1\'f2\'e8\'f2\'fc \'f1\'ea\'f0\'e8\'ef\'f2 \'e4\'eb\'ff \'ed\'e0\'f7\'e0\'eb\'fc\'ed\'fb\'f5 \'ed\'e0\'f1\'f2\'f0\'ee\'e5\'ea gdb.\cf0\par
\cf1\i file\i0 .sym - \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'e7 \'f1\'f2\'f0\'ee\'ea \'e0\'e4\'f0\'e5\'f1-\'f4\'f3\'ed\'ea\'f6\'e8\'ff, \'ef\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 xv6 \'e1\'f0\'e0\'eb\'f1\'ff \'e8\'e7 \i file\i0 .asm \'cf\'f0\'e8 \'ee\'f2\'eb\'e0\'e4\'ea\'e5 xv6 \'e7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'ec gdb \'e8 \'f5\'ee\'f2\'e8\'ec \'ef\'e5\'f0\'e5\'e9\'f2\'e8 \'ed\'e0 \'e0\'e4\'f0\'e5\'f1 \'e8\'ed\'f2\'e5\'f0\'e5\'f1\'f3\'e5\'ec\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8.\cf0\par
\cf1\par
\b ptrace()\b0  - SYSCALL, \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f9\'e8\'e9 \'ee\'e4\'ed\'ee\'ec\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'f3 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'f2\'fc \'e8\'f1\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5\'ec \'e4\'f0\'f3\'e3\'ee\'e3\'ee, \'f7\'f2\'ee \'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e2 gdb. \cf0{\field{\*\fldinst{HYPERLINK "http://www.linuxcenter.ru/lib/articles/programming/ptrace_howto.phtml"}}{\fldrslt{\ul\cf2 http://www.linuxcenter.ru/lib/articles/programming/ptrace_howto.phtml}}}\f0\fs22\par
\cf1\par
\b strace\b0  ./a.out \'ef\'f0\'ee\'f1\'ec\'ee\'f2\'f0 \'f1\'e8\'f1\'f2\'e5\'ec\'ed\'fb\'f5 \'e2\'fb\'e7\'ee\'e2\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0\cf0\par
\cf1\b strace -f -e\b0  open s.exe\tab\'e2\'fb\'e2\'ee\'e4\'e8\'f2 \'e2\'f1\'e5 sys_open (\'ea\'e0\'ea\'e8\'e5 \'f4\'e0\'e9\'eb\'fb \'ee\'f2\'ea\'f0\'fb\'e2\'e0\'eb\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0). \'cf\'ee\'eb\'e5\'e7\'ed\'e0 \'e4\'eb\'ff \'f1\'e8\'f1\'e0\'e4\'ec\'e8\'ed\'ee\'e2, \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'ed\'e5 \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2, \'f1\'ea\'ee\'f0\'e5\'e9 \'e2\'f1\'e5\'e3\'ee \'ed\'e5 \'f5\'e2\'e0\'f2\'e0\'e5\'f2 \'ea\'e0\'ea\'e8\'f5-\'eb\'e8\'e1\'ee \'f4\'e0\'e9\'eb\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ee\'ed\'e0 \'f5\'ee\'f2\'e5\'eb\'e0 \'ee\'f2\'ea\'f0\'fb\'f2\'fc, \'ed\'ee \'ed\'e5 \'f1\'ec\'ee\'e3\'eb\'e0.\cf0\par
\cf1\b strace -f -p \b0 2345\tab\tab\'e5\'f1\'eb\'e8 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 PID 2345 \'e7\'e0\'e2\'e8\'f1, \'f2\'ee \'ec\'ee\'e6\'ed\'ee \'e2 online \'f1\'ec\'ee\'f2\'f0\'e5\'f2\'fc \'ea\'e0\'ea\'e8\'e5 syscall \'f1\'e5\'e9\'f7\'e0\'f1 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'e7\'e0\'ef\'f0\'e0\'f8\'e8\'e2\'e0\'e5\'f2\cf0\par
\cf1\b strace -fq -cp\b0  2345\tab\'e7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'ec, \'e6\'e4\'b8\'ec, \'ed\'e0\'e6\'e8\'ec\'e0\'e5\'ec CTRL+C, \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'ec \'f2\'e0\'e1\'eb\'e8\'f6\'f3 \'f1\'ee \'f1\'f2\'e0\'f2\'e8\'f1\'f2\'e8\'ea\'ee\'e9 syscall, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e2\'fb\'e7\'fb\'e2\'e0\'eb PID\cf0\par
\cf1\par
\b ltrace\b0  starcraft.exe - \'ef\'ee\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'ec\'fb\'e5 \'e8\'ec\'e5\'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'e9 \'e8\'e7 shared library\cf0\par
\cf1\kerning0\b ldd\b0  a.out - \'f1\'ef\'e8\'f1\'ee\'ea \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'fb\'f5 \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'f5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'f4\'e0\'e9\'eb\'e0\cf0\kerning1\par
\cf1\kerning0\b ldconfig\b0  - \'e7\'e0\'ef\'f3\'f1\'f2\'e8\'f2\'fc \'ef\'ee\'f1\'eb\'e5 \'ee\'e1\'ed\'ee\'e2\'eb\'e5\'ed\'e8\'ff \'f4\'e0\'e9\'eb\'e0 ld.so.conf, \'e2 \'ea\'ee\'f2\'ee\'f0\'ee\'ec \'f5\'f0\'e0\'ed\'ff\'f2\'f1\'ff \'ef\'f3\'f2\'e8 \'ea \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'ec \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0\'ec. \'d1\'ee\'e7\'e4\'e0\'ed\'e8\'e5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 libuser.so.6.4.3 \'eb\'e8\'ed\'ea\'ee\'e2\'f9\'e8\'ea \'f1\'ee\'e7\'e4\'e0\'b8\'f2 \'f1\'f1\'fb\'eb\'ea\'f3 libusr.so.6 - \'ea\'e0\'ea-\'f2\'ee \'ee\'f2\'f1\'eb\'e5\'e6\'e8\'e2\'e0\'e5\'f2 \'e2\'e5\'f0\'f1\'e8\'ee\'ed\'ed\'ee\'f1\'f2\'fc. \'d2\'e0\'ea\'e6\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff $LD_LIBRARY_PATH\cf0\kerning1\par
\cf1\kerning0\par
\'e0) \ul\'cf\'f0\'ee\'f1\'f2\'e0\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'ff\ulnone : g++ main.cpp unuseful.cpp\cf0\kerning1\par
\cf1\kerning0\'e1) \ul Static library\ulnone :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\cf1\kerning0 g++ -c unuseful.cpp\tab\'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'e9 \'f4\'e0\'e9\'eb\cf0\kerning1\par
\cf1\kerning0 ar rcs libunuseful.a unuseful.o\tab\'e8\'e7 \'ee\'e4\'ed\'ee\'e3\'ee \'e8\'eb\'e8 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'e8\'f5 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'f5 \'f4\'e0\'e9\'eb\'ee\'e2 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e0\'ff \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0\\\'e0\'f0\'f5\'e8\'e2\cf0\kerning1\par
\cf1\kerning0 g++ main.cpp -L. -lunuseful\tab\'e2\'f1\'b8 \'e4\'e5\'eb\'ee \'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'f1 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8: -L. - \'e3\'ee\'e2\'ee\'f0\'e8\'f2 \'ee \'f2\'ee\'ec, \'f7\'f2\'ee \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'f3 \'e4\'eb\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ed\'e0\'e4\'ee \'e8\'f1\'ea\'e0\'f2\'fc \'e2 \'f2\'e5\'ea\'f3\'f9\'e5\'ec \'ea\'e0\'f2\'e0\'eb\'ee\'e3\'e5 (\'ee\'e1\'f9\'e8\'e9 \'e2\'e8\'e4 -L\i dir\i0 ); -lunuseful - \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'f4\'e0\'e9\'eb \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'f0\'e5\'e0\'eb\'fc\'ed\'ee \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff libunuseful.a, \'ee\'f2\'e1\'f0\'e0\'f1\'fb\'e2\'e0\'e5\'f2 lib \'e8 .a\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'e2) \ul Shared library\ulnone :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\cf1\kerning0 g++ -fPIC -c unuseful.cpp\tab -fPIC - \'f1\'ee\'e7\'e4\'e0\'b8\'f2 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'e9 \'f4\'e0\'e9\'eb \'e2 \'f4\'ee\'f0\'ec\'e0\'f2\'e5 Position Independent Code - \'ed\'e5\'e7\'e0\'e2\'e8\'f1\'e8\'ec \'ee\'f2 \'f0\'e0\'e7\'ec\'e5\'f9\'e5\'ed\'e8\'ff \'e2 \'ce\'c7\'d3. \'cd\'e5\'f2 \'f4\'e8\'e7\'e8\'f7\'e5\'f1\'ea\'e8\'f5 \'e0\'e4\'f0\'e5\'f1\'ee\'e2. \'d2\'ee\'eb\'fc\'ea\'ee \'f1\'ec\'e5\'f9\'e5\'ed\'e8\'ff.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx5112\cf1\kerning0 g++ -shared -o libunuseful.so unuseful.o\tab\'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e0\'ff \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0\cf0\kerning1\par
\cf1\kerning0\'e8\'eb\'e8 g++ -fPIC -shared -o libunuseful.so unuseful.cpp\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\cf1\kerning0 g++ main.cpp -L. -lunuseful\tab\'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'e1\'e8\'ed\'e0\'f0\'ed\'e8\'ea, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ef\'f0\'e8 \'e7\'e0\'ef\'f3\'f1\'ea\'e5 \'e1\'f3\'e4\'e5\'f2 \'e8\'f1\'ea\'e0\'f2\'fc libunuseful.so; \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'f3 \'ec\'ee\'e6\'ed\'ee \'ef\'ee\'eb\'ee\'e6\'e8\'f2\'fc, \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3, \'e2 /usr/lib\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
1.\tab\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5\tab int foo(int* \'f5)\cf0\kerning1\par
\cf1\kerning0\tab\'ce\'ef\'e8\'f1\'e0\'ed\'e8\'e5\tab *\'f5 = 10\cf0\kerning1\par
\cf1\kerning0\tab\'ce\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e5\tab int foo(&\'f5) - \'e5\'f1\'eb\'e8 \'f5 - \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ed\'e0 \'f1\'f2\'e5\'ea\'e5\cf0\kerning1\par
\cf1\kerning0      \tab\tab\tab int foo (x) - \'e5\'f1\'eb\'e8 \'f5 - \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc\cf0\kerning1\par
\cf1\kerning0\par
2.\tab\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5\tab int foo(int& \'f5)\cf0\kerning1\par
\cf1\kerning0\tab\'ce\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e5\tab int foo(\'f5) \emdash  \'e5\'f1\'eb\'e8 \'f5 -  \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ed\'e0 \'f1\'f2\'e5\'ea\'e5\cf0\kerning1\par
\cf1\par
\kerning0 3.\tab\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5\tab int& foo(int& \'f5) \{return x\}\cf0\kerning1\par
\cf1\kerning0\tab\tab\tab int z=10\cf0\kerning1\par
\cf1\kerning0\tab\tab\tab foo(z) = 30 \emdash  \'fd\'f2\'ee \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'f1\'ff \'f2\'ee\'e6\'e5 \'f1\'e0\'ec\'ee\'e5, \'f7\'f2\'ee \'e8 z=30 !!!\cf0\kerning1\par
\cf1\par
\kerning0\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\cf0\kerning1\i0\par
\cf1\kerning0 class MyClass \{\cf0\kerning1\par
\cf1\kerning0\tab int i = 10;\cf0\kerning1\par
\cf1\kerning0 void foo(MyClass x)\{\cf0\kerning1\par
\cf1\kerning0\tab x.i = 20;\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0\tab MyClass \'f5;\tab\'ed\'e0 \'fd\'f2\'ee\'ec \'fd\'f2\'e0\'ef\'e5 \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff \'ee\'e1\'fb\'f7\'ed\'fb\'e9 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 MyClass()\cf0\kerning1\par
\cf1\kerning0\tab foo(\'f5);\tab\'e4\'eb\'ff \'ef\'e5\'f0\'e5\'e4\'e0\'f7\'e8 \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'f5 \'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe, \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff \'ca\'ce\'cd\'d1\'d2\'d0\'d3\'ca\'d2\'ce\'d0 \'ca\'ce\'cf\'c8\'c9 \'e8 \'f1\'ee\'e7\'e4\'e0\'f1\'f2\'f1\'ff \'ed\'ee\'e2\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2 = \'f5. \'d1 \'ed\'e8\'ec \'ec\'ee\'e6\'ed\'ee \'e4\'e5\'eb\'e0\'f2\'fc \'e2\'f1\'b8. \'cf\'f0\'e8 \'e2\'fb\'f5\'ee\'e4\'e5 \'e8\'e7 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 ~MyClass() \'e8 \'e2\'f1\'e5 \'e8\'e7 \'ec\'e5\'ed\'e5\'ed\'e8\'ff \'f3\'ec\'f0\'f3\'f2.\cf0\kerning1\par
\cf1\kerning0\tab\'f1out << x.i\tab\'e2\'fb\'e4\'e0\'f1\'f2 10\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\cf0\kerning1\i0\par
\cf1\kerning0 class MyClass \{\cf0\kerning1\par
\cf1\kerning0\tab int i = 10;\cf0\kerning1\par
\cf1\kerning0 void foo(MyClass&)\{\cf0\kerning1\par
\cf1\kerning0\tab x.i = 20;\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0\tab MyClass \'f5;\tab\'ed\'e0 \'fd\'f2\'ee\'ec \'fd\'f2\'e0\'ef\'e5 \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff \'ee\'e1\'fb\'f7\'ed\'fb\'e9 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 MyClass()\cf0\kerning1\par
\cf1\kerning0\tab foo(\'f5);\tab\'ed\'e8\'ea\'e0\'ea\'ee\'e9 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc\'f1\'ff \'ed\'e5 \'e1\'f3\'e4\'e5\'f2, \'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'f3\'e9\'e4\'b8\'f2 \'f1\'f1\'fb\'eb\'ea\'e0 \'e8 \'e2\'ed\'f3\'f2\'f0\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e1\'f3\'e4\'e5\'ec \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'f1 \'f2\'e5\'ec \'e6\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'ec\cf0\kerning1\par
\cf1\kerning0\tab cout << x.i\tab\'e2\'fb\'e4\'e0\'f1\'f2 20\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 1.\cf0\kerning1\b0\par
\cf1\kerning0\'cc\'e8\'ed\'e8\'ec\'e0\'eb\'fc\'ed\'e0\'ff \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0:\cf0\kerning1\par
\cf1\kerning0\'f4\'e0\'e9\'eb main.c\cf0\kerning1\par
\cf1\kerning0 int main() \{\cf0\kerning1\par
\cf1\kerning0 return 0;\}\cf0\kerning1\par
\cf1\kerning0\'df\'e7\'fb\'ea\'e8 \'f1\'f6\'e5\'ed\'e0\'f0\'e8\'e5\'e2: bash, \'e0 \'ef\'ee\'e4 Windows - .bat\cf0\kerning1\par
\cf1\kerning0\'ca\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'f3\'e5\'ec \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3:\cf0\kerning1\par
\cf1\kerning0\b gcc main.c\tab\b0\'e2 \'f0\'e5\'e7\'f3\'eb\'fc\'f2\'e0\'f2\'e5 \'e2 \'e4\'e8\'f0\'e5\'ea\'f2\'ee\'f0\'e8\'e8 \'ef\'ee\'ff\'e2\'e8\'f2\'f1\'ff a.out\cf0\kerning1\par
\cf1\kerning0\b gcc main.c -o\b0  \i main\i0\tab\'e2 \'e4\'e8\'f0\'e5\'ea\'f2\'ee\'f0\'e8\'e8 \'ef\'ee\'ff\'e2\'e8\'f2\'f1\'ff \'f4\'e0\'e9\'eb main\cf0\kerning1\par
\cf1\kerning0\'e4\'eb\'ff \'e7\'e0\'ef\'f3\'f1\'ea\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'ed\'e0\'e4\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \b ./main\cf0\kerning1\b0\par
\cf1\kerning0\par
\'cf\'f3\'f1\'f2\'fc \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 \'e1\'f3\'e4\'e5\'f2 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f4\'e0\'e9\'eb\'ee\'e2:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\cf1\kerning0 main.c\tab hello.c\cf0\kerning1\par
\cf1\kerning0 int main()\{\tab void hello()\{\cf0\kerning1\par
\cf1\kerning0 hello();\tab printf("Hello!");\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0 return 0;\}\cf0\kerning1\par
\cf1\kerning0\par
\'d7\'f2\'ee \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'ef\'f0\'e8 \'e7\'e0\'ef\'f3\'f1\'ea\'e5 gcc main.c?\cf0\kerning1\par
\cf1\kerning0 1. \'ca\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'ff. \'c2 \'d1++ \'ea\'e0\'e6\'e4\'fb\'e9 \'f4\'e0\'e9\'eb \'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'ee \'ee\'f2 \'e2\'f1\'e5\'f5 \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'fb\'f5. \'ca\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'ed\'e0\'f7\'e0\'eb\'e0 \'e8\'e7 \'d1++ \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'f3\'e5\'f2 \'e2 \'c0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0, \'ef\'ee\'f2\'ee\'ec \'e8\'e7 \'c0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0\'e0 \'e2 \'ec\'e0\'f8\'e8\'ed\'ed\'fb\'e9 \'ea\'ee\'e4.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc \'e5\'f9\'b8 \'ee\'ef\'f2\'e8\'ec\'e8\'e7\'e0\'f6\'e8\'ff - \'f2\'e8\'ef\'e0 \'f7\'f2\'ee\'e1\'fb \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e2 \'e4\'e0\'eb\'fc\'ed\'e5\'e9\'f8\'e5\'ec \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'eb\'e0\'f1\'fc \'e1\'fb\'f1\'f2\'f0\'e5\'e5.\cf0\kerning1\par
\cf1\kerning0\par
\'c2 \'f0\'e5\'e7\'f3\'eb\'fc\'f2\'e0\'f2\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ee\'e1\'f0\'e0\'e7\'f3\'fe\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'e5 \'f4\'e0\'e9\'eb\'fb \'f2\'e8\'ef\'e0 main.o \'e8 hello.o \'c2\'f1\'b8 \'f7\'f2\'ee \'ec\'ee\'e6\'e5\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'e2\'ee\'e4\'e8\'f2 \'e2 \'ec\'e0\'f8\'e8\'ed\'ed\'fb\'e9 \'ea\'ee\'e4, \'e0 \'e2\'fb\'e7\'ee\'e2\'fb \'f4\'f3\'ed\'ea\'f6\'e8\'e9 (\'e2 \'f4\'e0\'e9\'eb\'e5 main.c - hello(), \'e0 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.c - printf) \'e7\'e0\'ec\'e5\'ed\'ff\'fe\'f2\'f1\'ff \'e8\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e8 \'f2\'e8\'ef\'e0 "\'c2\'fb\'e7\'ee\'e2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'f1 \'e8\'ec\'e5\'ed\'e5\'ec hello()" - \'ed\'e0 \'c0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0\'e5 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e0\'ff \'e8\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'ff \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff Call.\cf0\kerning1\par
\cf1\kerning0\par
2. \'cb\'e8\'ed\'ea\'ee\'e2\'ea\'e0 - \'ea\'ee\'e3\'e4\'e0 \'ec\'fb \'e7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'ec \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3, \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'ee\'ed\'ed\'e0\'ff \'f1\'e8\'f1\'f2\'e5\'ec\'e0 \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'ea\'ee\'e4 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'e2 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'b8\'ed\'ed\'ee\'e5 \'ec\'e5\'f1\'f2\'ee RAM. \'cd\'e0\'f1\'f2\'f0\'e0\'e8\'e2\'e0\'e5\'f2 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0 \'ed\'e0 \'ef\'e5\'f0\'e2\'f3\'fe \'e8\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'fe. \'c8 \'ef\'ee\'e5\'f5\'e0\'eb\'ee:\cf0\kerning1\par
\cf1\kerning0 RAM\cf0\kerning1\par
\cf1\kerning0 ....... - \'f1\'e0\'ec\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'ff main()\cf0\kerning1\par
\cf1\kerning0 ....... - \'ee\'f2\'e2\'e5\'f7\'e0\'e5\'f2 \'e7\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe hello()\cf0\kerning1\par
\cf1\kerning0 ....... - return\cf0\kerning1\par
\cf1\kerning0 ....... - \'f2\'e5\'eb\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e8 hello()\cf0\kerning1\par
\cf1\kerning0\'c7\'e0\'e4\'e0\'f7\'e0 \'eb\'e8\'ed\'ea\'ee\'e2\'f9\'e8\'ea\'e0:\cf0\kerning1\par
\cf1\kerning0\'e0) \'f1\'ee\'e1\'f0\'e0\'f2\'fc \'e8\'e7 \'ec\'ed\'ee\'e6\'e5\'f1\'f2\'e2\'e0 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'f5 \'f4\'e0\'e9\'eb\'ee\'e2 \'ee\'e4\'e8\'ed \'e8\'f1\'ef\'ee\'eb\'ed\'ff\'e5\'ec\'fb\'e9\cf0\kerning1\par
\cf1\kerning0\'e1) \'f1\'ee\'e5\'e4\'e8\'ed\'e8\'f2\'fc \'e1\'eb\'ee\'ea\'e8 \'ec\'e5\'e6\'e4\'f3 \'f1\'ee\'e1\'ee\'e9, \'ef\'ee\'f1\'f2\'e0\'e2\'e8\'f2\'fc \'e8\'f5 \'ee\'e4\'e8\'ed \'ef\'ee\'e4 \'e4\'f0\'f3\'e3\'e8\'ec\cf0\kerning1\par
\cf1\kerning0\'e2) \'e7\'e0\'ec\'e5\'ed\'e8\'f2\'fc \'e8\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e8 "\'c2\'fb\'e7\'ee\'e2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'f1 \'e8\'ec\'e5\'ed\'e5\'ec hello()" \'ed\'e0 \'e2\'fb\'e7\'ee\'e2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'f1 \'f2\'e0\'ea\'ee\'e3\'ee \'f2\'ee \'e0\'e4\'f0\'e5\'f1\'e0, \'f2.\'e5. \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'f0\'e0\'e7\'f0\'e5\'f8\'e5\'ed\'e8\'e5 \'e0\'e4\'f0\'e5\'f1\'ee\'e2, \'e0\'e4\'f0\'e5\'f1\'e0 \'ee\'f2\'ed\'ee\'f1\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'e5, \'f2.\'e5. 0 - \'fd\'f2\'ee \'ed\'e5 \'ed\'f3\'eb\'e5\'e2\'e0\'ff \'ff\'f7\'e5\'e9\'ea\'e0 \'ef\'e0\'ec\'ff\'f2\'e8, \'e0 0 - \'fd\'f2\'ee \'ed\'e0\'f7\'e0\'eb\'ee \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb.\cf0\kerning1\par
\cf1\kerning0\par
\'ca\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'ff + \'cb\'e8\'ed\'ea\'ee\'e2\'ea\'e0 \'f5\'ee\'f0\'ee\'f8\'e0 \'f2\'e5\'ec, \'f7\'f2\'ee \'e5\'f1\'eb\'e8 \'ec\'ed\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'ee\'e2, \'f2\'ee \'e8\'e7\'ec\'e5\'ed\'e8\'e2 \'ee\'e4\'e8\'ed \'f4\'e0\'e9\'eb, \'f2\'fb \'f2\'ee\'eb\'fc\'ea\'ee \'e5\'e3\'ee \'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f8\'fc, \'e0 \'ef\'ee\'f2\'ee\'ec \'e4\'e5\'eb\'e0\'e5\'f8\'fc \'ef\'f0\'ee\'f1\'f2\'f3\'fe \'ef\'f0\'ee\'f6\'e5\'e4\'f3\'f0\'f3 \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'e8:\cf0\kerning1\par
\cf1\kerning0 gcc -c main.c\tab\'ed\'e0 \'e2\'fb\'f5\'ee\'e4\'e5 \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'ec main.o\cf0\kerning1\par
\cf1\kerning0 gcc -c hello.c\tab\'ed\'e0 \'e2\'fb\'f5\'ee\'e4\'e5 \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'ec hello.o\cf0\kerning1\par
\cf1\kerning0 gcc main.o hello.o -o main\cf0\kerning1\par
\cf1\kerning0\par
\'c1\'fb\'e2\'e0\'e5\'f2, \'f7\'f2\'ee \'e8\'e7\'ec\'e5\'ed\'e8\'eb\'e8 \'ed\'e5 \'f2\'e5\'eb\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e8 hello(), \'e0 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'fd\'f2\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8, \'f2.\'e5. \'e8\'e7 hello() \'f1\'e4\'e5\'eb\'e0\'eb\'e8 hello(int n) -> \'e7\'e0\'e3\'ee\'eb\'ee\'e2\'ee\'f7\'ed\'fb\'e5 \'f4\'e0\'e9\'eb\'fb\cf0\kerning1\par
\cf1\kerning0 1. \'ce\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 - \'f2\'e5\'eb\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e8 - \'ea\'ee\'e4.\cf0\kerning1\par
\cf1\kerning0 2. \'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 - \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'e8: \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'ec\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5, \'e8\'ec\'ff, \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\cf1\kerning0\b void hello(int n);\b0\tab\b void hello(int n);\cf0\kerning1\b0\par
\cf1\kerning0 main.c\tab hello.c\cf0\kerning1\par
\cf1\kerning0 int main()\{\tab void hello(int n)\{\cf0\kerning1\par
\cf1\kerning0    hello();\tab    printf("Hello!");\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0    return 0;\}\cf0\kerning1\par
\cf1\kerning0\'e2 \'f4\'e0\'e9\'eb\'e5 hello.c \'e2\'f1\'b8 ok, \'e0 \'e2\'ee\'f2 \'e2 \'f4\'e0\'e9\'eb\'e5 main.c \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ed\'e0\'e9\'e4\'b8\'f2 \'ee\'f8\'e8\'e1\'ea\'f3 \'ed\'e0\'e4\'ee \'e4\'ee\'ef\'e8\'f1\'e0\'f2\'fc "\'e2\'fb\'e4\'e5\'eb\'e5\'ed\'ed\'fb\'e5" \'ea\'ee\'ec\'e0\'ed\'e4\'fb\cf0\kerning1\par
\cf1\kerning0\par
\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'e2\'fb\'ed\'ee\'f1\'e8\'f2\'f1\'ff \'e2 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e9 \'c7\'e0\'e3\'ee\'eb\'ee\'e2\'ee\'f7\'ed\'fb\'e9 \'f4\'e0\'e9\'eb.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\tx3408\cf1\kerning0 main.c\tab hello.c\tab hello.h\cf0\kerning1\par
\cf1\kerning0 #include "hello.h"\tab #include "hello.h"\tab\cf0\kerning1\par
\cf1\kerning0 int main()\{\tab void hello(int n)\{\tab void hello(int n);\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\cf1\kerning0    hello();\tab    printf("Hello!");\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0    return 0;\}\cf0\kerning1\par
\cf1\kerning0\'f2\'e5\'ef\'e5\'f0\'fc \'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'f3\'ff \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'ee \'eb\'fe\'e1\'ee\'e9 \'e8\'e7 \'f4\'e0\'e9\'eb\'ee\'e2, \'e1\'f3\'e4\'e5\'f2 \'ef\'f0\'ee\'e2\'e5\'f0\'ff\'f2\'f1\'ff \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'e8\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'ff, \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff (\'ea\'e0\'ea \'e2 main.c) \'e8 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'ff.\cf0\kerning1\par
\cf1\kerning0\par
\'c2\'f1\'b8 \'f7\'f2\'ee \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff \'f1 # \'ee\'e1\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'e5\'f2 \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0. \'d1\'ed\'e0\'f7\'e0\'eb\'e0 \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0 \'ee\'e1\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'e5\'f2 \'f2\'e5\'ea\'f1\'f2\'ee\'e2\'fb\'e9 \'f4\'e0\'e9\'eb, \'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2 \'ea\'ee\'ec\'fb\'ed\'e4\'fb \'ed\'e0\'f7\'e8\'ed\'e0\'fe\'f9\'e8\'e5\'f1\'ff \'f1 #, \'e0 \'ef\'ee\'f2\'ee\'ec \'f3\'e6\'e5 \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0.\cf0\kerning1\par
\cf1\kerning0\par
printf() \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'ee\'e9 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e5 #include <stdio.h>\cf0\kerning1\par
\cf1\kerning0 "..." \'ee\'f2 <...> \'ee\'f2\'eb\'e8\'f7\'e0\'e5\'f2\'f1\'ff \'f2\'e5\'ec, \'f7\'f2\'ee "..." - \'ef\'ee\'e8\'f1\'ea \'e2 \'f2\'e5\'ea\'f3\'f9\'e5\'ec \'ea\'e0\'f2\'e0\'eb\'ee\'e3\'e5, <...> - \'ef\'ee\'e8\'f1\'ea \'e2 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'ee\'ec \'ea\'e0\'f2\'e0\'eb\'ee\'e3\'e5 /usr/include\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'e5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8: \'e4\'eb\'ff \'d1++ \'fd\'f2\'ee STL, \'e4\'eb\'ff \'d1 - /usr/lib/libc.so \'e8 /usr/lib/libc.a\cf0\kerning1\par
\cf1\kerning0\'c2\'f0\'ee\'e4\'e5 \'ea\'e0\'ea \'e2 \'fd\'f2\'e8\'f5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0\'f5 "\'ee\'ef\'e8\'f1\'e0\'ed\'ee" \'e2\'f1\'b8 \'f7\'f2\'ee \'ed\'e0\'e4\'ee, \'e2\'f1\'e5 SYS_CALL-\'fb \'e4\'eb\'ff \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'e8\'ff \'f1 \'ce\'d1. \'d2.\'e5. \'e2\'f1\'e5 \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'fb\'e5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'f0\'e0\'e1\'ee\'f2\'e0\'fe\'f2 \'f7\'e5\'f0\'e5\'e7 libc.\cf0\kerning1\par
\cf1\kerning0\par
\cf0{\field{\*\fldinst{HYPERLINK "http://www.gnu.org/software/libc/manual/html_mono/libc.html"}}{\fldrslt{\ul\cf2 http://www.gnu.org/software/libc/manual/html_mono/libc.html}}}\cf1\f0\fs22  \'e4\'e5\'f2\'e0\'eb\'fc\'ed\'ee \'ee\'ef\'e8\'f1\'e0\'ed\'e8\'e5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 libc.\cf0\kerning1\par
\kerning0{\field{\*\fldinst{HYPERLINK "http://www.opennet.ru/docs/RUS/glibc/"}}{\fldrslt{\ul\cf2 http://www.opennet.ru/docs/RUS/glibc/}}}\cf1\f0\fs22  \'ed\'e0 \'f0\'f3\'f1\'f1\'ea\'ee\'ec GNU libc.\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'ee\'f7\'e5\'ec\'f3 \'ed\'e0\'e4\'ee \'e4\'e5\'eb\'e0\'f2\'fc hello.h, \'e0 \'ed\'e5 \'ef\'f0\'ee\'f1\'f2\'ee \'e2 main.c \'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc #include hello.c?\cf0\kerning1\par
\cf1\kerning0\'ca \'ef\'f0\'e8\'ec\'e5\'f0\'f3: \'e2 main.c \'ec\'fb \'f1\'e4\'e5\'eb\'e0\'e5\'ec #include hello.c, \'e8 \'e2 util.c \'f2\'ee\'e6\'e5 #include hello.c - \'f3 \'eb\'e8\'ed\'ea\'ee\'e2\'f9\'e8\'ea\'e0 \'e1\'f3\'e4\'e5\'f2 \'e4\'e2\'e0 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'ff \'ee\'e4\'ed\'ee\'e9 \'e8 \'f2\'ee\'e9 \'e6\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 - \'ed\'e5 \'ef\'ee\'e9\'ec\'b8\'f2 \'f7\'f2\'ee \'e2\'fb\'e1\'f0\'e0\'f2\'fc - \'e2\'fb\'e4\'e0\'f1\'f2 \'ee\'f8\'e8\'e1\'ea\'f3.\cf0\kerning1\par
\cf1\kerning0\par
\'c1\'fb\'e2\'e0\'e5\'f2 \'ed\'e0\'e4\'ee \'f4\'e0\'e9\'eb a.h \'e2\'f1\'f2\'e0\'e2\'e8\'f2\'fc \'e2 b.h, \'e8 \'e2 \'f2\'ee\'e6\'e5 \'e2\'f0\'e5\'ec\'ff b.h \'e2\'f1\'f2\'e0\'e2\'e8\'f2\'fc \'e2 a.h. \'c4\'eb\'ff \'f2\'ee\'e3\'ee \'f7\'f2\'ee\'e1\'fb \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0 \'ed\'e5 \'f3\'f8\'b8\'eb \'e2 \'f6\'e8\'ea\'eb:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\cf1\kerning0 a.h\tab b.h\cf0\kerning1\par
\cf1\kerning0 #ifndef _a_H_\tab #ifndef _b_H_\cf0\kerning1\par
\cf1\kerning0   #define _a_H_\tab   #define _b_H_\cf0\kerning1\par
\cf1\kerning0   #include "b.h"\tab   #include "\'e0.h"\cf0\kerning1\par
\cf1\kerning0 #endif\tab #endif\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 2.\cf0\kerning1\b0\par
\cf1\kerning0\ul Makefile\ulnone :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\b gcc -E\b0\tab\tab\'e7\'e0\'ef\'f3\'f1\'f2\'e8\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0, \'e2\'fb\'e2\'ee\'e4 \'e1\'f3\'e4\'e5\'f2 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed\'e5\cf0\kerning1\par
\cf1\kerning0\b gcc -S\b0\tab\tab\'f1\'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'e2 \'e0\'f1\'f1\'e5\'ec\'e1\'eb\'e5\'f0, main.s\cf0\kerning1\par
\cf1\kerning0\b gcc -fno-pic\b0\tab\'f1\'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'e1\'e5\'e7 PIC (Position Independent Code), \'e4\'eb\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 kernel (xv6)\cf0\kerning1\par
\kerning0{\field{\*\fldinst{HYPERLINK "http://www.opennet.ru/docs/RUS/make_compile/make-2.html"}}{\fldrslt{\ul\cf2 http://www.opennet.ru/docs/RUS/make_compile/make-2.html}}}\kerning1\f0\fs22\par
\kerning0{\field{\*\fldinst{HYPERLINK "http://www.opennet.ru/docs/269.shtml"}}{\fldrslt{\ul\cf2 http://www.opennet.ru/docs/269.shtml}}}\kerning1\f0\fs22\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'ff \'e8\'e7\'ec\'e5\'ed\'e8\'eb \'ee\'e4\'e8\'ed \'f4\'e0\'e9\'eb .cpp, \'f2\'ee \'ec\'ed\'e5 \'ed\'e0\'e4\'ee \'e2\'fb\'e7\'e2\'e0\'f2\'fc gcc -c \'e8 \'ef\'e5\'f0\'e5\'f1\'ee\'e1\'f0\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'e5 \'f4\'e0\'e9\'eb\'fb. \'cc\'ee\'e6\'ed\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8:\cf0\kerning1\par
\cf1\kerning0\'cf\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'e7 main.cpp, util.cpp, util,h, str.cpp, str.h.\cf0\kerning1\par
\cf1\kerning0 main\tab\'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2\tab main.o, util.o str.o\cf0\kerning1\par
\cf1\kerning0 main.o\tab\'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2\tab main.cpp, util.h, str.h\cf0\kerning1\par
\cf1\kerning0 util.o\tab\'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2\tab util.cpp, util.h\cf0\kerning1\par
\cf1\kerning0 str.o\tab\'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2\tab str.cpp, str.h\cf0\kerning1\par
\cf1\kerning0 main\tab\'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2\tab main.o, util.o, str.o\cf0\kerning1\par
\cf1\kerning0\'d1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff ./MakeFile \'e8 \'e7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'f2\'f1\'ff \'ea\'ee\'ec\'e0\'ed\'e4\'ee\'e9 \b make -f MakeFile\cf0\kerning1\b0\par
\cf1\kerning0\'f1\'e0\'ec \'f4\'e0\'e9\'eb ./MakeFile\cf0\kerning1\par
\cf1\kerning0 main: main.o util.o str.o\cf0\kerning1\par
\cf1\kerning0 "tab"\tab gcc main.o ultil.o str.o -o main\cf0\kerning1\par
\cf1\kerning0 main.o: main.cpp util.h str.h\cf0\kerning1\par
\cf1\kerning0 "tab"\tab gcc main.cpp -c\cf0\kerning1\par
\cf1\kerning0 str.o: str.cpp str.h\cf0\kerning1\par
\cf1\kerning0\'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0\'c2\'f1\'ff \'fd\'f2\'e0 \'e1\'e0\'e9\'e4\'e0 \'f1\'f0\'e0\'e2\'ed\'e8\'e2\'e0\'e5\'f2 \'e4\'e0\'f2\'f3 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff, \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3, str.o (17:30), str.cpp (17:29) \'e8 str.h (18:00) -> \'e7\'ed\'e0\'f7\'e8\'f2 \'ed\'e0\'e4\'ee \'e4\'e5\'eb\'e0\'f2\'fc \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5.\cf0\kerning1\par
\cf1\kerning0\'c2 make \'ec\'ee\'e6\'ed\'ee \'e5\'f9\'b8 \'f1\'e4\'e5\'eb\'e0\'f2\'fc clean: rm -rf *.o\cf0\kerning1\par
\cf1\kerning0\par
\'ce\'f2 \'f7\'e5\'e3\'ee \'e7\'e0\'e2\'e8\'f1\'e8\'f2 main.o \'ec\'ee\'e6\'e5\'f2 \'ec\'e5\'ed\'ff\'f2\'fc\'f1\'ff. \'ca\'e0\'e6\'e4\'fb\'e9 \'f0\'e0\'e7 \'ed\'e0\'e4\'ee \'e8\'e7\'ec\'e5\'ed\'ff\'f2\'fc Makefile. \'cc\'ee\'e6\'ed\'ee \'f3\'ef\'f0\'ee\'f1\'f2\'e8\'f2\'fc. \'ca\'ee\'ec\'e0\'ed\'e4\'e0 gcc -M main.c \'f1\'e3\'e5\'ed\'e5\'f0\'e8\'f2 \'f4\'e0\'e9\'eb main.d c \'f1\'ee\'e4\'e5\'f0\'e6\'e0\'ed\'e8\'e5\'ec main.o: main.cpp util.h str.h \'cf\'ee\'f2\'ee\'ec \'ee\'f1\'f2\'e0\'b8\'f2\'f1\'ff \'e2 Makefile \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc include *.d\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0 - \'fd\'f2\'ee \'ec\'ed\'ee\'e3\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'f5 \'f4\'e0\'e9\'eb\'ee\'e2.\cf0\kerning1\par
\cf1\kerning0 1. \'d1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e0\'ff \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0. \'d0\'e0\'f1\'f8\'e8\'f0\'e5\'ed\'e8\'e5: Linux - .a, Windows - .lib\cf0\kerning1\par
\cf1\kerning0\'c2 Linux \'eb\'e5\'e6\'e8\'f2 \'f4\'e0\'e9\'eb libc.a \'ce\'ed \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'e7 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'f5 \'f4\'e0\'e9\'eb\'ee\'e2, \'e2 \'f7\'e0\'f1\'f2\'ed\'ee\'f1\'f2\'e8 printf.o \'dd\'f2\'ee\'f2 \'f4\'e0\'e9\'eb \'ea\'ee\'ef\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'e8\'e7 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'e8 \'ea\'ee\'ec\'ef\'e0\'ed\'f3\'e5\'f2\'f1\'ff \'f1 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'ed\'fb\'ec\'e8 \'f2\'e8\'ef\'e0 main.o, hello.o -> \'f2\'e5\'ec \'f1\'e0\'ec\'fb\'ec \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'ed\'fb\'e9 \'ea\'ee\'e4 \'f0\'e0\'f1\'f2\'b8\'f2 !!! \'c4\'eb\'ff \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'e9 \'f1\'e1\'ee\'f0\'ea\'e8 \'ed\'e0\'e4\'ee \b gcc -static\cf0\kerning1\b0\par
\cf1\kerning0 2. \'c4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8. \'d0\'e0\'f1\'f8\'e8\'f0\'e5\'ed\'e8\'e5: Linux.so, \'e2 Windows - .dll\cf0\kerning1\par
\cf1\kerning0\'ce\'e1\'fa\'e5\'ea\'f2\'ed\'fb\'e5 \'f4\'e0\'e9\'eb\'fb \'ed\'e5 \'ea\'ee\'ef\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3, \'e0 \'e7\'e0\'ef\'f0\'e0\'f8\'e8\'e2\'e0\'fe\'f2\'f1\'ff \'e2 \'ce\'d1. \'c2 \'ce\'d1 \'e7\'e0\'ef\'f0\'e0\'f8\'e8\'e2\'e0\'e5\'ec\'ee\'e9 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'ec\'ee\'e6\'e5\'f2 \'e8 \'ed\'e5 \'e1\'fb\'f2\'fc. \'c1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'ec\'ee\'e3\'f3\'f2 \'e8\'ec\'e5\'f2\'fc \'ec\'ed\'ee\'e3\'ee \'e2\'e5\'f0\'f1\'e8\'e9. \'d1 \'ee\'e4\'ed\'ee\'e9 \'e2\'e5\'f0\'f1\'e8\'e5\'e9 \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'e1\'f3\'e4\'e5\'f2, \'f1 \'e4\'f0\'f3\'e3\'ee\'e9 \'ec\'ee\'e6\'e5\'f2 \'e8 \'ed\'e5 \'e7\'e0\'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2.\cf0\kerning1\par
\cf1\kerning0\par
gcc - \'fd\'f2\'ee \'f1\'e5\'ec\'e5\'e9\'f1\'f2\'e2\'ee \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'ee\'e2: \'d1, \'d1++, Pascal \'e8 \'f2.\'e4. \'c5\'f1\'eb\'e8 gcc -c file.c - \'e7\'e0\'ef\'f3\'f1\'f2\'e8\'f2\'f1\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'d1. \'c5\'f1\'eb\'e8 gcc -c file.cpp - C++, \'f7\'f2\'ee \'f0\'e0\'e2\'ed\'ee\'f1\'e8\'eb\'fc\'ed\'ee g++ -c file.cpp (g++ \'fd\'f2\'ee \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'d1++ \'f3\'e6\'e5 \'ed\'e0 \'f0\'e0\'f1\'f8\'e8\'f0\'e5\'ed\'e8\'e5 \'ed\'e5 \'f1\'ec\'ee\'f2\'f0\'e8\'f2)\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'e8 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0 libc \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'e5\'f2\'f1\'ff \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8. C++ \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'e0\'ff \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0 STL \'f1 \'f4\'e0\'e9\'eb\'ee\'ec libstdc++ \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'fe\'f2\'f1\'ff \'ea\'e0\'ea \b gcc -l stdc++\b0 , \'e5\'f1\'eb\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 g++, \'f2\'ee STL \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'e5\'f2\'f1\'ff \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8.\cf0\kerning1\par
\cf1\kerning0\par
\'ca\'ee\'e3\'e4\'e0 \'f1\'ea\'e0\'f7\'e8\'e2\'e0\'e5\'ec \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'f3, \'ee\'ed\'e0 \'f1\'f0\'e0\'e7\'f3 \'e8\'e4\'b8\'f2 \'f1 2-\'ff \'f0\'e0\'f1\'f8\'e8\'f0\'e5\'ed\'e8\'ff\'ec\'e8 .a \'e8 .so\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cc\'e0\'f1\'f1\'e8\'e2\'fb\ulnone :\cf0\kerning1\par
\cf1\kerning0\b int array[10]\b0\tab //\'e7\'e0\'f0\'e5\'e7\'e5\'f0\'e2\'e8\'f0\'e2\'e0\'f2\'fc 10 \'ff\'f7\'e5\'e5\'ea \'ef\'e0\'ec\'ff\'f2\'e8 \'ed\'e0 \b\i\'d1\'f2\'e5\'ea\'e5\i0  \b0\'f0\'e0\'e7\'ec\'e5\'f0\'ee\'ec int, \'e8\'ec\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 array\cf0\kerning1\par
\cf1\kerning0\b sizeof(array)\b0\tab //\'f0\'e0\'e7\'ec\'e5\'f0 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'e2 \'e1\'e0\'e9\'f2\'e0\'f5. \'c2 \'ed\'e0\'f8\'e5\'ec \'ef\'f0\'e8\'ec\'e5\'f0\'e5 = 40. 10 \'ff\'f7\'e5\'ea \'ef\'ee int =  4 \'e1\'e0\'e9\'f2\'e0, \'e4\'eb\'ff 32 \'e1\'e8\'f2\'ed\'ee\'e9 \'e0\'f0\'f5\'e8\'f2\'e5\'ea\'f2\'f3\'f0\'fb\cf0\kerning1\par
\cf1\kerning0\'ce\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e5 \'ea \'ff\'f7\'e5\'e9\'ea\'e0\'ec array[1], array[0] - \'ec\'e0\'f1\'f1\'e8\'e2 \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff \'f1 0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0.\cf0\kerning1\par
\cf1\kerning0\b sizeof(array)/sizeof(a[0])\b0\tab //\'f3\'e7\'ed\'e0\'f2\'fc \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5\cf0\kerning1\par
\cf1\kerning0\par
\'cd\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f1\'ef\'ee\'f1\'ee\'e1\'ee\'e2 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8:\cf0\kerning1\par
\cf1\kerning0 int array[10]\tab\tab //\'e2\'f1\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'f1\'ee\'e4\'e5\'f0\'e6\'e0\'f2 random\cf0\kerning1\par
\cf1\kerning0 int array[10]=\{12\}\tab //\'ef\'e5\'f0\'e2\'fb\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'f3\'e5\'f2\'f1\'ff =12 -> \'e2\'f1\'e5 \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'fb\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e1\'f3\'e4\'f3\'f2 =0, \'f2.\'e5. \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'f5\'ee\'f2\'ff \'e1\'fb \'ee\'e4\'e8\'ed \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e4\'eb\'ff \'f2\'ee\'e3\'ee \'f7\'f2\'ee\'e1\'fb \'e2\'f1\'e5 \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'fb\'e5 \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'eb\'e8\'f1\'fc =0\cf0\kerning1\par
\cf1\kerning0 int array[10]=\{0,1,2,3,4,5,6,7,8,9\}\tab\tab //\'ef\'ee\'eb\'ed\'e0\'ff \'e7\'e0\'ef\'e8\'f1\'fc\cf0\kerning1\par
\cf1\kerning0 int array[]=\{0,1,2,3,4,5,6,7,8,9\}\tab\tab //\'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'e0\'ec \'ef\'ee\'f1\'f7\'e8\'f2\'e0\'e5\'f2 \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2\cf0\kerning1\par
\cf1\kerning0\'cd\'fc\'fe\'e0\'ed\'f1\'fb:\cf0\kerning1\par
\cf1\kerning0 char array[]=\{'H','e','l','l','o'\}\tab //\'ec\'e0\'f1\'f1\'e8\'e2 \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'f5 5 \'ff\'f7\'e5\'e5\'ea\cf0\kerning1\par
\cf1\kerning0 char array[]=\{"Hello"]\tab\tab //\'ec\'e0\'f1\'f1\'e8\'e2 \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'e7 6 \'ff\'f7\'e5\'e5\'ea, \'f2\'e0\'ea \'ea\'e0\'ea \'f1\'f2\'f0\'ee\'ea\'e0 \'e4\'ee\'eb\'e6\'ed\'e0 \'e7\'e0\'ea\'e0\'ed\'f7\'e8\'e2\'e0\'f2\'fc\'f1\'ff \'ed\'e0 "0" - 6-\'ee\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\cf0\kerning1\par
\cf1\kerning0\'c4\'e2\'f3\'f5\'ec\'e5\'f0\'ed\'fb\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'fb:\cf0\kerning1\par
\cf1\kerning0 int M[2][2];\cf0\kerning1\par
\cf1\kerning0 int M[2][2]=\{\{1,2\},\{3,4\}\} \'f7\'f2\'ee \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee int M[2][2]=\{1,2,3,4\}\cf0\kerning1\par
\cf1\kerning0\'c8\'ed\'e4\'e5\'ea\'f1\'fb: \'e5\'f1\'f2\'fc \'ec\'e0\'f1\'f1\'e8\'e2 int array[10]; \'f2.\'e5. \'e8\'ed\'e4\'e5\'ea\'f1\'fb \'ed\'f3\'ec\'e5\'f0\'f3\'fe\'f2\'f1\'ff \'ee\'f2 0..9\cf0\kerning1\par
\cf1\kerning0\'c2\'e5\'f9\'e8 \'ea\'e0\'ea array[-1] \'e8\'eb\'e8 array[12] - \'ed\'e5 \'ea\'ee\'ed\'f2\'f0\'ee\'eb\'e8\'f0\'f3\'fe\'f2\'f1\'ff, \'e2\'fb\'f5\'ee\'e4 \'e7\'e0 \'e3\'f0\'e0\'ed\'e8\'f6\'fb \'ec\'e0\'f1\'f1\'e8\'e2\'e0, \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'cd\'c5 \'e7\'e0\'f0\'f3\'e3\'e0\'e5\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8\ulnone :\cf0\kerning1\par
\cf1\kerning0\b char* p\b0\tab\tab //\'f5\'f0\'e0\'ed\'e8\'f2\'f1\'ff \'e0\'e1\'f1\'ee\'eb\'fe\'f2\'ed\'fb\'e9 \'e0\'e4\'f0\'e5\'f1 \'ff\'f7\'e5\'e9\'ea\'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'f2\'e8\'ef\'e0 char. \'d1\'e0\'ec \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'e2\'f1\'e5\'e3\'e4\'e0 \'f2\'e8\'ef\'e0 int = 4 \'e1\'e0\'e9\'f2\'e0 \'e5\'f1\'f2\'fc \'f532bit\cf0\kerning1\par
\cf1\kerning0 int a\tab\tab //\'ee\'e1\'fb\'f7\'ed\'e0\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff\cf0\kerning1\par
\cf1\kerning0 p=&a\tab\tab //\'e2\'e7\'ff\'f2\'e8\'e5 \'e0\'e1\'f1\'ee\'eb\'fe\'f2\'ed\'ee\'e3\'ee \'e0\'e4\'f0\'e5\'f1\'e0 \'ef\'e0\'ec\'ff\'f2\'e8, \'e3\'e4\'e5 \'eb\'e5\'e6\'e8\'f2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff a\cf0\kerning1\par
\cf1\kerning0 b=*p\tab\tab //\'ef\'f0\'e8\'f1\'e2\'ee\'e8\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 b \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5, \'ea\'ee\'f2\'ee\'f0\'ee\'e5 \'eb\'e5\'e6\'e8\'f2 \'ef\'ee \'e0\'e1\'f1\'ee\'eb\'fe\'f2\'ed\'ee\'ec\'f3 \'e0\'e4\'f0\'e5\'f1\'f3, \'f5\'f0\'e0\'ed\'ff\'f9\'e8\'ec\'f3\'f1\'ff \'e2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 p\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d1\'e2\'ff\'e7\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e5\'e9 \'e8 \'ec\'e0\'f1\'f1\'e8\'e2\'ee\'e2\ulnone :\cf0\kerning1\par
\cf1\kerning0 char array[10]\cf0\kerning1\par
\cf1\kerning0 char* p=array\cf0\kerning1\par
\cf1\kerning0 p=&array[0]\tab //\'e0\'e1\'f1\'ee\'eb\'fe\'f2\'ed\'fb\'e9 \'e0\'e4\'f0\'e5\'f1 \'ef\'e0\'ec\'ff\'f2\'e8, \'f1 \'ea\'ee\'f2\'ee\'f0\'ee\'e3\'ee \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff \'ec\'e0\'f1\'f1\'e8\'e2\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c0\'f0\'e8\'f4\'ec\'e5\'f2\'e8\'ea\'e0 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e5\'e9\ulnone :\cf0\kerning1\par
\cf1\kerning0 int i[10]\cf0\kerning1\par
\cf1\kerning0 char c[10]\cf0\kerning1\par
\cf1\kerning0 int* pi=&i[0]\cf0\kerning1\par
\cf1\kerning0 char* pc=&c[0]\cf0\kerning1\par
\cf1\kerning0 pi+=1\tab //\'e0\'e4\'f0\'e5\'f1 \'f3\'e2\'e5\'eb\'e8\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'ed\'e0 \'f0\'e0\'e7\'ec\'e5\'f0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0, \'f2.\'e5. \'e4\'eb\'ff pi - \'fd\'f2\'ee \'e1\'f3\'e4\'e5\'f2 +4 \'e1\'e0\'e9\'f2\'e0, \'f2\'e0\'ea \'ea\'e0\'ea i - \'fd\'f2\'ee int\cf0\kerning1\par
\cf1\kerning0 pc+=1\tab //\'e4\'eb\'ff pc - \'fd\'f2\'ee \'e1\'f3\'e4\'e5\'f2 +1 \'e1\'e0\'e9\'f2, \'f2\'e0\'ea \'ea\'e0\'ea \'f1 - \'fd\'f2\'ee char\cf0\kerning1\par
\cf1\kerning0\par
\'c8\'e3\'f0\'fb \'f0\'e0\'e7\'f3\'ec\'e0:\cf0\kerning1\par
\cf1\kerning0 i[3] - \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'f3\'e5\'f2 \'fd\'f2\'ee \'e2 *(i+3), \'ef\'f0\'e8\'ea\'ee\'eb -> 3[i] \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f2\'e0\'ea\'e6\'e5 \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'f3\'e5\'f2 \'e2 *(3+i)\cf0\kerning1\par
\cf1\kerning0\'d2.\'e5 \'ea\'ee\'e3\'e4\'e0 \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'ec \'f1 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\'ec\'e8, \'d4\'c0\'ca\'d2\'c8\'d7\'c5\'d1\'ca\'c8 \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'ec \'f1 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff\'ec\'e8 \'e8\'e7 \'ef\'ff\'ec\'ff\'f2\'e8 -> \'f1\'ea\'ee\'f0\'ee\'f1\'f2\'fc.\cf0\kerning1\par
\cf1\kerning0\'d1\'ea\'eb\'e0\'e4\'fb\'e2\'e0\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \'ed\'e5\'eb\'fc\'e7\'ff - \'ed\'e5\'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff. \'c2\'fb\'f7\'e8\'f2\'e0\'f2\'fc \'ec\'ee\'e6\'ed\'ee - \'ea\'ee\'e3\'e4\'e0 ....\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8, \'e2 \'f1\'f2\'e5\'ea\'e5 \'e2\'fb\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'e0\'ec\'ff\'f2\'fc:\cf0\kerning1\par
\cf1\kerning0 1. \'e4\'eb\'ff \'eb\'ee\'ea\'e0\'eb\'fc\'ed\'fb\'f5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ee\'ef\'e8\'f1\'e0\'ed\'fb \'e2 \'f2\'e5\'eb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0 2. \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'e5\'ec\'fb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ee\'ef\'e8\'f1\'e0\'ed\'fb \'e2 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0 3. \'f2\'ee\'f7\'ea\'e0 \'e2\'ee\'e7\'e2\'f0\'e0\'f2\'e0\cf0\kerning1\par
\cf1\kerning0\par
\'c7\'ed\'e0\'f7\'e5\'ed\'e8\'ff \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'ff\'f5:\cf0\kerning1\par
\cf1\kerning0 main.c\cf0\kerning1\par
\cf1\kerning0 hello (int x; int y=30, int z=40);\tab //\'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 hello \'e2\'f2\'ee\'f0\'ee\'e9 \'e8 \'f2\'f0\'e5\'f2\'e8\'e9 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'e8\'ec\'e5\'fe\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff 30 \'e8 40\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0    int a=10, b=20;\cf0\kerning1\par
\cf1\kerning0    hello(a,b);\tab //\'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe hello \'ef\'e5\'f0\'e5\'e4\'e0\'e4\'f3\'f2\'f1\'ff \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb 10, 20 \'e8 40\cf0\kerning1\par
\cf1\kerning0    hello(a);\}\tab //\'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe hello \'ef\'e5\'f0\'e5\'e4\'e0\'e4\'f3\'f2\'f1\'ff \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb 10, 30 \'e8 40\cf0\kerning1\par
\cf1\kerning0\'cf\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'ec\'ee\'e3\'f3\'f2 \'e1\'fb\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'ef\'ee\'f1\'eb\'e5\'e4\'ed\'e8\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb, \'f2.\'e5. \'ed\'e5\'eb\'fc\'e7\'ff \'e4\'e5\'eb\'e0\'f2\'fc \'f2\'e0\'ea: hello (int x=10, int y, int z)\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 3.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'d1\'f1\'fb\'eb\'ea\'e8\ulnone  \cf4\b\'e5\'f1\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'d1++\cf1\b0 :\cf0\kerning1\par
\cf1\kerning0\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0    int a=10;\cf0\kerning1\par
\cf1\kerning0    int& b=a;\tab //\'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff b - \'fd\'f2\'ee \'e4\'f0\'f3\'e3\'ee\'e9 "\'e2\'e8\'e4" \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 a\cf0\kerning1\par
\cf1\kerning0    int c=100;\cf0\kerning1\par
\cf1\kerning0    &b = c\cf0\kerning1\par
\cf1\kerning0    printf("a=%d, b=%d",a,b);\cf0\kerning1\par
\cf1\kerning0    a=20;\cf0\kerning1\par
\cf1\kerning0    printf("a=%d, b=%d",a,b);\cf0\kerning1\par
\cf1\kerning0    b=30;\cf0\kerning1\par
\cf1\kerning0    printf("a=%d, b=%d",a,b);\}\cf0\kerning1\par
\cf1\kerning0\'c2\'fb\'e2\'ee\'e4:\cf0\kerning1\par
\cf1\kerning0 a=10 b=10\cf0\kerning1\par
\cf1\kerning0 a=20 b=20\cf0\kerning1\par
\cf1\kerning0 a=30 b=30\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0\'c1\'fb\'eb\'ee \'e1\'e5\'e7 \'f1\'f1\'fb\'eb\'ee\'ea.\tab\'d1\'f2\'e0\'eb\'ee \'f1 \'f1\'fb\'eb\'ea\'e0\'ec\'e8.\cf0\kerning1\par
\cf1\kerning0 int swap(int* a,int* b)\{\tab int swap(int& a,int& b)\{\cf0\kerning1\par
\cf1\kerning0    int tmp=*a;\tab    int tmp=a;\cf0\kerning1\par
\cf1\kerning0    *a=*b;\tab    a=b;\cf0\kerning1\par
\cf1\kerning0    *b=tmp;\}\tab    b=tmp;\}\cf0\kerning1\par
\cf1\kerning0 main()\{\tab main()\{\cf0\kerning1\par
\cf1\kerning0    int x=3;\tab    int x=3;\cf0\kerning1\par
\cf1\kerning0    int y=5;\tab    int y=5;\cf0\kerning1\par
\cf1\kerning0    swap(&x,&y);\tab    swap(x,y);\cf0\kerning1\par
\cf1\kerning0    return 0;\}\tab    return 0;\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\par
\kerning0\'c2 \'ec\'ee\'ec\'e5\'ed\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8, \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'e3\'e5\'ed\'e5\'f0\'e8\'f0\'f3\'e5\'f2 \'f2\'ee\'f2 \'e6\'e5 \'f1\'e0\'ec\'fb\'e9 \'ea\'ee\'e4, \'ed\'ee \'ef\'ee\'e2\'fb\'f1\'e8\'f2\'f1\'ff \'f7\'e8\'f2\'e0\'e5\'ec\'ee\'f1\'f2\'fc \'ea\'ee\'e4\'e0.\cf0\kerning1\par
\cf1\par
\kerning0 1. \'d1\'f1\'fb\'eb\'ea\'e0 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ee\'e4\'e8\'ed \'f0\'e0\'e7, \'f1\'f0\'e0\'e7\'f3 \'ef\'f0\'e8\'e2\'ff\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ea \'ee\'e1\'fa\'e5\'ea\'f2\'f3 \'e8 \'e5\'b8 \'ed\'e5\'eb\'fc\'e7\'ff \'ef\'e5\'f0\'e5\'ed\'e0\'e7\'ed\'e0\'f7\'e8\'f2\'fc \'ed\'e0 \'e4\'f0\'f3\'e3\'ee\'e9 \'ee\'e1\'fa\'e5\'ea\'f2. \'cd\'e5\'eb\'fc\'e7\'ff \'e4\'e5\'eb\'e0\'f2\'fc: int& a (\'ef\'f0\'ee\'f1\'f2\'ee \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 \'ed\'e5\'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'fe\'f9\'f3\'fe \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe) \'e8 int& a = NULL\cf0\kerning1\par
\cf1\kerning0 2. \'d1\'f1\'fb\'eb\'ea\'e0 \'e2\'f1\'e5\'e3\'e4\'e0 \'e4\'ee\'eb\'e6\'ed\'e0 \'e1\'fb\'f2\'fc \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'e0. \'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e5\'f2.\cf0\kerning1\par
\cf1\kerning0 3. \'d1\'f1\'fb\'eb\'ea\'e0 \'e2\'f1\'e5\'e3\'e4\'e0 \'e4\'ee\'eb\'e6\'ed\'e0 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'ed\'e0 \'f0\'e5\'e0\'eb\'fc\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2. \'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ec\'ee\'e6\'e5\'f2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'ed\'e0 null.\cf0\kerning1\par
\cf1\kerning0 4. \'d1\'f1\'fb\'eb\'ea\'f3 \'ed\'e5\'eb\'fc\'e7\'ff \'f3\'e4\'e0\'eb\'e8\'f2\'fc. \'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fe \'ec\'ee\'e6\'ed\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc =null.\cf0\kerning1\par
\cf1\kerning0 4. \'c4\'eb\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f1\'f1\'fb\'eb\'ee\'ea \'ed\'e5 \'ed\'e0\'e4\'ee \'e2\'f1\'ff\'ea\'e8\'f5 *->  \'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0 5. \'cd\'e5\'eb\'fc\'e7\'ff \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 \'f1\'f1\'fb\'eb\'ea\'f3. \'cc\'ee\'e6\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc.\cf0\kerning1\par
\cf1\kerning0 6. \'d1\'f1\'fb\'eb\'ea\'e8 \'ed\'e5 \'ec\'ee\'e3\'f3\'f2 \'e1\'fb\'f2\'fc \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'fb \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 Linked List, Tree, Queue \'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0 7. \'c5\'f1\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'e2\'e5\'f9\'e5\'e9 \'e3\'e4\'e5 \'ed\'e5 \'ec\'ee\'e3\'f3\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \endash  Copy Constructor, Move Constructor \'85\cf0\kerning1\par
\cf1\kerning0 8. \'cd\'e0\'e4 \'f1\'f1\'fb\'eb\'ea\'e0\'ec\'e8 \'ed\'e5\'eb\'fc\'e7\'ff \'e4\'e5\'eb\'e0\'f2\'fc \'e0\'f0\'e8\'f4\'ec\'e5\'f2\'e8\'f7\'e5\'f1\'ea\'e8\'e5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e8. \'cd\'e0\'e4 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff\'ec\'e8 \'ec\'ee\'e6\'ed\'ee Arithmetic on pointers.\cf0\kerning1\par
\cf1\kerning0 9. \b\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f1\'f1\'fb\'eb\'ea\'e5 \'f2\'e0\'ec \'e3\'e4\'e5 \'ec\'ee\'e6\'ed\'ee \'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \'f2\'e0\'ec \'e3\'e4\'e5 \'e2\'fb\'ed\'f3\'e6\'e4\'e5\'ed\'fb\b0 .\cf0\kerning1\par
\cf1\par
\kerning0\'c7\'e0\'e1\'e0\'e2\'ed\'fb\'e5 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e8:\cf0\kerning1\par
\cf1\kerning0 class A\{\cf0\kerning1\par
\cf1\kerning0\tab A  getObject()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab return *this;\cf0\kerning1\par
\cf1\kerning0\tab A& getReference()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab return *this;\tab\'f2.\'e5. \'f7\'f2\'ee \'f1\'f1\'fb\'eb\'ea\'f3, \'f7\'f2\'ee \'ef\'f0\'ee\'f1\'f2\'ee \'ee\'e1\'fa\'e5\'ea\'f2, \'ec\'fb \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'ec \'ea\'e0\'ea *this\cf0\kerning1\par
\cf1\kerning0\tab A* getPointer()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab return this;\cf0\kerning1\par
\cf1\kerning0\par
\'d2.\'e5. \'f3 \'e7\'ed\'e0\'f7\'ea\'e0 \b &\b0  \'e5\'f1\'f2\'fc \'e4\'e2\'e0 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff:\cf0\kerning1\par
\cf1\kerning0 1. \'c2\'e7\'ff\'f2\'e8\'e5 \'e0\'e4\'f0\'e5\'f1\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9: int a=5; int* p=&a;\cf0\kerning1\par
\cf1\kerning0 2. \'d1\'f1\'fb\'eb\'ea\'e0 func(int& b)\cf0\kerning1\par
\cf1\kerning0\par
\'ca\'ee\'f0\'ee\'f2\'ea\'ee:\cf0\kerning1\par
\cf1\kerning0 1. \'c3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'e0\'ff \'ef\'e0\'ec\'ff\'f2\'fc: \'eb\'e5\'e6\'e0\'f2 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 + \'ea\'ee\'e4 \'f1\'e0\'ec\'ee\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb, \'e3\'eb\'e0\'e2\'ed\'ee\'e5 - \'f4\'f3\'ed\'ea\'f6\'e8\'e8. \'cf\'e0\'ec\'ff\'f2\'fc \'e2\'fb\'e4\'e5\'eb\'ff\'e5\'f2 \'ce\'d1.\cf0\kerning1\par
\cf1\kerning0 2. \'d1\'f2\'e5\'ea: \'eb\'e5\'e6\'e0\'f2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'ec\'fb\'f5 \'f4\'f3\'ed\'ea\'f6\'e8\'e9, \'f3\'e4\'e0\'eb\'ff\'fe\'f2\'f1\'ff \'ef\'f0\'e8 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0\'f5. \'c2\'fb\'f1\'ee\'ea\'e0\'ff \'f1\'ea\'ee\'f0\'ee\'f1\'f2\'fc \'f0\'e0\'e1\'ee\'f2\'fb \'f1\'ee \'f1\'f2\'e5\'ea\'ee\'ec. \'ce\'e3\'f0\'e0\'ed\'e8\'f7\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'b8\'ec.\cf0\kerning1\par
\cf1\kerning0 3. \'ca\'f3\'f7\'e0: \'f1 \'ed\'e5\'e9 \'f1\'e0\'ec \'e4\'e5\'eb\'e0\'e5\'f8\'fc \'f7\'f2\'ee \'f5\'ee\'f7\'e5\'f8\'fc, \'ea\'e0\'ea \'ef\'f0\'e0\'e2\'e8\'eb\'ee \'ec\'e0\'f1\'f1\'e8\'e2\'fb. \'cd\'e8\'e7\'ea\'e0\'ff \'f1\'ea\'ee\'f0\'ee\'f1\'f2\'fc \'ee\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'ff. \'c1\'ee\'eb\'fc\'f8\'ee\'e9 \'ee\'e1\'fa\'b8\'ec.\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ee\'e1\'fb\'f7\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5, \'e7\'e0\'ec\'e5\'ed\'ff\'fe\'f2\'f1\'ff \'ed\'e0 \'e0\'e4\'f0\'e5\'f1\'e0, \'e8 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.o \'f3\'e6\'e5 \'ed\'e5\'f2 \'ed\'e0\'e7\'e2\'e0\'ed\'e8\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5, \'e0 \'e5\'f1\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'e0\'e4\'f0\'e5\'f1\'e0. \'d1 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'fb\'ec\'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'ec\'e8 (\'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'ed\'fb\'ec\'e8 \'ea\'e0\'ea extern) \'ef\'ee \'e4\'f0\'f3\'e3\'ee\'ec\'f3. \'c8\'f5 \'ed\'e0\'e7\'e2\'e0\'ed\'e8\'ff \'ed\'f3\'e6\'ed\'fb \'ef\'f0\'e8 \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'e5, \'f2.\'e5. \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'ed\'e0\'ff \'e2 \'ee\'e4\'ed\'ee\'ec \'f4\'e0\'e9\'eb\'e5, \'ed\'f3\'e6\'ed\'e0 \'e2 \'e4\'f0\'f3\'e3\'ee\'ec.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'e0\'ff \'ef\'e0\'ec\'ff\'f2\'fc\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'f2\'f1\'ff \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0. \'c2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'ee, \'f1\'ea\'ee\'eb\'fc\'ea\'ee \'e5\'e9 \'ed\'e0\'e4\'ee \'ef\'e0\'ec\'ff\'f2\'e8 (\'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'ee\'e9 \'ef\'e0\'ec\'ff\'f2\'e8). \'cf\'e0\'ec\'ff\'f2\'fc \'e5\'f1\'f2\'fc - \'f5\'ee\'f0\'ee\'f8\'ee, \'ef\'e0\'ec\'ff\'f2\'e8 \'ed\'e5\'f2 - \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e0\'e2\'e0\'f0\'e8\'e9\'ed\'ee \'e7\'e0\'e2\'e5\'f0\'f8\'e0\'e5\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\'cf\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ee\'ef\'e8\'f1\'e0\'ed\'ed\'e0\'ff \'e2\'ed\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8, \'e2\'e8\'e4\'ed\'e0 \'e2\'ee \'e2\'f1\'e5\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8.\cf0\kerning1\par
\cf1\kerning0 int b=0;\tab\tab //\'e4\'eb\'ff b \'e2\'fb\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff 4 \'e1\'e0\'e9\'f2\'e0. \'cf\'e0\'ec\'ff\'f2\'fc \'ef\'ee\'e4 b \'e2\'fb\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'f0\'e8 \'e7\'e0\'ef\'f3\'f1\'ea\'e5 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb.\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0 return 1;\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\tx3976 main.cpp\tab hello.cpp\cf0\kerning1\par
\cf1\kerning0 int main()\{\tab int b=3;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0    b=5;\}\tab void hello()\{\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'cf\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'ed\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff, \'f2\'e0\'ea \'ea\'e0\'ea:\cf0\kerning1\par
\cf1\kerning0 1. \'c2 \'d1\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'ff \'f0\'e0\'e7\'e4\'e5\'eb\'fc\'ed\'e0\'ff. \'d4\'e0\'e9\'eb main.cpp \'ed\'e5\'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff, \'f2\'e0\'ea \'ea\'e0\'ea \'e2 \'ed\'b8\'ec \'ed\'e5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff b -> \'eb\'e5\'f7\'e8\'f2\'f1\'ff \'e7\'e0\'e3\'ee\'eb\'ee\'e2\'ee\'f7\'ed\'fb\'ec \'f4\'e0\'e9\'eb\'ee\'ec hello.h \'ce\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff: int b. \'c2 main.cpp \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'ec #include hello.h\cf0\kerning1\par
\cf1\kerning0 2. \'cd\'e0 \'f3\'f0\'ee\'e2\'ed\'e5 \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'e8 \'e1\'f3\'e4\'f3\'f2 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb, \'f2\'e0\'ea \'ea\'e0\'ea \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff b \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0 \'e2 2-\'f5 \'ec\'e5\'f1\'f2\'e0\'f5: \'e2 hello.h -> main.cpp \'e8 \'e2 hello.cpp \'cb\'e5\'f7\'e8\'f2\'f1\'ff: \'e2 hello.h \'ec\'fb \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe b \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'ec \'ed\'e5 \'ea\'e0\'ea int b, \'e0 \'ea\'e0\'ea extern int b - \'ea\'e0\'ea \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'f3\'fe \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe.\cf0\kerning1\par
\cf1\kerning0 3. \'cb\'f3\'f7\'f8\'e5 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'ed\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d1\'f2\'e5\'ea\ulnone :\cf0\kerning1\par
\cf1\kerning0\'d1\'ed\'e0\'f7\'e0\'eb\'e0 \'e2 \'f1\'f2\'e5\'ea \'ef\'ee\'ef\'e0\'e4\'e0\'fe\'f2 "\'ef\'ee\'eb\'ff" (\'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'e8\'eb\'e8 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb) \'f4\'f3\'ed\'ea\'f6\'e8\'e8 main(), \'ef\'ee\'f2\'ee\'ec \'f4\'f3\'ed\'ea\'f6\'e8\'ff main \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe f() -> \'e2 \'f1\'f2\'e5\'ea \'ef\'ee\'ef\'e0\'e4\'e0\'fe\'f2 \'ef\'ee\'eb\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff f \'f1\'ee \'e2\'f1\'e5\'ec\'e8 \'f1\'e2\'ee\'e8\'ec\'e8 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8 \'e8 \'f2\'ee\'f7\'ea\'ee\'e9 \'e2\'ee\'e7\'e2\'f0\'e0\'f2\'e0, \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'fe\'f9\'e5\'e9 \'ea\'f3\'e4\'e0-\'f2\'ee \'e2 main. \'d4\'f3\'ed\'ea\'f6\'e8\'ff f \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe g() -> \'e2 \'f1\'f2\'e5\'ea \'ef\'ee\'ef\'e0\'e4\'e0\'fe\'f2 \'ef\'ee\'eb\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff g \'f1\'ee \'f1\'e2\'ee\'e8\'ec\'e8 \'eb\'ee\'ea\'e0\'eb\'fc\'ed\'fb\'ec\'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'ec\'e8. \'ca\'e0\'ea \'f2\'ee\'eb\'fc\'ea\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'ff g \'e7\'e0\'ea\'ee\'ed\'f7\'e8\'eb\'e0 \'f0\'e0\'e1\'ee\'f2\'f3, \'ee\'ed\'e0 \'f3\'e4\'e0\'eb\'ff\'e5\'f2\'f1\'ff \'e8\'e7 \'f1\'f2\'e5\'ea\'e0, \'ea\'e0\'ea \'e8 \'e2\'f1\'e5 \'e5\'b8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5.\cf0\kerning1\par
\cf1\kerning0\'c2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ef\'e0\'ec\'e0\'f2\'e8 \'e2 \'f1\'f2\'e5\'ea\'e5 \'f0\'e0\'f1\'f7\'e8\'f2\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 4.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'c4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e0\'ff \'ef\'e0\'ec\'ff\'f2\'fc\ulnone  \'e8\'eb\'e8 \'ca\'f3\'f7\'e0:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'ce\'f2\'ed\'ee\'f1\'e8\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'ea \'d1\'e8 !!!\cf0\kerning1\par
\cf1\kerning0 #include <stdlib.h>\cf0\kerning1\par
\cf1\kerning0 int* p=malloc(1000*sizeof(int))\tab //\'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0 - \'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ef\'e0\'ec\'ff\'f2\'e8 \'ed\'e0\'e4\'ee \'e2\'fb\'e4\'e5\'eb\'e8\'f2\'fc. \'c0\'e4\'f0\'e5\'f1 \'ef\'e5\'f0\'e2\'ee\'e9 \'ff\'f7\'e5\'e9\'ea\'e5 \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2 *p.\cf0\kerning1\par
\cf1\kerning0 free(p)\tab\tab\tab\tab //\'ee\'f1\'e2\'ee\'e1\'ee\'e4\'e8\'f2\'fc \'ef\'e0\'ec\'ff\'f2\'fc\cf0\kerning1\par
\cf1\kerning0 p[0]..p[999]\tab\tab\tab //\'ee\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e5 \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec\cf0\kerning1\par
\cf1\kerning0 void* malloc(size_t size)\tab\tab //\'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 malloc, \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0 \'ed\'ee\'e2\'fb\'e9 \'f2\'e8\'ef size_t. \'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 void* - \'f3\'ed\'e8\'e2\'e5\'f0\'f1\'e0\'eb\'fc\'ed\'fb\'e9 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ec\'ee\'e6\'ed\'ee \'ef\'f0\'e8\'e2\'e5\'f1\'f2\'e8 \'ea \'eb\'fe\'e1\'ee\'ec\'f3 \'f2\'e8\'ef\'f3. malloc \'ed\'f3\'e6\'e5\'ed \'ea\'e0\'ea int, \'f2\'e0\'ea \'e8 char, \'f2\'e0\'ea \'e8 float \'e8 \'f2.\'e4. - \'f1\'e4\'e5\'eb\'e0\'eb\'e8 \'ee\'e1\'ee\'e1\'f9\'b8\'ed\'ed\'fb\'e9 \'f2\'e8\'ef void.\cf0\kerning1\par
\cf1\kerning0 typedef unsigned int size_t\tab //\'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff "\'ed\'ee\'e2\'fb\'e9" \'f2\'e8\'ef size_t - \'e8\'e7 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 stdlib.h \'c7\'e0\'ec\'ee\'f0\'ee\'f7\'ea\'e8 \'e2 \'f2\'ee\'ec, \'f7\'f2\'ee \'f0\'e0\'e7\'f0\'ff\'e4\'ed\'ee\'f1\'f2\'fc int \'ed\'e0 \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 CPU \'e2\'e0\'f0\'e8\'f0\'f3\'e5\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0 #define \'ee\'f2\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'e5\'f2 \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0\'e0. typedef - \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8. #define \'ee\'f2\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'e5\'f2 \'f1 \'ec\'e5\'f1\'f2\'e0 \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'e8\'ff \'e4\'ee \'ea\'ee\'ed\'f6\'e0 \'f2\'e5\'ea\'f1\'f2\'ee\'e2\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'e0, \'ee\'e1\'eb\'e0\'f1\'f2\'fc \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 typedef \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'ee\'e3\'f0\'e0\'ed\'e8\'f7\'e5\'ed\'ed\'e0 \'ee\'e1\'eb\'e0\'f1\'f2\'fc\'fe \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8.\cf0\kerning1\par
\cf1\kerning0\tab typedef float* float_ptr;\cf0\kerning1\par
\cf1\kerning0\tab #define FLOAT_PTR  float*\cf0\kerning1\par
\cf1\kerning0\tab float_ptr pf1, pf2;\tab\tab //\'f3 \'ee\'e1\'e5\'e8\'f5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 \'f2\'e8\'ef float*\cf0\kerning1\par
\cf1\kerning0\tab FLOAT_PTR PF1, PF2;\tab\tab //= float *PF1, PF2, \'f2.\'e5. \'f3 PF1 \'f2\'e8\'ef \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 float* , \'e0 \'f3 PF2 \'f2\'e8\'ef \'ef\'f0\'ee\'f1\'f2\'ee\'e9 float\cf0\kerning1\par
\cf1\kerning0\'c2 \'ee\'e1\'f9\'e5\'ec, \'ea\'ee\'e3\'e4\'e0 \'ed\'e0\'e4\'ee \'ef\'e5\'f0\'e5\'e8\'ec\'e5\'ed\'ee\'e2\'e0\'f2\'fc \'f2\'e8\'ef \'e4\'eb\'ff \'e3\'e8\'e1\'ea\'ee\'f1\'f2\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ef\'ee\'e4 \'f0\'e0\'e7\'ed\'fb\'e5 CPU \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee typedef!\cf0\kerning1\par
\cf1\kerning0\par
\'c2\'ec\'e5\'f1\'f2\'ee:\cf0\kerning1\par
\cf1\kerning0 double (*pf)(int,int);\cf0\kerning1\par
\cf1\kerning0\'cc\'ee\'e6\'ed\'ee:\cf0\kerning1\par
\cf1\kerning0 typedef double (*FUNCPTR)(int,int);\cf0\kerning1\par
\cf1\kerning0 FUNCPTR pf;\cf0\kerning1\par
\cf1\kerning0\par
\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'f1\'e8\'f1\'f2\'e5\'ec\'e0 \'e2\'fb\'e4\'e5\'eb\'e8\'eb\'e0 \'ea\'f3\'f1\'ee\'ea \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'ee\'e9 \'ef\'e0\'ec\'ff\'f2\'e8, \'ce\'d1 \'e4\'ee\'eb\'e6\'ed\'e0 \'ef\'f0\'ee\'e1\'e5\'e6\'e0\'f2\'fc\'f1\'ff \'ef\'ee \'f1\'e2\'ee\'e8\'ec \'f2\'e0\'e1\'eb\'e8\'f6\'e0\'ec \'e8 \'ed\'e0\'e9\'f2\'e8 \'ea\'f3\'f1\'ee\'ea \'cd\'c5\'cf\'d0\'c5\'d0\'db\'c2\'cd\'ce\'c3\'ce \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee\'e3\'ee \'f0\'e0\'e7\'ec\'e5\'f0\'e0. \'d2.\'e5. \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'e2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'ff \'f1\'e0\'ec\'ee\'e9 \'ef\'e0\'ec\'ff\'f2\'e8 \'ed\'e5 \'f2\'e0\'ea\'ee\'e9 \'e1\'fb\'f1\'f2\'f0\'fb\'e9.\cf0\kerning1\par
\cf1\kerning0\par
\'c2 \'d1++ \'e2\'f1\'b8 \'ef\'f0\'ee\'f9\'e5... \cf0\kerning1\par
\cf1\kerning0\b int* p=new int[100]\b0\tab //\'e2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ef\'e0\'ec\'ff\'f2\'e8 \'e2 \'ea\'f3\'f7\'e5\cf0\kerning1\par
\cf1\kerning0\b delete [] p\b0\tab\tab //\'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'e7\'e0\'f0\'e5\'e7\'e5\'f0\'e2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'e9 \'ef\'e0\'ec\'ff\'f2\'e8\cf0\kerning1\par
\cf1\kerning0\par
\b int* p=new int\cf0\kerning1\b0\par
\cf1\kerning0\b delete p\b0\tab\tab //\'e2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ee\'e4\'ed\'ee\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 int \'e2 \'ea\'f3\'f7\'e5\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0\par
\'c5\'f1\'eb\'e8 \'e4\'e5\'eb\'e0\'e5\'ec new c \'ea\'e2\'e0\'e4\'f0\'e0\'f2\'ed\'fb\'ec\'e8 \'f1\'ea\'ee\'e1\'ea\'e0\'ec\'e8, \'f2\'ee \'e8 delete \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'f1 \'ea\'e2\'e0\'e4\'f0\'e0\'f2\'ed\'fb\'ec\'e8 \'f1\'ea\'ee\'e1\'ea\'e0\'ec\'e8 !!!\cf0\kerning1\par
\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\b\'cb\'e5\'ea\'f6\'e8\'ff 5.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'ce\'e1\'e7\'ee\'f0 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'ee\'e9 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'d1\'e8 libc\ulnone :\cf0\kerning1\par
\cf1\kerning0 Input-Output - \'eb\'e5\'e6\'e8\'f2 \'e2 \'f4\'e0\'e9\'eb\'e5 stdio.h\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-568\li568\sl240\slmult1\cf1\kerning0\'e0) \'c2 \'eb\'e8\'ed\'f3\'ea\'f1\'e5 \'c2\'d1\'a8 - \'fd\'f2\'ee \'f4\'e0\'e9\'eb. \'dd\'ea\'f0\'e0\'ed \'fd\'f2\'ee \'f4\'e0\'e9\'eb - \'e2 \'ed\'e5\'e3\'ee \'ec\'ee\'e6\'ed\'ee \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'f2\'fc \'e8 \'f1 \'ed\'e5\'e3\'ee \'ec\'ee\'e6\'ed\'ee \'f7\'e8\'f2\'e0\'f2\'fc; \'ea\'eb\'e0\'e2\'e8\'e0\'f2\'f3\'f0\'e0 \'e8 \'f2.\'e4\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\li568\sl240\slmult1\cf1\kerning0 printf ("%d",n);   %d - \'fd\'f2\'ee integer, %s - \'f1\'f2\'f0\'ee\'ea\'e0, %c - char, %p - \'fd\'f2\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'e2 16-\'f7\'ed\'ee\'e9 \'f4\'ee\'f0\'ec\'e5\cf0\kerning1\par
\cf1\kerning0 scanf ("%d",&n); \'f7\'e8\'f2\'e0\'e5\'f2 \'f1 \'ea\'eb\'e0\'e2\'e8\'e0\'f2\'f3\'f0\'fb.   \'cb\'f3\'f7\'f8\'e5 \'ef\'ee\'f7\'e8\'f2\'e0\'f2\'fc \'e2 \'e4\'ee\'ea\'f3\'ec\'e5\'ed\'f2\'e0\'f6\'e8\'e8.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-568\li568\sl240\slmult1\cf1\kerning0\'e1) FILE* f=fopen("a.txt","r"); r - \'ee\'f2\'ea\'f0\'fb\'f2\'fc \'ed\'e0 \'f7\'f2\'e5\'ed\'e8\'e5, w - \'ee\'f2\'ea\'f0\'fb\'f2\'fc \'ed\'e0 \'e7\'e0\'ef\'e8\'f1\'fc. \'c5\'f1\'eb\'e8 \'f4\'e0\'e9\'eb \'ee\'f2\'ea\'f0\'fb\'eb\'f1\'ff \'f5\'ee\'f0\'ee\'f8\'ee, \'f2\'ee f = \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'f4\'e0\'e9\'eb\'ee\'e2\'f3\'fe \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe\\\'e0\'e4\'f0\'e5\'f1, \'e5\'f1\'eb\'e8 \'ee\'f8\'e8\'e1\'ea\'e0 (\'f4\'e0\'e9\'eb \'ed\'e5 \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'e5\'f2, \'ed\'e5 \'e4\'ee\'f1\'f2\'e0\'f2\'ee\'f7\'ed\'ee \'ef\'f0\'e0\'e2 \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'e8 \'f2.\'e4.), \'f2\'ee f==NULL\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\li568\sl240\slmult1\cf1\kerning0\'f0\'e0\'e1\'ee\'f2\'e0 \'f1 \'f4\'e0\'e9\'eb\'ee\'ec: fprintf(f,....) \'e8 fscanf(f,...)\cf0\kerning1\par
\cf1\kerning0\'ef\'ee\'f1\'eb\'e5 \'e2\'f1\'e5\'e3\'ee \'f4\'e0\'e9\'eb \'ed\'e0\'e4\'ee \'e7\'e0\'ea\'f0\'fb\'f2\'fc fclose(f); \'ee\'e1\'f1\'f3\'e6\'e4\'e5\'ed\'e8\'e5 \'ef\'ee\'f7\'e5\'ec\'f3 \'ed\'e0\'e4\'ee \'f4\'e0\'e9\'eb \'e7\'e0\'ea\'f0\'fb\'e2\'e0\'f2\'fc - \'f1\'e2\'ff\'e7\'e0\'ed\'ee \'f1 \'f0\'e0\'e1\'ee\'f2\'ee\'e9 \'f1\'e0\'ec\'ee\'e3\'ee \'e2\'e8\'ed\'f7\'e5\'f1\'f2\'e5\'f0\'e0, \'e1\'f3\'f4\'e5\'f0\'e0, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'f1\'ed\'e0\'f7\'e0\'eb\'e0 \'ed\'e0\'ea\'e0\'ef\'eb\'e8\'e2\'e0\'e5\'f2 \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'f1\'e5\'e1\'e5, \'e0 \'f2\'ee\'eb\'fc\'ea\'ee \'ef\'ee\'f2\'ee\'ec \'ef\'e8\'f8\'e5\'f2 \'ed\'e0 \'e4\'e8\'f1\'ea - fclose \'ee\'f1\'e2\'ee\'e1\'ee\'e6\'e4\'e0\'e5\'f2 \'e1\'f3\'f4\'e5\'f0\cf0\kerning1\par
\cf1\kerning0 fflush(f); - \'ef\'f0\'e8\'ed\'f3\'e4\'e8\'f2\'e5\'eb\'fc\'ed\'ee\'e5 \'ee\'ef\'f3\'f1\'f2\'ee\'f8\'e5\'ed\'e8\'e5 \'e1\'f3\'f4\'e5\'f0\'e0 ~ \'e0\'ed\'e0\'eb\'ee\'e3 fclose(f), \'f2\'ee\'eb\'fc\'ea\'ee fclose \'ee\'ef\'f3\'f1\'f2\'ee\'f8\'e0\'e5\'f2 \'e1\'f3\'f4\'e5\'f0 \'e8 \'e7\'e0\'ea\'f0\'fb\'e2\'e0\'e5\'f2 \'f4\'e0\'e9\'eb\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-568\li568\sl240\slmult1\cf1\kerning0\'e2) \'c5\'f1\'f2\'fc \'ea\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'fb:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\li568\sl240\slmult1\cf1\kerning0 stdin - \'e2\'fb\'e2\'ee\'e4 \'f1 \'ed\'e5\'e3\'ee \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'e5\'ed \'e2\'fb\'e2\'ee\'e4\'f3 \'f1 \'ea\'eb\'e0\'e2\'e8\'e0\'f2\'f3\'f0\'fb\cf0\kerning1\par
\cf1\kerning0 stdout - \'e2\'e2\'ee\'e4 \'e2 \'ed\'e5\'e3\'ee \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'e5\'ed \'e2\'e2\'ee\'e4\'f3 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed\cf0\kerning1\par
\cf1\kerning0 stderr- \'e2\'fb\'e2\'ee\'e4 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed, \'f2\'ee\'eb\'fc\'ea\'ee \'e4\'eb\'ff \'ee\'f8\'e8\'e1\'ee\'ea (\'e2 \'ee\'f2\'eb\'e8\'f7\'e8\'e8 \'ee\'f2 stdout \'ed\'e5 \'e1\'f3\'f4\'e5\'f0\'e8\'e7\'e8\'f0\'f3\'e5\'f2\'f1\'ff, \'ed\'e5\'f2 \'e1\'f3\'f4\'e5\'f0\'e0)\cf0\kerning1\par
\cf1\kerning0\'ec\'ee\'e6\'ed\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc FILE* f=stdout; fprintf(f,'.....');\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\'d4\'e0\'e9\'eb\'fb \'e1\'fb\'e2\'e0\'fe\'f2:\cf0\kerning1\par
\cf1\kerning0\'d2\'e5\'ea\'f1\'f2\'ee\'e2\'fb\'e5 - \'ef\'f0\'e5\'e4\'ed\'e0\'e7\'ed\'e0\'f7\'e5\'ed\'fb \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f7\'e5\'eb\'ee\'e2\'e5\'ea\'ee\'ec, \'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0 \'f1\'e8\'ec\'e2\'ee\'eb \\n (\'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'e5 ASCII = 0x0A) \'ed\'e0 \'fd\'ea\'f0\'e0\'ed \'ed\'e5 \'e2\'fb\'e2\'ee\'e4\'e8\'f2\'f1\'ff, \'e0 \'ef\'e5\'f0\'e5\'e2\'ee\'e4\'e8\'f2\'f1\'ff \'f1\'f2\'f0\'ee\'ea\'e0\cf0\kerning1\par
\cf1\kerning0\'c4\'e2\'ee\'e8\'f7\'ed\'fb\'e5 - \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb, \'f2\'f3\'ef\'ee \'ec\'e0\'f8\'e8\'ed\'ed\'fb\'e9 \'ea\'ee\'e4\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d0\'e0\'e7\'eb\'e8\'f7\'e8\'e5 \'ea\'ee\'e4\'e8\'f0\'ee\'e2\'ee\'ea\ulnone :\cf0\kerning1\par
\cf1\kerning0\'d1\'f2\'e0\'ed\'e4\'e0\'f0\'f2 ASCII. \'cf\'e5\'f0\'e2\'fb\'e5 128 \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2 - \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2, \'ee\'f1\'f2\'e0\'e2\'f8\'e8\'e5\'f1\'ff 127 \'ee\'f2\'e4\'e0\'ed\'fb \'ef\'ee\'e4 \'ed\'e0\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'fb\'e5 \'e0\'eb\'f4\'e0\'e2\'e8\'f2\'fb.\cf0\kerning1\par
\cf1\kerning0\'d0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'e5 \'ed\'e0\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'fb\'e5 \'ea\'ee\'e4\'e8\'f0\'ee\'e2\'ea\'e8 \'e4\'eb\'ff \'d0\'f3\'f1\'f1\'ea\'ee\'e3\'ee \'ff\'e7\'fb\'ea\'e0: Windows-1251(=ANSI \'ea\'ee\'e4\'e8\'f0\'ee\'e2\'ea\'e0), KOI8-R (\'ca\'ce\'c8-8 - \'ea\'ee\'e4 \'ee\'e1\'ec\'e5\'ed\'e0 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e5\'e9 8 \'e1\'e8\'f2\'ed\'fb\'e9)\'e4\'eb\'ff Linux\cf0\kerning1\par
\cf1\kerning0 UTF-16 - \'e2\'f1\'e5 \'f1\'e8\'ec\'e2\'ee\'eb\'fb \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e5\'f1\'f2\'fc \'ed\'e0 \'c7\'e5\'ec\'eb\'e5 \'ef\'ee\'f1\'f2\'e0\'f0\'e0\'eb\'e8\'f1\'fc \'e7\'e0\'f1\'f3\'ed\'f3\'f2\'fc \'e2 \'ee\'e4\'ed\'f3 \'f2\'e0\'e1\'eb\'e8\'f6\'f3. \'cf\'ee\'eb\'f3\'f7\'e8\'eb\'e8 10FFFF\sub 16\nosupersub  ~ 1.1 \'ec\'eb\'ed \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2. \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9 \'e0\'eb\'f4\'e0\'e2\'e8\'f2 \'ea\'ee\'e4\'e8\'f0\'f3\'e5\'f2\'f1\'ff 2-\'ff \'e1\'e0\'e9\'f2\'e0\'ec\'e8, "\'e4\'ee\'ef.\'e0\'eb\'f4\'e0\'e2\'e8\'f2" - 4 \'e1\'e0\'e9\'f2\'e0\'ec\'e8. \'cd\'e5\'e4\'ee\'f1\'f2\'e0\'f2\'ee\'ea - \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'e4\'eb\'e8\'ed\'e0 \'f1\'e8\'ec\'e2\'ee\'eb\'e0 \kerning1\u8594? \kerning0\'e4\'eb\'ff \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'e0 \'e2 \'f2\'e5\'ea\'f1\'f2\'e5 \'ed\'e0 10 \'f2\'fb\'f1\'ff\'f7\'ed\'fb\'e9 \'e7\'ed\'e0\'ea, \'ed\'e0\'e4\'ee \'ef\'f0\'ee\'f7\'e8\'f2\'e0\'f2\'fc \'e2\'f1\'e5 \'ef\'f0\'e5\'e4\'f8\'e5\'f1\'f2\'e2\'f3\'fe\'f9\'e8\'e5 \'e7\'ed\'e0\'ea\'e8. + min \'e4\'eb\'e8\'ed\'e0 \'f1\'e8\'ec\'e2\'ee\'eb\'e0 = 2 \'e1\'e0\'e9\'f2\'e0 - \'e4\'ee \'fd\'f2\'ee\'e3\'ee \'e1\'fb\'eb\'ee 1 \'e1\'e0\'e9\'f2.\cf0\kerning1\par
\cf1\kerning0 UTF-32 \'ea\'e0\'e6\'e4\'fb\'e9 \'f1\'e8\'ec\'e2\'ee\'eb - 4 \'e1\'e0\'e9\'f2\'e0 - \'ed\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff, \'ef\'f0\'ee\'f1\'f2\'ee \'ee\'e1\'f9\'e0\'ff \'f2\'e0\'e1\'eb\'e8\'f6\'e0 \'e2\'f1\'e5\'f5 10FFFF\sub 16\nosupersub  \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2.\cf0\kerning1\par
\cf1\kerning0 UTF-8 \'ef\'ee\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'fc \'f0\'e0\'e7\'ed\'ee\'e9 \'e4\'eb\'e8\'ed\'fb: \'ef\'e5\'f0\'e2\'fb\'e5 128 \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2 = ASCII, \'f2.\'e5. \'ee\'e1\'f0\'e0\'f2\'ed\'e0\'ff \'f1\'ee\'e2\'ec\'e5\'f1\'f2\'e8\'ec\'ee\'f1\'f2\'fc \'e4\'eb\'ff \'e0\'ed\'e3\'eb\'e8\'e9\'f1\'ea\'ee\'e3\'ee \'ff\'e7\'fb\'ea\'e0, \'e4\'eb\'ff \'e4\'f0\'f3\'e3\'e8\'f5 \'ff\'e7\'fb\'ea\'ee\'e2 \'ea\'e0\'ea \'ef\'ee\'e2\'e5\'e7\'eb\'ee (\'e4\'eb\'ff \'f0\'f3\'f1\'f1\'ea\'ee\'e3\'ee - 2 \'e1\'e0\'e9\'f2\'e0), \'e2 \'f1\'e0\'ec\'ee\'e9 \'ea\'ee\'e4\'e8\'f0\'ee\'e2\'ea\'e5 \'e5\'f1\'f2\'fc \'ef\'ee\'eb\'e5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'fe\'f9\'e5\'e5 \'e4\'eb\'e8\'ed\'f3 \'f1\'e8\'ec\'e2\'ee\'eb\'e0:\cf0\kerning1\par
\cf1\kerning0\'e5\'f1\'eb\'e8 \'ef\'e5\'f0\'e2\'fb\'e9 \'e1\'e8\'f2 = 0, \'f2\'ee \'e4\'eb\'e8\'ed\'e0 1 \'e1\'e0\'e9\'f2\tab\tab 0\'f5\'f5\'f5\'f5\'f5\'f5\'f5\cf0\kerning1\par
\cf1\kerning0\'e5\'f1\'eb\'e8 110 \kerning1\u8594? \kerning0\'e4\'eb\'e8\'ed\'e0 2 \'e1\'e0\'e9\'f2\tab\tab\tab\tab 110\'f5\'f5\'f5\'f5\'f5 10\'f5\'f5\'f5\'f5\'f5\'f5\cf0\kerning1\par
\cf1\kerning0\'e5\'f1\'eb\'e8 1110 \kerning1\u8594? \kerning0 3 \'e1\'e0\'e9\'f2\'e0\tab\tab\tab\tab 1110\'f5\'f5\'f5\'f5 10\'f5\'f5\'f5\'f5\'f5\'f5 10\'f5\'f5\'f5\'f5\'f5\'f5\cf0\kerning1\par
\kerning0{\field{\*\fldinst{HYPERLINK "https://ru.wikipedia.org/wiki/UTF-8"}}{\fldrslt{\ul\cf2 https://ru.wikipedia.org/wiki/UTF-8}}}\kerning1\f0\fs22\par
\cf1\kerning0\par
\tab\tab\tab\tab\'d6\tab\tab\'d7\tab\tab j\cf0\kerning1\par
\cf1\kerning0 --------------------------------------------------\cf0\kerning1\par
\cf1\kerning0 CP-1251\tab\tab\tab D6\tab\tab D7\tab\tab 6A\cf0\kerning1\par
\cf1\kerning0 KOI8-R\tab\tab\tab E3\tab\tab FE\tab\tab 6A\cf0\kerning1\par
\cf1\kerning0 UTF-16 big endian\tab\tab 04 26\tab\tab 04 27\cf0\kerning1\par
\cf1\kerning0 UTF-16 little endian\tab 26 04\tab\tab 27 04\cf0\kerning1\par
\cf1\kerning0 UTF-8  big endian\tab\tab D0 BF\tab\tab D0 C0\cf0\kerning1\par
\cf1\kerning0 UTF-8  little endian\tab BF D0\tab\tab C0 D0\cf0\kerning1\par
\cf1\kerning0\par
\'c7\'e0\'ec\'f3\'f2\'e0 \'ee \'f2\'ee\'ec, \'f7\'f2\'ee \\n \'e2 \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 \'ce\'d1 \'ea\'ee\'e4\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'ef\'ee \'f0\'e0\'e7\'ed\'ee\'ec\'f3:\cf0\kerning1\par
\cf1\kerning0 Linux - \'fd\'f2\'ee \'ee\'e4\'e8\'ed \'f1\'e8\'ec\'e2\'ee\'eb = 0x0A\cf0\kerning1\par
\cf1\kerning0 Windows - \'fd\'f2\'ee 2-\'e0 \'f1\'e8\'ec\'e2\'ee\'eb\'e0 = 0\'f50D 0\'f50A\cf0\kerning1\par
\cf1\kerning0 MAC - 0x0D\cf0\kerning1\par
\cf1\kerning0\'c2 \'e8\'f2\'ee\'e3\'e5 \'e4\'eb\'ff Windows (\'e4\'eb\'ff \'eb\'e8\'ed\'f3\'ea\'f1 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0 t \'ed\'e5 \'e2\'eb\'e8\'ff\'e5\'f2): fprintf(f,"Hello\\n","w\b t\b0 "); t - \'ea\'e0\'ea \'f0\'e0\'e7 \'e3\'ee\'e2\'ee\'f0\'e8\'f2, \'f7\'f2\'ee \'ea\'ee\'ed\'e5\'f6 \'f1\'f2\'f0\'ee\'ea\'e8 - \'fd\'f2\'ee 0\'f50A 0\'f50D, \'e0 \'ed\'e5 \'ef\'f0\'ee\'f1\'f2\'ee 0\'f50A.\cf0\kerning1\par
\cf1\kerning0\par
\'c4\'eb\'ff \'ef\'e5\'f0\'e5\'e4\'e0\'f7\'e8 \'f2\'e5\'ea\'f1\'f2\'e0 \'ef\'ee \'f2\'e5\'eb\'e5\'e3\'f0\'e0\'f4\'f3/\'ed\'e0 \'ef\'f0\'e8\'ed\'f2\'e5\'f0 \'e2\'f1\'b8 \'ee\'ea. \'cd\'ee \'ef\'ee\'f2\'ee\'ec \'ef\'f0\'e8\'e4\'f3\'ec\'e0\'eb\'e8 \'f2\'e5\'f0\'ec\'e8\'ed\'e0\'eb\'fb, \'ed\'e0 \'fd\'ea\'f0\'e0\'ed\'e5 \'ea\'ee\'f2\'ee\'f0\'fb\'f5 \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e0\'f2\'fc \'ea\'f3\'f0\'f1\'ee\'f0, \'e1\'f3\'ea\'ee\'e2\'ea\'e8 \'f0\'e0\'e7\'ed\'fb\'f5 \'f6\'e2\'e5\'f2\'ee\'e2, \'f3\'e4\'e0\'eb\'e8\'f2\'fc \'f6\'e5\'eb\'f3\'fe \'f1\'f2\'f0\'ee\'ea\'f3 \'e8 \'f2.\'ef. \'c2 \'e8\'f2\'ee\'e3\'e5 \'ef\'f0\'e8\'f8\'eb\'e8 \'ea CSI sequences (\'e2 \'ed\'e0\'f0\'ee\'e4\'e5 Escape-\'ea\'ee\'e4\'fb ANSI) - \'fd\'f2\'ee \'f2\'e0\'e1\'eb\'e8\'f6\'e0 \'ea\'ee\'e4\'e0, \'e2 \'ea\'ee\'f2\'ee\'f0\'ee\'e9 \'ef\'ee\'f1\'eb\'e5 \'ef\'f0\'e5\'f4\'e8\'ea\'f1\'e0 "ESC [" (0\'f51\'c2 0\'f55\'c2) \'e8\'e4\'b8\'f2 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e8\'e9 \'f1\'e8\'ec\'e2\'ee\'eb \'f2\'e8\'ef\'e0 "D" - Cursor Back - \'ed\'e0\'e7\'e2\'e0\'eb\'e8 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2 \'c5\'d1\'cc\'c0-48. \'cf\'e5\'f0\'e2\'fb\'ec \'f3\'f1\'f2\'f0\'ee\'e9\'f1\'f2\'e2\'ee\'ec \'f1 \'ec\'ee\'ed\'e8\'f2\'ee\'f0\'ee\'ec \'e8 \'ea\'eb\'e0\'e2\'e8\'e0\'f2\'f3\'f0\'ee\'e9 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'fe\'f9\'e8\'ec \'fd\'f2\'ee \'f1\'f2\'e0\'eb VT100, \'ea\'ee\'ec\'ef\'e0\'ed\'e8\'e8 DEC.\cf0\kerning1\par
\cf1\kerning0\par
fgets(char s[10],9,FILE* f)\tab //\'f1\'f7\'e8\'f2\'fb\'e2\'e0\'e5\'f2 10 \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2 \'e8 \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'e2 f\cf0\kerning1\par
\cf1\kerning0 feof(f)\tab\tab\tab\tab //\'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2 1 \'e5\'f1\'eb\'e8 \'f4\'e0\'e9\'eb \'e7\'e0\'ea\'ee\'ed\'f7\'e8\'eb\'f1\'ff, \'e2\'f1\'b8 \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'ee\'e5 0\cf0\kerning1\par
\cf1\kerning0\par
\'c7\'e0\'e3\'ee\'eb\'ee\'e2\'ee\'f7\'ed\'fb\'e9 \'f4\'e0\'e9\'eb \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'ee\'e9 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 assert.h\cf0\kerning1\par
\cf1\kerning0\'c2\'e0\'e6\'ed\'e0\'ff \'e2\'e5\'f9\'fc:\cf0\kerning1\par
\cf1\kerning0 strcmp(s1,s2);\cf0\kerning1\par
\cf1\kerning0 assert(s1!=NULL)\tab //\'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'ee\'f2\'eb\'e0\'e4\'ea\'e8 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec, \'e5\'f1\'eb\'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'f3\'f1\'eb\'ee\'e2\'e8\'e5, \'f2\'ee \'e0\'e2\'e0\'f0\'e8\'e9\'ed\'ee\'e5 \'e7\'e0\'e2\'e5\'f0\'f8\'e5\'ed\'e8\'e5 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb\cf0\kerning1\par
\cf1\kerning0\'ed\'ee \'e4\'eb\'ff \'ed\'e0\'f7\'e0\'eb\'e0 \'ed\'e0\'e4\'ee \'ee\'e1\'fa\'ff\'e2\'e8\'f2\'fc: #define DEBUG\cf0\kerning1\par
\cf1\kerning0\'e2\'ed\'f3\'f2\'f0\'e8 assert \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'ee \'f2\'e8\'ef\'e0#\cf0\kerning1\par
\cf1\kerning0 #ifdef DEBUG, \'f2\'ee \'e4\'e5\'eb\'e0\'f2\'fc \'fd\'f2\'ee, \'e5\'f1\'eb\'e8 DEBUG \'ed\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed, \'f2\'ee assert \'e1\'f3\'e4\'e5\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'e2 ";"\cf0\kerning1\par
\cf1\kerning0\'ec\'ee\'e6\'ed\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc gcc -DDEBUG \'f2\'ee\'e6\'e5 \'f1\'e0\'ec\'ee\'e5, \'f7\'f2\'ee \'e8 \'e2 \'f4\'e0\'e9\'eb \'e7\'e0\'ef\'e8\'f1\'e0\'f2\'fc #define DEBUG\cf0\kerning1\par
\cf1\kerning0 gcc -Dsdfkjh \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, #define sdfkjh\cf0\kerning1\par
\cf1\kerning0\par
complex.h - \'f0\'e0\'e1\'ee\'f2\'e0 \'f1 \'ea\'ee\'ec\'ef\'eb\'e5\'ea\'f1\'ed\'fb\'ec\'e8 \'f7\'e8\'f1\'eb\'e0\'ec\'e8\cf0\kerning1\par
\cf1\kerning0 ctype.h - \'ef\'f0\'ee\'e2\'e5\'f0\'ff\'e5\'f2 \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'eb\'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'e1\'f3\'ea\'e2\'ee\'e9 \'e8\'eb\'e8 \'f6\'e8\'f4\'f0\'ee\'e9 \'e8\'eb\'e8 \'e1\'ee\'eb\'fc\'f8\'ee\'e9 \'e1\'f3\'ea\'e2\'ee\'e9 \'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0 errno.h - \'f0\'e0\'e1\'ee\'f2\'e0 \'f1 \'ee\'f8\'e8\'e1\'ea\'e0\'ec\'e8\cf0\kerning1\par
\cf1\kerning0\'e8 \'f2.\'e4. \'cd\'c5 \'e4\'ee\'f1\'ec\'ee\'f2\'f0\'e5\'eb, \'ec\'f3\'f2\'ee\'f0\'ed\'ee !\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 6.\cf0\kerning1\b0\par
\cf1\kerning0\i\'c4\'e0\'ed\'ee\i0 :\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc \'ec\'e0\'f1\'f1\'e8\'e2:\cf0\kerning1\par
\cf1\kerning0 int* array=new int[100];\cf0\kerning1\par
\cf1\kerning0 array[i]=....  \'e4\'e5\'eb\'e0\'e5\'ec \'f1 \'ec\'e0\'f1\'f1\'e8\'e2\'ee\'ec \'ea\'e0\'ea\'e8\'e5-\'f2\'ee \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'ff\cf0\kerning1\par
\cf1\kerning0 delete [] array;\cf0\kerning1\par
\cf1\kerning0\i\'c2\'ee\'e7\'ec\'ee\'e6\'ed\'fb\'e5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb\i0 : \cf0\kerning1\par
\cf1\kerning0 1. \'c7\'e0\'e1\'fb\'eb\'e8 \'f1\'e4\'e5\'eb\'e0\'f2\'fc new\cf0\kerning1\par
\cf1\kerning0 2. \'c7\'e0\'e1\'fb\'eb\'e8 \'f3\'e4\'e0\'eb\'e8\'f2\'fc\cf0\kerning1\par
\cf1\kerning0 3. \'c2\'fb\'f8\'eb\'e8 \'e7\'e0 \'ef\'f0\'e5\'e4\'e5\'eb\'fb\cf0\kerning1\par
\cf1\kerning0 4. \'c7\'e0\'e1\'fb\'eb\'e8 \'ee \'f0\'e0\'e7\'ec\'e5\'f0\'e5\cf0\kerning1\par
\cf1\kerning0\i\'c7\'e0\'e4\'e0\'f7\'e0\i0 :\cf0\kerning1\par
\cf1\kerning0 1. \'d5\'ee\'f2\'e8\'ec \'f1\'e3\'f0\'f3\'ef\'ef\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'e2\'f1\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e2 \'ee\'e4\'ed\'ee\'ec \'ec\'e5\'f1\'f2\'e5 - \'ea\'eb\'e0\'f1\'f1\'e5\cf0\kerning1\par
\cf1\kerning0 2. \'d5\'ee\'f2\'e8\'ec, \'f7\'f2\'ee\'e1\'fb \'ec\'fb \'e2 \'f1\'e2\'ee\'e5\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 \'ec\'ee\'e3\'eb\'e8 \'f1\'ea\'e0\'e7\'e0\'f2\'fc: \'cc\'e0\'f1\'f1\'e8\'e2, \'e4\'e0\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2. \'cc\'e0\'f1\'f1\'e8\'e2, \'f1\'ea\'e0\'e6\'e8 \'f1\'e2\'ee\'e9 \'f0\'e0\'e7\'ec\'e5\'f0\'e5. \'cc\'e0\'f1\'f1\'e8\'e2, \'f3\'f1\'f2\'e0\'ed\'ee\'e2\'e8 \'f2\'e0\'ea\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e2 \'f2\'e0\'ea\'f3\'fe \'ff\'f7\'e5\'e9\'ea\'f3.\cf0\kerning1\par
\cf1\kerning0 3. \'d5\'ee\'f2\'e8\'ec \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'e7\'e0\'ea\'f0\'fb\'f2\'fb\'e9 \'e1\'eb\'ee\'ea, \'f7\'f2\'ee\'e1\'fb \'f1 \'ed\'e8\'ec \'ed\'e5 \'ec\'ee\'e3\'eb\'e8 \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'f7\'f2\'ee-\'ed\'e8\'e1\'f3\'e4\'fc \'ef\'eb\'ee\'f5\'ee\'e5.\cf0\kerning1\par
\cf1\kerning0\i\'d0\'e5\'f8\'e5\'ed\'e8\'e5\i0 :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\cf1\kerning0 array.cpp\tab array.h\cf0\kerning1\par
\cf1\kerning0 #include "Array.h"\tab #ifdef ARRAY_H_\cf0\kerning1\par
\cf1\kerning0 Array::Array (size_t size) \{\tab #define ARRAY_H_\cf0\kerning1\par
\cf1\kerning0    mySize = size;\tab class Array\{\cf0\kerning1\par
\cf1\kerning0    myData = new int[mySize];\}\tab private:\cf0\kerning1\par
\cf1\kerning0 Array::~Array () \{\tab    size_t mySize;\cf0\kerning1\par
\cf1\kerning0    delete [] myData;\}\tab    int* myData;\cf0\kerning1\par
\cf1\kerning0 void Array::set (int i, int val) \{\tab public:\cf0\kerning1\par
\cf1\kerning0    if (i < 0 || i > (mySize-1)) \{\tab    Array (size_t size);\cf0\kerning1\par
\cf1\kerning0       return;\}\tab    ~Array();\cf0\kerning1\par
\cf1\kerning0    myData[i] = val;\}\tab    void set(int i, int val);\cf0\kerning1\par
\cf1\kerning0 int Array::get (int i) \{\tab    int get(int i);\cf0\kerning1\par
\cf1\kerning0    if (i < 0 || i > (mySize-1))\{\tab    size_t getSize();\};\cf0\kerning1\par
\cf1\kerning0       return -1;\}\tab #endif\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0    return myData[i];\}\cf0\kerning1\par
\cf1\kerning0 size_t Array::getSize () \{\cf0\kerning1\par
\cf1\kerning0    return mySize;\}\cf0\kerning1\par
\cf1\kerning0\'c2 \'f4\'e0\'e9\'eb\'e5 array.h \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'eb\'e8 class, \'e2 \'e1\'eb\'ee\'ea\'e5 private \'ee\'e1\'ee\'e7\'ed\'e0\'f7\'e5\'ed\'fb \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5, \'ea \'ea\'ee\'f2\'ee\'f0\'fb\'ec \'ed\'e5\'e2\'ee\'e7\'ec\'ee\'e6\'e5\'ed \'e4\'ee\'f1\'f2\'f3\'ef \'e8\'e7 \'e2\'ed\'e5.\cf0\kerning1\par
\cf1\kerning0\'ca\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'e2\'fb\'e4\'e0\'f1\'f2 \'ee\'f8\'e8\'e1\'ea\'f3 \'ef\'f0\'e8:\cf0\kerning1\par
\cf1\kerning0 Array a;\cf0\kerning1\par
\cf1\kerning0 a.mysize=3;\cf0\kerning1\par
\cf1\kerning0\'c2 array.h \'e7\'e0\'ef\'e8\'f1\'fc Array(size_t size) \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0, \'e7\'e0\'e4\'e0\'f7\'e0 \'ef\'f0\'e8\'f1\'e2\'ee\'e8\'f2\'fc \'ef\'f0\'e0\'e2\'e8\'eb\'fc\'ed\'fb\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff \'e5\'e3\'ee \'ef\'ee\'eb\'ff\'ec (\'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'ec) \'e8 \'ec\'e5\'f2\'ee\'e4\'e0\'ec (\'f4\'f3\'ed\'ea\'f6\'e8\'ff\'ec).\cf0\kerning1\par
\cf1\kerning0 ~Array() - \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0, \'e5\'e3\'ee \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc \'ed\'e5 \'ed\'e0\'e4\'ee, \'ee\'ed \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'f1\'e0\'ec \'ea\'ee\'e3\'e4\'e0 \'e7\'e0\'ea\'e0\'ed\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'ee\'e1\'eb\'e0\'f1\'f2\'fc \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8\cf0\kerning1\par
\cf1\kerning0 1\tab void f()\{\cf0\kerning1\par
\cf1\kerning0 2\tab  Array a(100);\cf0\kerning1\par
\cf1\kerning0 3\tab\} - \'e7\'e4\'e5\'f1\'fc \'ee\'f2\'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 ~Array()\cf0\kerning1\par
\cf1\kerning0 4\tab int a = 5\tab // \'e7\'e4\'e5\'f1\'fc \'e1\'f3\'e4\'e5\'f2 \'f3\'e6\'e5 \'e4\'f0\'f3\'e3\'e0\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'e0, \'e7\'e0\'ea\'ee\'ed\'f7\'e8\'eb\'e0\'f1\'fc \'ee\'e1\'eb\'e0\'f1\'f2\'fc \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 Array a(100)\cf0\kerning1\par
\cf1\kerning0\par
\'c5\'f1\'f2\'fc \'e7\'e0\'e4\'e0\'f7\'e0, \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3, \'f5\'ee\'f2\'e8\'ec \'ec\'e0\'f1\'f1\'e8\'e2 \'e7\'e0\'ef\'ee\'eb\'ed\'e8\'f2\'fc \'e5\'e4\'e8\'ed\'e8\'f7\'ea\'e0\'ec\'e8:\cf0\kerning1\par
\cf1\kerning0 Array a(100);\cf0\kerning1\par
\cf1\kerning0 for (int i=0; i<\b ?\b0 ; i++)\{ - \'ed\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'ee \'f7\'f2\'ee \'f1\'f2\'e0\'e2\'e8\'f2\'fc \'e2\'ec\'e5\'f1\'f2\'ee "?"\cf0\kerning1\par
\cf1\kerning0  a.set(i,1);\}\cf0\kerning1\par
\cf1\kerning0\'cc\'ee\'e6\'ed\'ee \'e1\'fb\'eb\'ee \'e1\'fb \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe a.mySize \'e2 \'e7\'ee\'ed\'e5 public, \'ed\'ee \'f2\'ee\'e3\'e4\'e0 \'ec\'fb \'ee\'f2\'ea\'f0\'fb\'e2\'e0\'e5\'ec \'f1\'e2\'ee\'b8 \'f1\'ee\'f1\'f2\'ee\'ff\'ed\'e8\'e5. \'d5\'ee\'f0\'ee\'f8\'e8\'e9 \'f1\'f2\'e8\'eb\'fc \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff, \'ea\'ee\'e3\'e4\'e0 \'e2\'f1\'e5 \'ef\'ee\'eb\'ff (\'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5) \'ff\'e2\'eb\'ff\'fe\'f2\'f1\'ff private, \'e0 \'e4\'ee\'f1\'f2\'f3\'ef \'ea \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'ec \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'f7\'e5\'f0\'e5\'e7 \'f4\'f3\'ed\'ea\'f6\'e8\'e8. \'d2\'e5\'ec \'f1\'e0\'ec\'fb\'ec \'eb\'f3\'f7\'f8\'e5 \'e2\'f1\'e5\'e3\'ee \'fd\'f2\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e7\'e0\'ea\'f0\'fb\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'e5\'e9 getSize().\cf0\kerning1\par
\cf1\kerning0\par
\'c2 \'d1\'e8 \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0 \'e4\'eb\'ff struct \'ec\'ee\'e6\'e5\'f2 \'e2\'fb\'f1\'f2\'f3\'ef\'e0\'f2\'fc \'ee\'e1\'fb\'f7\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff:\cf0\kerning1\par
\cf1\kerning0 struct A\{\cf0\kerning1\par
\cf1\kerning0\tab int first;\cf0\kerning1\par
\cf1\kerning0 struct A* struct_constructor(int a)\{\cf0\kerning1\par
\cf1\kerning0\tab struct A* p = malloc (sizeof(struct A));\cf0\kerning1\par
\cf1\kerning0\tab p->first = a;\cf0\kerning1\par
\cf1\kerning0\tab return p;\cf0\kerning1\par
\cf1\kerning0 void struct_destructor(struct A* p)\{\cf0\kerning1\par
\cf1\kerning0\tab free(p);\}\cf0\kerning1\par
\cf1\kerning0\par
2-\'e5 \'e7\'e0\'e4\'e0\'f7\'e8:\cf0\kerning1\par
\cf1\kerning0 Array a(10);\tab Array a(10);\cf0\kerning1\par
\cf1\kerning0 a.set(0,5);\tab Array b(20);\cf0\kerning1\par
\cf1\kerning0 Array b(a);\tab b=a;\cf0\kerning1\par
\cf1\kerning0\par
\ul\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9\ulnone :\cf0\kerning1\par
\cf1\kerning0 struct B\{\cf0\kerning1\par
\cf1\kerning0     int k = 0;\cf0\kerning1\par
\cf1\kerning0 struct SomeClass\{\cf0\kerning1\par
\cf1\kerning0     B* b;\cf0\kerning1\par
\cf1\kerning0     SomeClass()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab b = new B;\cf0\kerning1\par
\cf1\kerning0\tab\}\cf0\kerning1\par
\cf1\kerning0     void SomeClass(const SomeClass& w)\{\cf0\kerning1\par
\cf1\kerning0         this->b = new B;\cf0\kerning1\par
\cf1\kerning0         this->b->k = w.b->k;\}\};\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0     SomeClass q;\cf0\kerning1\par
\cf1\kerning0     SomeClass q1 = q;\cf0\kerning1\par
\cf1\kerning0     q1.b->k = 3;\cf0\kerning1\par
\cf1\kerning0     cout << q.b->k;\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0\'ca\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'e3\'e5\'ed\'e5\'f0\'e8\'f0\'f3\'e5\'f2 \'ec\'e5\'f2\'ee\'e4 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe.\cf0\kerning1\par
\cf1\kerning0 array.cpp\tab array.h\cf0\kerning1\par
\cf1\kerning0 Array::Array(Array& a)\{\tab struct Array\{\cf0\kerning1\par
\cf1\kerning0    mySize=a.mySize;\tab    Array(Array &a); - \'ef\'ee\'f7\'e5\'ec\'f3 &a? \'c5\'f1\'eb\'e8 \'e1\'f3\'e4\'e5\'f2 \'ef\'f0\'ee\'f1\'f2\'ee a, \'f2\'ee \'ea\'e0\'ea-\'f2\'ee \'e2\'f1\'b8 \'e7\'e0\'f6\'e8\'ea\'eb\'e8\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0    myData=a.myData;\tab    \}\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0\i\'cf\'f0\'e8\'ec\'e5\'f0\i0 :\cf0\kerning1\par
\cf1\kerning0 void f()\{\cf0\kerning1\par
\cf1\kerning0    Array a(10);\cf0\kerning1\par
\cf1\kerning0    Array b(a);\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0\'cf\'f0\'ee\'e1\'eb\'e5\'ec\'e0: \'ef\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 Array a(10) \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 "\'ca\'f3\'f7\'e0" \'e2\'fb\'e4\'e5\'eb\'e8\'f2\'f1\'ff \'e1\'eb\'ee\'ea \'ef\'ee\'e4 \'f1\'e0\'ec\'e8 \'e4\'e0\'ed\'ed\'fb\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 Array a \'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff a.myData, \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'ed\'e0\'ff \'ed\'e0 \'f1\'f2\'e5\'ea\'e5, \'e1\'f3\'e4\'e5\'f2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'ed\'e0 \'ed\'e0\'f7\'e0\'eb\'ee \'fd\'f2\'ee\'e3\'ee \'e1\'eb\'ee\'ea\'e0. \'cf\'f0\'e8 Array b, \'ed\'ee\'e2\'fb\'e9 \'e1\'eb\'ee\'ea \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 "\'ca\'f3\'f7\'e0" \'ed\'e5 \'f1\'ee\'e7\'e4\'e0\'e5\'f2\'f1\'ff, \'e0 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ed\'ee\'e2\'e0\'ff \'ea\'ee\'ef\'e8\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 \'ed\'e0 \'f1\'f2\'e5\'ea\'e5, \'f2.\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff b.myData \'e1\'f3\'e4\'e5\'f2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'f2\'f3\'e4\'e0 \'e6\'e5 \'e2 "\'ca\'f3\'f7\'f3" \'ea\'f3\'e4\'e0 \'e8 a.myData. \'cf\'f0\'e8 \} \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff ~Array a() \'e8 \'e1\'eb\'ee\'ea \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'e2 "\'ca\'f3\'f7\'e5"  \'ee\'f1\'e2\'ee\'e1\'ee\'e4\'e8\'f2\'f1\'ff (delete [] myData), \'e0 \'ef\'ee\'f2\'ee\'ec \'e2\'fb\'e7\'ee\'e2\'e8\'f2\'f1\'ff ~Array b \'e8 Fatal Error.\cf0\kerning1\par
\cf1\kerning0\'d0\'e5\'f8\'e5\'ed\'e8\'e5: \'e2 array.h \'e7\'e0\'ef\'e8\'f1\'fc Array(Array &a) \'ef\'e5\'f0\'e5\'ed\'e5\'f1\'f2\'e8 \'e8\'e7 public \'e2 private, \'f2\'ee\'e3\'e4\'e0 \'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 void f() \'e2\'e5\'f9\'fc Array b(a) \'ef\'f0\'ee\'f1\'f2\'ee \'ed\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff. \'cf\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee \'e7\'e0\'ef\'f0\'e5\'f9\'e5\'ed\'ee \'e1\'f3\'e4\'e5\'f2 \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'e4\'e0\'ed\'ed\'fb\'ec \'ec\'e5\'f2\'ee\'e4\'ee\'ec.\cf0\kerning1\par
\cf1\kerning0\par
\'ce\'e4\'ed\'e0\'ea\'ee \'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 \'e7\'e0\'f7\'e0\'f1\'f2\'f3\'fe \'ed\'f3\'e6\'e5\'ed !\cf0\kerning1\par
\cf1\kerning0 void f1(Array a)\{\cf0\kerning1\par
\cf1\kerning0 a.set(0,0);\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0\'c2 \'e4\'e0\'ed\'ed\'ee\'ec \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'ed\'e0 \'f1\'f2\'e5\'ea\'e5 \'e4\'ee\'eb\'e6\'ed\'e0 \'f1\'ee\'e7\'e4\'e0\'f2\'fc\'f1\'ff \'ea\'ee\'ef\'e8\'ff Array a, \'e0 \'e5\'f1\'eb\'e8 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 \'e1\'f3\'e4\'e5\'f2 \'e2 private, \'f2\'ee \'e1\'ee\'eb\'f2.\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'ee\'e7\'e4\'e0\'b8\'ec \'f1\'e0\'ec \'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9:\cf0\kerning1\par
\cf1\kerning0 Array::Array(Array& a)\{\cf0\kerning1\par
\cf1\kerning0    mySize=a.mySize;\cf0\kerning1\par
\cf1\kerning0    myData=new int [mySize];\cf0\kerning1\par
\cf1\kerning0    for (int i=0; i<mySize; i++)\{\cf0\kerning1\par
\cf1\kerning0       myData[i]=a.myData[i];\}\}\cf0\kerning1\par
\cf1\kerning0\'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ed\'ee\'e2\'fb\'e9 \'e1\'eb\'ee\'ea \'e2 \'ca\'f3\'f7\'e5 + \'ef\'ee\'eb\'ed\'ee\'f1\'f2\'fc\'fe \'ea\'ee\'ef\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'e4\'e0\'ed\'ed\'fb\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\cf0\kerning1\par
\cf1\kerning0\'d0\'e5\'f7\'fc \'f8\'eb\'e0 \'ee \'f2\'ee\'ec, \'f7\'f2\'ee \'f2\'e0\'ea \'ea\'e0\'ea \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ee\'e4\'ed\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0, \'f2\'ee \'ee\'ed\'e8 \'ec\'ee\'e3\'f3\'f2 \'ee\'e1\'f0\'e0\'f9\'e0\'f2\'fc\'f1\'ff \'ea mySize \'e8 myData \'ed\'e0\'ef\'f0\'ff\'ec\'f3\'fe. \'cd\'e5\'eb\'fc\'e7\'ff \'ee\'e1\'f0\'e0\'f9\'e0\'f2\'fc\'f1\'ff \'ea \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'ec \'e4\'f0\'f3\'e3\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0.\cf0\kerning1\par
\cf1\par
\kerning0\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e2 \'f1\'eb\'f3\'f7\'e0\'ff\'f5:\cf0\kerning1\par
\cf1\kerning0 1.\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab MyClass b = a;\cf0\kerning1\par
\cf1\par
\kerning0 2.\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab MyClass b(a);\cf0\kerning1\par
\cf1\par
\kerning0 3.\tab void foo(MyClass x);\cf0\kerning1\par
\cf1\kerning0\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab foo(a);\cf0\kerning1\par
\cf1\par
\kerning0 4.\tab MyClass foo()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab MyClass x;\cf0\kerning1\par
\cf1\kerning0\tab\tab return x;\tab\tab\'f2\'f3\'f2 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 \'e5\'f1\'eb\'e8 \'e4\'eb\'ff \'ea\'eb\'e0\'f1\'f1\'e0 MyClass \'cd\'c5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'b8\'ed \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e9\cf0\kerning1\par
\cf1\kerning0\par
\ul\'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee \'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'f3 \'ea\'ee\'ef\'e8\'e9, \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'e3\'e5\'ed\'e5\'f0\'e8\'f0\'f3\'e5\'f2 \'fd\'f2\'ee\'f2 \'ec\'e5\'f2\'ee\'e4 + \'c0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee \'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'f3 \'ea\'ee\'ef\'e8\'e9 \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0, \'f2.\'e5. \'ed\'e0 \'ee\'e4\'ed\'f3 \'e8 \'f2\'f3 \'e6\'e5 \'ee\'e1\'eb\'e0\'f1\'f2\'fc \'e2 \'ca\'f3\'f7\'e5, \'e1\'f3\'e4\'e5\'f2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'e4\'e2\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'e8\'e7 a \'e8 b, \'ed\'e0\'f5\'ee\'e4\'ff\'f9\'e8\'e5\'f1\'ff \'e2 \'f1\'f2\'e5\'ea\'e5.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\cf1\kerning0 array.h\cf0\kerning1\par
\cf1\kerning0 void operator= (Array &a);\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\'d0\'e0\'f1\'f1\'ec\'ee\'f2\'f0\'e8\'ec:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0 Array a(10);\cf0\kerning1\par
\cf1\kerning0 Array b(20);\cf0\kerning1\par
\cf1\kerning0 b=a;\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'e0 \'d1++ \'e7\'e0\'ef\'e8\'f1\'e8 \'fd\'ea\'e2\'e8\'e2\'e0\'eb\'e5\'ed\'f2\'ed\'fb: b=a; \'e8 b.operator= (a);\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc 2-\'e0 \'f0\'e5\'f8\'e5\'ed\'e8\'ff \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff: \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff private; \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'f1\'e2\'ee\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff\cf0\kerning1\par
\cf1\kerning0 void Array::operator= (Array &a)\{\cf0\kerning1\par
\cf1\kerning0    mySize=a.mySize;\cf0\kerning1\par
\cf1\kerning0    delete [] myData;\cf0\kerning1\par
\cf1\kerning0    myData=new int[mySize];\cf0\kerning1\par
\cf1\kerning0    for (int i=0; i<mySize; i++)\{\cf0\kerning1\par
\cf1\kerning0       myData[i]=a.myData[i];\}\}\cf0\kerning1\par
\cf1\kerning0\'d1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f7\'e5\'f1\'ea\'e8 \'ec\'ee\'e6\'ed\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'f2\'e0\'ea\'ee\'e5:\cf0\kerning1\par
\cf1\kerning0 Array a(10);\cf0\kerning1\par
\cf1\kerning0 a=a;\cf0\kerning1\par
\cf1\kerning0\'fd\'f2\'ee \'e2\'f1\'b8 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff, \'ed\'ee \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'e1\'f3\'e4\'e5\'f2 \'ed\'e5 \'ef\'f0\'e0\'e2\'e8\'eb\'fc\'ed\'ee. \'c4\'eb\'ff \'e8\'e7\'e1\'e5\'e6\'e0\'ed\'e8\'ff:\cf0\kerning1\par
\cf1\kerning0 void Array::operator= (Array &a)\{\cf0\kerning1\par
\cf1\kerning0\b  if (this==&a)\{\cf0\kerning1\b0\par
\cf1\kerning0\b   return;\cf0\kerning1\b0\par
\cf1\kerning0\b  \}\cf0\kerning1\b0\par
\cf1\kerning0  mySize=a.mySize;\cf0\kerning1\par
\cf1\kerning0  delete [] myData;\cf0\kerning1\par
\cf1\kerning0  myData=new int[mySize];\cf0\kerning1\par
\cf1\kerning0  for (int i=0; i<mySize; i++)\{\cf0\kerning1\par
\cf1\kerning0   myData[i]=a.myData[i];\cf0\kerning1\par
\cf1\kerning0  \}\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0\'f1\'eb\'ee\'e2\'ee this - \'fd\'f2\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'f1\'e0\'ec \'ed\'e0 \'f1\'e5\'e1\'ff.\cf0\kerning1\par
\cf1\par
\kerning0 class MyClass \{\cf0\kerning1\par
\cf1\kerning0\tab int i;\cf0\kerning1\par
\cf1\kerning0\tab void operator= (MyClass& x);\tab\tab\tab\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff, \'f4\'e0\'ea\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'e4\'e5\'eb\'e0\'e5\'f2 \'ea\'ee\'ef\'e8\'fe \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'ef\'f0\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e8 \'ab=\'bb\cf0\kerning1\par
\cf1\kerning0\tab MyClass& operator= (MyClass& x);\tab\tab\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'ff, \'f2.\'ea. \'ee\'ed \'ec\'ee\'e6\'e5\'f2 \'e8\'e7\'ec\'e5\'ed\'e8\'f2\'fc/\'f3\'e4\'e0\'eb\'e8\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2 \'f5 \'e8 \'e2\'f1\'e5 \'e5\'e3\'ee \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'ee\'f1\'f2\'e8 \'e8\'e7 heap\cf0\kerning1\par
\cf1\kerning0\tab MyClass& operator= (const MyClass& x);\tab\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff/\'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff \emdash  \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'f3\'e4\'e0\'eb\'e8\'f2\'fc/\'e8\'e7\'ec\'e5\'ed\'e8\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2 \'f5\cf0\kerning1\par
\cf1\par
\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\ul\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e9\ulnone :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0 Array::Array(Array&& a)\{\'85\}\cf0\kerning1\par
\cf1\par
\kerning0\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e9 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e2 \'f1\'eb\'f3\'f7\'e0\'ff\'f5:\cf0\kerning1\par
\cf1\kerning0 1.\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab MyClass b = std::move(a);\cf0\kerning1\par
\cf1\par
\kerning0 2.\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab MyClass b(std::move(a));\cf0\kerning1\par
\cf1\par
\kerning0 3.\tab void foo(MyClass x);\cf0\kerning1\par
\cf1\kerning0\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab foo(std::move(a));\cf0\kerning1\par
\cf1\par
\kerning0 4.\tab MyClass foo()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab MyClass a;\cf0\kerning1\par
\cf1\kerning0\tab\tab return a;\tab\tab\'ee\'e1\'fb\'f7\'ed\'ee \'e2 \'f2\'e0\'ea\'e8\'f5 \'f1\'eb\'f3\'f7\'e0\'ff\'f5 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9, \'ed\'ee \'e5\'f1\'eb\'e8 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'b8\'ed \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e9, \'f2\'ee \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ee\'ed\cf0\kerning1\par
\cf1\par
\cf0\kerning0{\field{\*\fldinst{HYPERLINK "https://eax.me/cpp-copying-and-moving/"}}{\fldrslt{\ul\cf2 https://eax.me/cpp-copying-and-moving/}}}\cf1\f0\fs22  \'ef\'f0\'ee \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'fb \'ea\'ee\'ef\'e8\'e9 \'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e9 \'ef\'ee-\'f0\'f3\'f1\'f1\'ea\'e8\cf0\kerning1\par
\cf1\par
\kerning0\ul\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e8\ulnone :\cf0\kerning1\par
\cf1\kerning0 class MyClass\{\cf0\kerning1\par
\cf1\kerning0\tab int i;\cf0\kerning1\par
\cf1\kerning0\tab MyClass(const MyClass &); \tab\'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'fb 2-\'e0 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0 \'ea\'ee\'ef\'e8\'e9 \'f1 \'f7\'f3\'f2\'fc-\'f7\'f3\'f2\'fc \'f0\'e0\'e7\'ed\'fb\'ec\'e8 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'e0\'ec\'e8\cf0\kerning1\par
\cf1\kerning0\tab MyClass(MyClass &) = default;\tab\'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'ec, \'f7\'f2\'ee \'e4\'e0\'ed\'ed\'fb\'e9 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 \'e1\'f3\'e4\'e5\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'ef\'ee default-\'f3 \cf0\kerning1\par
\cf1\kerning0\tab MyClass(MyClass &&) = delete;\tab\'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'ec, \'f7\'f2\'ee \'ed\'e5 \'e1\'f3\'e4\'e5\'ec \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e9\cf0\kerning1\par
\cf1\par
\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0\'ca\'eb\'e0\'f1\'f1, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e7\'e0\'ef\'f0\'e5\'f9\'e0\'e5\'f2 \'f1\'e5\'e1\'ff \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'f2\'fc: \'cd\'e0\'e4\'ee \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 \'ef\'ee\'eb\'ee\'e6\'e8\'f2\'fc \'e2 private.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0\'d5\'ee\'f2\'e8\'ec, \'f7\'f2\'ee\'e1\'fb \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'ee\'e2\'e0\'eb \'f2\'ee\'eb\'fc\'ea\'ee \'ee\'e4\'e8\'ed \'ee\'e1\'fa\'e5\'ea\'f2 \'ea\'eb\'e0\'f1\'f1\'e0: \'cd\'e0\'e4\'ee \'ea\'e0\'ea-\'f2\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc static \'e2 \'f0\'e0\'e7\'e4\'e5\'eb\'e5 public.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b93\i0 :\cf0\kerning1\par
\cf1\kerning0\'ca\'eb\'e0\'f1\'f1, \'e7\'e0\'ef\'f0\'e5\'f9\'e0\'fe\'f9\'e8\'e9 \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'f2\'fc \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0 \'ed\'e0 \'f1\'f2\'e5\'ea\'e5: \'cd\'e0\'e4\'ee \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'ee\'eb\'ee\'e6\'e8\'f2\'fc \'e2 private.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 \'e2 \'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e5\ulnone .\cf0\kerning1\par
\cf1\kerning0 class MyClass\{\cf0\kerning1\par
\cf1\kerning0\tab int i;\cf0\kerning1\par
\cf1\kerning0\tab std::string s;\cf0\kerning1\par
\cf1\kerning0\tab MyClass() : i(10), s(\'abTest\'bb) \{\}\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 10.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'d3\'ec\'ed\'fb\'e5 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 (Smart Pointers)\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee \'ea\'e0\'ea \'e8 \'f1 \'ec\'e0\'f1\'f1\'e8\'e2\'ee\'ec, \'ea\'ee\'e3\'e4\'e0 \'ec\'fb \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'eb\'e8 class Array, \'f2\'ee \'e6\'e5 \'f1\'e0\'ec\'ee\'e5 \'f1 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff\'ec\'e8. \'d2\'e0 \'e6\'e5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'e0\'f2\'e8\'ea\'e0, \'f2\'ee \'e6\'e5 \'f0\'e5\'f8\'e5\'ed\'e8\'e5.\cf0\kerning1\par
\cf1\kerning0\i\'c4\'e0\'ed\'ee\i0 :\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2: Object* pObj = new Object();\cf0\kerning1\par
\cf1\kerning0\'c8 \'e2 \'ea\'ee\'ed\'f6\'e5 \'ed\'e0\'e4\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc: delete pObj;\cf0\kerning1\par
\cf1\kerning0\i\'cf\'f0\'ee\'e1\'eb\'e5\'ec\'fb\i0 : \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee \'ec\'e0\'f1\'f1\'e8\'e2\'f3\cf0\kerning1\par
\cf1\kerning0\i\'c7\'e0\'e4\'e0\'f7\'e0\i0 : \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee \'ec\'e0\'f1\'f1\'e8\'e2\'f3\cf0\kerning1\par
\cf1\kerning0\i\'d0\'e5\'f8\'e5\'ed\'e8\'e5\i0 :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3976\cf1\kerning0 scoped_ptr.cpp\tab scoped_ptr.h\cf0\kerning1\par
\cf1\kerning0 #include scoped_ptr.h\tab class scoped_ptr\{\cf0\kerning1\par
\cf1\kerning0 scoped_ptr::scoped_ptr(Object* pObject)\{\tab private:\cf0\kerning1\par
\cf1\kerning0  pObj = pObject;\}\tab  Object* pObj;\cf0\kerning1\par
\cf1\kerning0 scoped_ptr::~scoped_ptr()\{\tab public:\cf0\kerning1\par
\cf1\kerning0  delete pObj;\}\tab  scoped_ptr(Object* pObject);\cf0\kerning1\par
\cf1\kerning0 Object* scoped_ptr::ptr()\{\tab  ~scoped_ptr();\cf0\kerning1\par
\cf1\kerning0  return pObj;\}\tab  Object* ptr();\tab\'e4\'eb\'ff \'f2\'ee\'e3\'ee \'f7\'f2\'ee\'e1\'fb \'ec\'fb \'ec\'ee\'e3\'eb\'e8 \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc p.ptr()->doSomthing \'ea\'e0\'ea\'f3\'fe-\'ed\'e8\'e1\'f3\'e4\'fc \'ec\'e5\'f2\'ee\'e4\'fb \'e8\'e7 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\cf0\kerning1\par
\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p1 = new Object(); \'f1 \'f2\'e0\'ea\'e8\'ec \'ea\'eb\'e0\'f1\'f1\'ee\'ec \'ed\'e5 \'ed\'e0\'e4\'ee \'e4\'f3\'ec\'e0\'f2\'fc, \'ee \'f2\'ee\'ec \'f7\'f2\'ee\'e1\'fb \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc delete. \'c2\'f1\'b8 \'f1\'e0\'ec\'ee \'f1\'ee\'e1\'ee\'e9 \'f1\'ee\'e7\'e4\'e0\'f1\'f2\'f1\'ff \'e8 \'f3\'e4\'e0\'eb\'e8\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p1 = new Object();\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p2 = p1; - \'ef\'f0\'ee\'e8\'e7\'ee\'e9\'e4\'b8\'f2 2-\'e0 \'f0\'e0\'e7\'e0 delete. \'c2 \'ef\'e0\'ec\'ff\'f2\'e8 \'e5\'f1\'f2\'fc Object. p1-\'f1\'f1\'fb\'eb\'ea\'e0 \'ed\'e0 Object \'e8 p2-\'f1\'f1\'fb\'eb\'ea\'e0 \'ed\'e0 Object. \'d1\'ed\'e0\'f7\'e0\'eb\'e0 \'f3\'ed\'e8\'f7\'f2\'ee\'e6\'e8\'f2\'f1\'ff p1, \'e0 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'e5\'ed\'ed\'ee \'e8 Object, \'e0 \'ef\'ee\'f2\'ee\'ec \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff delete p2 - \'e8 \'e1\'f3\'e4\'e5\'f2 \'ea\'ee\'ed\'f4\'f3\'e7.\cf0\kerning1\par
\cf1\kerning0\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b93\i0 :\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p1 = new Object(); \'e1\'fb\'eb p1 - \'f1\'ee\'e7\'e4\'e0\'eb\'f1\'ff Object()\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p2 = new Object(); \'e1\'fb\'eb p2 - \'f1\'ee\'e7\'e4\'e0\'eb\'f1\'ff \'e2\'f2\'ee\'f0\'ee\'e9 Object()\cf0\kerning1\par
\cf1\kerning0 p2 = p1; - \'f2\'e5\'ef\'e5\'f0\'fc p2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'ed\'e0 Object() p1, \'f2.\'e5. \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff \'ed\'e0 \'e2\'f2\'ee\'f0\'ee\'e9 Object() \'e1\'ee\'eb\'fc\'f8\'e5 \'ed\'e5 \'e1\'f3\'e4\'e5\'f2 - \'ea\'ee\'ed\'f4\'f3\'e7\cf0\kerning1\par
\cf1\kerning0\par
\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'f0\'e5\'f8\'e8\'f2\'fc \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb \'e2 \'cf\'f0\'e8\'ec\'e5\'f0 2 \'e8 3, \'ed\'e0\'e4\'ee \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc\cf0\kerning1\par
\cf1\kerning0 private: \cf0\kerning1\par
\cf1\kerning0  scoped_ptr(const scoped_ptr &p);\cf0\kerning1\par
\cf1\kerning0  scoped_ptr &operator=(const scoped_ptr &p);\cf0\kerning1\par
\cf1\kerning0\'ef\'f0\'ee\'f1\'f2\'ee \'f1\'e4\'e5\'eb\'e0\'eb\'e8 private - \'f2\'e5\'ef\'e5\'f0\'fc \'eb\'fe\'e1\'e0\'ff \'ef\'ee\'ef\'fb\'f2\'ea\'e0 \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ea\'ee\'ef\'e8\'fe \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'e8\'eb\'e8 \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff \'e2\'fb\'e7\'ee\'e2\'e5\'f2 \'ee\'f8\'e8\'e1\'ea\'f3 \'ef\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8, \'f2.\'ea. private - \'ed\'e5\'eb\'fc\'e7\'ff \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b94\i0 :\cf0\kerning1\par
\cf1\kerning0 Object* pObj = new Object();\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p1 = pObj;\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p2 = pObj; \'ee\'ef\'ff\'f2\'fc \'ef\'f0\'e8\'e2\'e5\'e4\'b8\'f2 \'ea \'f3\'f2\'e5\'f7\'ea\'e5 \'ef\'e0\'ec\'ff\'f2\'e8, \'f2.\'e5. \'e4\'e2\'ee\'e9\'ed\'ee\'ec\'f3 delete\cf0\kerning1\par
\cf1\kerning0\i\'d0\'e5\'f8\'e5\'ed\'e8\'e5\i0 : \'f1\'eb\'ee\'e6\'ed\'ee\'e5, \'f1 \'e2\'e2\'e5\'e4\'e5\'ed\'e8\'e5\'ec \'e2 scoped_ptr \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'f1 \'ea\'e0\'ea\'e8\'ec\'e8-\'f2\'ee "\'f3\'ed\'e8\'ea\'e0\'eb\'fc\'ed\'fb\'ec\'e8" \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff\'ec\'e8...\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b95\i0 :\cf0\kerning1\par
\cf1\kerning0 scoped_ptr p1 = 0; - \'e2\'f0\'ee\'e4\'e5 \'e2\'f1\'b8 \'ea\'ee\'f0\'f0\'e5\'ea\'f2\'ed\'ee, \'ed\'ee \'e1\'f3\'e4\'f3\'f2 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb \'e2 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e5\cf0\kerning1\par
\cf1\kerning0\i\'d0\'e5\'f8\'e5\'ed\'e8\'e5\i0 :\cf0\kerning1\par
\cf1\kerning0\'c2\'ed\'f3\'f2\'f0\'e8 \'ea\'eb\'e0\'f1\'f1\'e0 \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'ec\'e5\'f2\'ee\'e4 bool isNull(); \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e1\'f3\'e4\'e5\'f2 \'ef\'f0\'ee\'e2\'e5\'f0\'ff\'f2\'fc scoped_ptr \'ed\'e0 \'ed\'ee\'eb\'fc\cf0\kerning1\par
\cf1\kerning0\par
\'d2\'e5\'ef\'e5\'f0\'fc \'e2\'f1\'b8 \'f7\'f2\'ee \'e4\'e5\'eb\'e0\'e5\'f2 scoped_ptr \'fd\'f2\'ee \'e2 \'ed\'f3\'e6\'ed\'fb\'e9 \'ec\'ee\'ec\'e5\'ed\'f2 \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc delete \'e8 \'f3\'e4\'e0\'eb\'ff\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2. + \'e8\'e4\'b8\'f2 \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e0 \'ed\'e0 Null. \'c2\'f1\'b8 \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'ee\'e5 \'e4\'eb\'ff \'f3\'e4\'ee\'e1\'f1\'f2\'e2\'e0. \'c8\'e4\'b8\'ec \'e4\'e0\'eb\'fc\'f8\'e5. \'d5\'ee\'f2\'e5\'eb\'ee\'f1\'fc \'e1\'fb \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e5\'ec scoped_ptr \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'ea\'e0\'ea \'e8 \'ee\'e1\'fb\'f7\'ed\'fb\'ec \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e5\'ec.\cf0\kerning1\par
\cf1\kerning0\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b96\i0 :\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc scoped_ptr p = new Object()\cf0\kerning1\par
\cf1\kerning0\'d3 Object() \'e5\'f1\'f2\'fc \'ec\'e5\'f2\'ee\'e4 doSomething, \'f5\'ee\'f2\'e5\'eb\'e8 \'e1\'fb \'f3\'ec\'e5\'f2\'fc \'e4\'e5\'eb\'e0\'f2\'fc:\cf0\kerning1\par
\cf1\kerning0\'e0) p->doSomething() \'ee\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e5 \'ea \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0\'e1) (*p) - \'f0\'e0\'e7\'e8\'ec\'e5\'ed\'ee\'e2\'fb\'e2\'e0\'ed\'e8\'e5, \'e4\'eb\'ff \'f2\'ee\'e3\'ee \'f7\'f2\'ee\'e1\'fb \'e4\'e5\'eb\'e0\'f2\'fc \'e2\'ee\'f2 \'f2\'e0\'ea (*p).doSomething() \'f2.\'e5. (*p) - \'fd\'f2\'ee \'f3\'e6\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\cf0\kerning1\par
\cf1\kerning0\'e2) \'e5\'f1\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'ff func(Object x), \'f2.\'e5. \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'e0 \'e8\'e4\'b8\'f2 \'ed\'e5 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'e0 \'f1\'e0\'ec \'ee\'e1\'fa\'e5\'ea\'f2 \'ed\'e0 \'f1\'f2\'e5\'ea\'e5, \'f5\'ee\'f7\'e5\'f2\'f1\'ff \'e4\'e5\'eb\'e0\'f2\'fc func(*p)\cf0\kerning1\par
\cf1\kerning0\par
Object* scoped_ptr::operator->()\{ - \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'e5\'ec operator->\cf0\kerning1\par
\cf1\kerning0  return pObj;\}\cf0\kerning1\par
\cf1\kerning0 Object& scoped_ptr::operator*()\{ - \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'e5\'ec operator*\cf0\kerning1\par
\cf1\kerning0  return *pObj;\}\cf0\kerning1\par
\cf1\kerning0\'d2\'e5\'ef\'e5\'f0\'fc \'ec\'fb \'ec\'ee\'e6\'e5\'ec \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'e0 \'f0\'e0\'e2\'ed\'ee\'f6\'e5\'ed\'ed\'ee: p1.operator->() ->doSomething() \'e8 p1->doSomething\cf0\kerning1\par
\cf1\kerning0\par
\'c2\'f2\'ee\'f0\'ee\'e9 \'f3\'ec\'ed\'fb\'e9 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc: auto_ptr - \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'f2\'e0\'ea \'e6\'e5 \'ea\'e0\'ea \'e8 scoped_ptr \'e7\'e0 \'e8\'f1\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'e5\'ec \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff \'e8 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff. \'c7\'e0\'e4\'e0\'f7\'e0: \'f7\'f2\'ee\'e1\'fb \'ef\'f0\'e8 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'ff\'f5 \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'eb\'ee \'ed\'e5 \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5, \'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'e5.\cf0\kerning1\par
\cf1\kerning0 auto_ptr p1 = new Object();\cf0\kerning1\par
\cf1\kerning0 auto_ptr p2 = p1; - \'f5\'ee\'f7\'e5\'f2\'f1\'ff, \'f7\'f2\'ee\'e1\'fb p2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'eb \'ed\'e0 \'ee\'e1\'fa\'e5\'ea\'f2, \'e0 p1 \'f1\'f2\'e0\'eb Null - \'e8\'e7\'e1\'e0\'e2\'e8\'eb\'e8\'f1\'fc \'ee\'f2 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb scoped_ptr \'cf\'f0\'e8\'ec\'e5\'f0 2.\cf0\kerning1\par
\cf1\kerning0 auto_ptr (auto_ptr &p)\{ - \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff, \'f2\'ee\'f7\'ed\'e5\'e5 \'f3\'e6\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'ff\cf0\kerning1\par
\cf1\kerning0  pObj = p.pObj;\cf0\kerning1\par
\cf1\kerning0  p.pObj = 0;\}\cf0\kerning1\par
\cf1\kerning0\par
\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff/\'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff operator=:\cf0\kerning1\par
\cf1\kerning0 auto_ptr p1 = new Object();\cf0\kerning1\par
\cf1\kerning0 auto_ptr p2 = new Object();\cf0\kerning1\par
\cf1\kerning0 p1 = p2; - \'e4\'ee\'ec\'e0\'f8\'ed\'e5\'e5 \'e7\'e0\'e4\'e0\'ed\'e8\'e5 \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\cf0\kerning1\par
\cf1\par
\par
\kerning0\par
\'d2\'f0\'e5\'f2\'fc\'e8\'e9 \'f3\'ec\'ed\'fb\'e9 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc: shared_ptr - \cf0\kerning1\par
\cf1\kerning0 shared_ptr p1 = new Object(); \'f2\'e5\'ef\'e5\'f0\'fc p1 \'f5\'f0\'e0\'ed\'e8\'f2 \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 storage, \'e3\'e4\'e5 \'e2\'ed\'f3\'f2\'f0\'e8 \'e7\'e0\'ef\'e8\'f1\'e0\'ed\'ee 2-\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'fb\'e5: pObj -\'f1\'e0\'ec \'ee\'e1\'fa\'e5\'ea\'f2 \'e8 int count - \'f1\'f7\'b8\'f2\'f7\'e8\'ea \'f1\'f1\'fb\'eb\'ee\'ea, \'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e5\'e9 \'ed\'e0 \'e4\'e0\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2 \'e2 \'e4\'e0\'ed\'ed\'fb\'e9 \'ec\'ee\'ec\'e5\'ed\'f2 \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'e5\'f2.\cf0\kerning1\par
\cf1\kerning0 shared_ptr p2 = p1; - \'ed\'e0 \'e4\'e0\'ed\'ed\'ee\'ec \'fd\'f2\'e0\'ef\'e5 \'e1\'f3\'e4\'e5\'f2 \'ee\'e4\'e8\'ed \'ee\'e1\'fa\'e5\'ea\'f2 \'e8 count=2\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'f1\'eb\'e5 \'fd\'f2\'ee\'e3\'ee \'ef\'ee\'ef\'e0\'e4\'b8\'ec \'e2 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 p1 - \'ee\'e1\'fa\'e5\'ea\'f2 \'ee\'f1\'f2\'e0\'ed\'e5\'f2\'f1\'ff, \'e0 count=1. \'c4\'e0\'eb\'e5\'e5 \'ef\'ee\'ef\'e0\'e4\'e0\'e5\'ec \'ed\'e0 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 p2 - count=0  \'ee\'e1\'fa\'e5\'ea\'f2 \'ed\'e0\'e4\'ee \'f3\'ed\'e8\'f7\'f2\'ee\'e6\'e0\'f2\'fc.\cf0\kerning1\par
\cf1\kerning0\par
\ul Overloading\ulnone :\cf0\kerning1\par
\cf1\kerning0 double f(int a) \'e8 double f(int a, int b) - \'ee\'e1\'ff\'e7\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'e4\'ee\'eb\'e6\'ed\'ee \'e1\'fb\'f2\'fc \'ee\'e4\'e8\'ed\'e0\'ea\'ee\'e2\'ee\'e5 \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'ec\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 ! \'e2 \'ed\'e0\'f8\'e5\'ec \'f1\'eb\'f3\'f7\'e0\'e5 double\cf0\kerning1\par
\cf1\kerning0\'f7\'e0\'f1\'f2\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0\'f5\cf0\kerning1\par
\cf1\kerning0\'d2\'e0\'ea \'e6\'e5 \'ec\'ee\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'f2\'fc =, ==, >, <, [].....\cf0\kerning1\par
\cf1\kerning0\'cd\'e5\'eb\'fc\'e7\'ff \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'f2\'fc ::(\'e4\'e2\'e0 \'e4\'e2\'ee\'e5\'f2\'ee\'f7\'e8\'ff) .(\'f2\'ee\'f7\'ea\'f3) \'e8 \'f7\'f2\'ee-\'f2\'ee \'f2\'f0\'e5\'f2\'fc\'e5.\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 7.\cf0\kerning1\b0\par
\cf1\kerning0\ul Const\ulnone :\cf0\kerning1\par
\cf1\kerning0 const int n=10; \'e5\'f1\'eb\'e8 \'f2\'e0\'ea \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc, \'f2\'ee \'e4\'e0\'eb\'fc\'f8\'e5 \'e5\'f1\'eb\'e8 \'e1\'f3\'e4\'e5\'f2 \'f1\'f2\'f0\'ee\'f7\'ea\'e0 n=15 - \'ed\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff; \'c2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe \'ec\'ee\'e6\'ed\'ee \'e7\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'ee\'e4\'e8\'ed \'f0\'e0\'e7.\cf0\kerning1\par
\cf1\kerning0\par
const \'e8 typedef \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'e8\'ec\'e5\'fe\'f2 \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'fe\'fe \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'f3, \'f2.\'e5. \'e2\'f0\'ee\'e4\'e5 \'ea\'e0\'ea \'e4\'ee\'ef\'f3\'f1\'f2\'e8\'ec\'ee:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 file1.cpp\tab file2.cpp\cf0\kerning1\par
\cf1\kerning0 typedef int T;\tab typedef void T;\cf0\kerning1\par
\cf1\kerning0 const int x=7;\tab const int x=8;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\tab\cf0\kerning1\par
\cf1\kerning0 const \'e4\'e5\'eb\'e0\'e5\'f2 \'ed\'e5\'e8\'e7\'ec\'e5\'ed\'ff\'e5\'ec\'fb\'ec \'f2\'ee \'ef\'ee\'f1\'eb\'e5 \'f7\'e5\'e3\'ee \'f1\'f2\'ee\'e8\'f2 !\cf0\kerning1\par
\cf1\kerning0\'c8\'e7 char* s \'ec\'ee\'e6\'ed\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc:\cf0\kerning1\par
\cf1\kerning0 1. char const* s; \'e8\'eb\'e8 const char* s \'ee\'e4\'ed\'ee \'e8 \'f2\'ee\'e6\'e5 - \'f1\'e0\'ec \'ec\'e0\'f1\'f1\'e8\'e2 \'e8\'eb\'e8 \'f1\'f2\'f0\'ee\'ea\'f3 \'ea\'f3\'e4\'e0 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 s \'ec\'fb \'ec\'e5\'ed\'ff\'f2\'fc \'ed\'e5 \'ec\'ee\'e6\'e5\'ec, \'f2.\'e5. \'ed\'e5\'eb\'fc\'e7\'ff s[1]='d'; \'ed\'ee \'ec\'ee\'e6\'ed\'ee s=s1; \'f2.\'e5. \'e8\'e7\'ec\'e5\'ed\'e8\'eb\'e8 \'ed\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5, \'ea\'ee\'f2\'ee\'f0\'ee\'e5 \'eb\'e5\'e6\'e8\'f2 \'ef\'ee \'e0\'e4\'f0\'e5\'f1\'f3, \'e0 \'f1\'e0\'ec \'e0\'e4\'f0\'e5\'f1\cf0\kerning1\par
\cf1\kerning0 2. char* const s; - \'ed\'e5\'eb\'fc\'e7\'ff \'ec\'e5\'ed\'ff\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'f2.\'e5. \'ec\'ee\'e6\'ed\'ee s[1]='d'; \'ed\'ee \'ed\'e5\'eb\'fc\'e7\'ff s=s1\cf0\kerning1\par
\cf1\kerning0 3. const char* const s - \'ed\'e5\'eb\'fc\'e7\'ff \'ec\'e5\'ed\'ff\'f2\'fc \'ed\'e8 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'ed\'e8 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\cf0\kerning1\par
\cf1\kerning0\par
\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5: int a=30; const int* p=&a;\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'f0\'e0\'e2\'e8\'eb\'ee: \'c5\'f1\'eb\'e8 \'f7\'e5\'f0\'e5\'e7 * \'ef\'f0\'ee\'e2\'e5\'f1\'f2\'e8 \'f7\'e5\'f0\'f2\'f3, \'f2\'ee \'e5\'f1\'eb\'e8 const \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'f1\'eb\'e5\'e2\'e0, \'f2\'ee \'ee\'ed \'ee\'f2\'ed\'ee\'f1\'e8\'f2\'f1\'ff \'ea \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'fe \'e4\'e0\'ed\'ed\'fb\'f5, \'e5\'f1\'eb\'e8 \'f1\'ef\'f0\'e0\'e2\'e0, \'f2\'ee \'ea \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'fe \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff.\cf0\kerning1\par
\cf1\kerning0\par
\'ce\'f2\'e4\'e5\'eb\'fc\'ed\'ee: \'cc\'e5\'f2\'ee\'e4 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'ee\'e1\'fa\'ff\'e2\'ed\'e5\'ed\'ed\'fb\'e9 \'ea\'e0\'ea int foo() const - \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'ee\'ed \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'ec\'e5\'ed\'ff\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'e0.\cf0\kerning1\par
\cf1\kerning0\'c2\'ee\'ee\'e1\'f9\'e5 \'f2\'e8\'ef this \'e2 \'ec\'e5\'f2\'ee\'e4\'e5 foo - \'fd\'f2\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 foo, \'f2.\'e5 *foo. \'c5\'f1\'eb\'e8 \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'ec foo const - \'fd\'f2\'ee \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2 const *foo.\cf0\kerning1\par
\cf1\kerning0\par
\'c5\'f1\'f2\'fc \'ec\'e0\'f1\'f1\'e8\'e2: char ss[10] - \'ee\'ef\'e8\'f1\'e0\'ed\'e8\'e5 \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee char* const\cf0\kerning1\par
\cf1\kerning0\par
type& \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee type* const, \'e7\'e0 \'e8\'f1\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'e5\'ec \'f2\'ee\'e3\'ee \'f7\'f2\'ee type* const \'ec\'ee\'e6\'e5\'f2 = NULL, \'e0 type& \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 = NULL\cf0\kerning1\par
\cf1\kerning0\par
\'e0) const \'f3 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\tx4544\tx6816\cf1\kerning0 main.cpp\tab a.h\tab a.cpp\tab\tab util.cpp\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\tx4544\tx7242\cf1\kerning0 #include "a.h"\tab extern const int n;\tab const int N=10;\tab #include "a.h"\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\'e1) const \'f3 \'ef\'ee\'eb\'ff. \'c2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'ee\'eb\'e5 \'ee\'e4\'e8\'ed \'f0\'e0\'e7 - \'fd\'f2\'ee \'ef\'ee\'eb\'e5 "\'f0\'e0\'e7\'ec\'e5\'f0".\cf0\kerning1\par
\cf1\kerning0 class Array\{\cf0\kerning1\par
\cf1\kerning0 private:\cf0\kerning1\par
\cf1\kerning0    const int mySize;\cf0\kerning1\par
\cf1\kerning0    int Count;\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0    Array (int size, int value) : mySize (size), Count (value) \{\}\tab //\'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1 \'ef\'ee \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'ef\'ee\'eb\'e5\'e9 \'e8\'eb\'e8 \b\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'fb \'f1\'ee \'f1\'ef\'e8\'f1\'ea\'e0\'ec\'e8 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8\b0 . \'c2 \'ef\'f0\'e8\'ec\'e5\'f0\'e5, \'ef\'f0\'e8 \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'e8 \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'ea\'eb\'e0\'f1\'f1\'e0 Array a(10) \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 10 \'f1\'f0\'e0\'e7\'f3 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'e5\'f2\'f1\'ff mySize.\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 8.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'cb\'e8\'ed\'ea\'ee\'e2\'ea\'e0\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0 1.cpp\tab 2.cpp\cf0\kerning1\par
\cf1\kerning0 int c=0;\tab int f()\{\cf0\kerning1\par
\cf1\kerning0\tab c++\cf0\kerning1\par
\cf1\kerning0\tab\} - \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'ed\'e5 \'e1\'f3\'e4\'e5\'f2, \'ef\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee \'e2 2.cpp \'ed\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'f1\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'ce\'e4\'ed\'ee \'e8\'e7 \'f1\'f0\'e5\'e4\'f1\'f2\'e2, \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'ee\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ee\'e9 \'e2 \'ea\'e0\'ea\'ee\'ec-\'ed\'e8\'e1\'f3\'e4\'fc 1.h extern int c;\cf0\kerning1\par
\cf1\kerning0\'d7\'e5\'ec \'ef\'eb\'ee\'f5\'e8 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5:\cf0\kerning1\par
\cf1\kerning0\'c8\'ed\'e2\'e0\'f0\'e8\'e0\'ed\'f2\'ed\'ee\'f1\'f2\'fc - \'e5\'f1\'eb\'e8 \'e5\'f1\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff d, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 extern \'f1... \'c2 \'ee\'e1\'f9\'e5\'ec \'ee\'e4\'ed\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff - \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'e0\'ff, \'e2\'f2\'ee\'f0\'e0\'ff \'ed\'e5\'f2, \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'fc \'e4\'f0\'f3\'e3 \'ee\'f2 \'e4\'f0\'f3\'e3\'e0 -> \'ef\'ee\'f2\'e5\'ed\'f6\'e8\'e0\'eb\'fc\'ed\'ee \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb.\cf0\kerning1\par
\cf1\kerning0\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'ee\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e4\'ee \'e2\'f5\'ee\'e4\'e0 \'e2 main(). \'cf\'ee\'f0\'ff\'e4\'ee\'ea \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'e2\'fb\'e1\'e8\'f0\'e0\'e5\'f2 \'f1\'e0\'ec \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0. \'cc\'ee\'e6\'e5\'f2 \'ef\'f0\'ee\'e8\'e7\'ee\'e9\'f2\'e8 \'ea\'e0\'e7\'f3\'f1, \'e5\'f1\'eb\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff class-\'fb. \'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'f3\'e5\'f8\'fc class, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'f3\'fe \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe, \'e0 \'f1\'e0\'ec\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'e5\'f9\'b8 \'ed\'e5 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'e0 - fail.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\ul Static\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c4\'e0\'ed\'ed\'fb\'e5 \'f1 static \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'fb \'e2 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'ee\'ec \'ec\'e5\'f1\'f2\'e5 \'e2 heap. \'cc\'ee\'e6\'ed\'ee \'f3\'e2\'e8\'e4\'e5\'f2\'fc \'e2 heapdump.\cf0\kerning1\par
\cf1\kerning0\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e0\'eb\'ff shared memory \'e4\'eb\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2, \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'f5 \'e2 \'ee\'e4\'ed\'ee\'ec \'f4\'e0\'e9\'eb\'e5. \'c2 \'f1\'eb\'f3\'f7\'e0\'e5 \'f1 class, \'f2\'ee\'e6\'e5 \'f1\'e0\'ec\'ee\'e5, \'ed\'ee \'f7\'f3\'f2\'fc \'f5\'e8\'f2\'f0\'e5\'e5 (\'f1\'ec.\'ed\'e8\'e6\'e5).\cf0\kerning1\par
\cf1\kerning0  1. \'c3\'eb\'ee\'e4\'e1\'e0\'eb\'fc\'ed\'fb\'e5 static \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.h \'f1\'ee\'e7\'e4\'e0\'f2\'fc static int k=10; \'e0 \'ef\'ee\'f2\'ee\'ec \'e5\'e3\'ee \'e2\'ea\'eb\'fe\'f7\'e8\'f2\'fc \'e2 1.cpp, 2.cpp \'e8 3.cpp \'f4\'e0\'e9\'eb\'fb, \'f2\'ee \'f0\'e5\'e0\'eb\'fc\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'f1\'f2\'f1\'ff 3-\'e8 \'ed\'e5\'e7\'e0\'e2\'e8\'f1\'e8\'ec\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 k, \'e2 \'ea\'e0\'e6\'e4\'ee\'ec .cpp \'f4\'e0\'e9\'eb\'e5.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.h \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'ef\'f0\'ee\'f1\'f2\'ee int k=10; \'e0 \'ef\'ee\'f2\'ee\'ec \'e5\'e3\'ee \'e2\'ea\'eb\'fe\'f7\'e8\'f2\'fc \'e2 1-3.cpp \'f4\'e0\'e9\'eb\'fb, \'f2\'ee \'e2\'fb\'eb\'e5\'e7\'e5\'f2 \'ee\'f8\'e8\'e1\'ea\'e0, \'f2\'e0\'ea \'ea\'e0\'ea \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'f1\'ff 3-\'e8 \'f0\'e0\'e7\'e0 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'ee\'e4\'ed\'ee\'e9 \'e8 \'f2\'ee\'e9 \'e6\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.h \'f1\'ee\'e7\'e4\'e0\'f2\'fc entern int k=10; \'e0 \'ef\'ee\'f2\'ee\'ec \'e5\'e3\'ee \'e2\'ea\'eb\'fe\'f7\'e8\'f2\'fc \'e2 1.cpp, 2.cpp \'e8 3.cpp \'f4\'e0\'e9\'eb\'fb, \'f2\'ee \'f1\'ee\'e7\'e4\'e0\'f1\'f2\'f1\'ff \'ee\'e4\'ed\'e0 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'e0\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff.\cf0\kerning1\par
\cf1\kerning0  2. \'cb\'ee\'ea\'e0\'eb\'fc\'ed\'e0\'ff Static \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ed\'e5\'ea\'ee\'f2\'ee\'f0\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0\tab int f()\{\cf0\kerning1\par
\cf1\kerning0\tab int h=0;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\li720\sl240\slmult1\cf1\kerning0 h=h+1;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\tab return h; - \'e5\'f1\'eb\'e8 \'e2\'fb\'e7\'ee\'e2\'e5\'ec \'f4\'f3\'ed\'ea\'f6\'e8\'fe f() \'ef\'e5\'f0\'e2\'fb\'e9 \'f0\'e0\'e7 - \'f2\'ee \'e2\'e5\'f0\'ed\'b8\'f2\'f1\'ff \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 1, \'e5\'f1\'eb\'e8 \'e2\'fb\'e7\'ee\'e2\'e5\'ec f() \'e2\'f2\'ee\'f0\'ee\'e9 \'f0\'e0\'e7, \'f2\'ee \'f2\'ee\'e6\'e5 1. \'c7\'e0\'e4\'e0\'f7\'e0 \'f1\'ee\'f5\'f0\'e0\'ed\'ff\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe \'ef\'f0\'e8 \'ea\'e0\'e6\'e4\'ee\'ec \'e2\'fb\'e7\'ee\'e2\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8.\cf0\kerning1\par
\cf1\kerning0\'c2\'ee \'e2\'f2\'ee\'f0\'ee\'e9 \'f1\'f2\'f0\'ee\'ea\'e5 \'ed\'e0\'e4\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc static int h=0; - \'f2\'ee\'e3\'e4\'e0 \'e2\'f1\'b8 \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'ed\'ee\'f0\'ec\'e0\'eb\'fc\'ed\'ee\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'ed\'e5\'ec\'ed\'ee\'e3\'ee \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'e0\'f2\'fc:\cf0\kerning1\par
\cf1\kerning0\tab int f(int k)\{\cf0\kerning1\par
\cf1\kerning0\tab static int h=k;\cf0\kerning1\par
\cf1\kerning0\tab h=h+1;\cf0\kerning1\par
\cf1\kerning0\tab return h; - \'ef\'f0\'e8 \'ef\'e5\'f0\'e2\'ee\'ec \'e7\'e0\'ef\'f0\'ee\'f1\'e5 f(3) \'e2\'e5\'f0\'ed\'b8\'f2\'f1\'ff \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 4, \'ef\'f0\'e8 \'e2\'f2\'ee\'f0\'ee\'ec \'e7\'e0\'ef\'f0\'ee\'f1\'e5 f(3) \'e2\'e5\'f0\'ed\'b8\'f2\'f1\'ff \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 5, \'f2\'e0\'ea \'ea\'e0\'ea \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff h \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'ee\'e4\'e8\'ed \'f0\'e0\'e7, \'ef\'f0\'e8 \'e2\'f2\'ee\'f0\'ee\'ec \'e7\'e0\'ef\'f0\'ee\'f1\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 f(3) \'ea\'ee\'ec\'e0\'ed\'e4\'e0 static int h=k \'f4\'e0\'ea\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'e1\'f3\'e4\'e5\'f2 \'e8\'e3\'ed\'ee\'f0\'e8\'f0\'ee\'e2\'e0\'f2\'fc\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'e1\'f3\'e4\'e5\'f2 \'f2\'ee\'eb\'fc\'ea\'ee \'ef\'f0\'e8 \'ef\'e5\'f0\'e2\'ee\'ec \'ee\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e8 \'ea \'f4\'f3\'ed\'ea\'f6\'e8\'e8 f().\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'ec\'fb \'e3\'ee\'e2\'ee\'f0\'e8\'ec \'ee class \'ee\'ef\'e8\'f1\'e0\'ed\'ed\'fb\'ec \'ea\'e0\'ea static, \'f2\'ee \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc\'f1\'ff \'ef\'f0\'e8 \'ef\'e5\'f0\'e2\'ee\'ec \'ee\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'e8 \'ea \'ea\'eb\'e0\'f1\'f1\'f3, \'e0 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'f0\'e8 \'e2\'fb\'f5\'ee\'e4\'e5 \'e8\'e7 main().\cf0\kerning1\par
\cf1\kerning0  3. Static \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0\'cf\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \b\'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ea\'e0\'ea extern\b0 , \'f2.\'e5. \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'e8\'ec\'e5\'fe\'f2 \'e2\'ed\'e5\'f8\'ed\'fe\'fe \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'f3, \'f2.\'e5. \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'e2\'fb\'e7\'e2\'e0\'ed\'e0 \'e8\'e7 \'eb\'fe\'e1\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'e0.\cf0\kerning1\par
\cf1\kerning0 void f()\{\} = extern void f()\{\}\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'ec\'fb \'fd\'f2\'ee\'e3\'ee \'ed\'e5 \'f5\'ee\'f2\'e8\'ec, \'f2\'ee \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'ec \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'ea\'e0\'ea static void f()\{\} - \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'ec \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'fe\'fe \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'f3, \'f2.\'e5. \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'e2\'fb\'e7\'e2\'e0\'ed\'e0 \'d2\'ce\'cb\'ca\'dc\'ca\'ce \'e8\'e7 \'f4\'e0\'e9\'eb\'e0, \'e3\'e4\'e5 \'ee\'ed\'e0 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0.\cf0\kerning1\par
\kerning0{\field{\*\fldinst{HYPERLINK "http://citforum.ru/programming/c/h16.shtml"}}{\fldrslt{\ul\cf2 http://citforum.ru/programming/c/h16.shtml}}}\kerning1\f0\fs22\par
\cf1\kerning0  4. Static \'ef\'ee\'eb\'e5 \'ea\'eb\'e0\'f1\'f1.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0\'c7\'e4\'e5\'f1\'fc counter \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'e0\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ea\'eb\'e0\'f1\'f1\'e0, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2 \'ee\'e1\'eb\'e0\'f1\'f2\'e8 \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'ea\'eb\'e0\'f1\'f1\'e0 \'e8 \'ee\'ed\'e0 \'e5\'e4\'e8\'ed\'f1\'f2\'e2\'e5\'ed\'ed\'e0 \'ed\'e0 \'e2\'f1\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ea\'eb\'e0\'f1\'f1\'e0.\'d1\'eb\'e5\'e4\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'ed\'ee, \'ee\'ed\'e0 \'e8\'ec\'e5\'e5\'f2 \'e2\'ed\'e5\'f8\'ed\'fe\'fe \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'f3, \'ef\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee \'ec\'ee\'e6\'e5\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'e2 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'e8\'f5 \'e8\'f1\'ef\'ee\'eb\'ed\'ff\'e5\'ec\'fb\'f5 \'f4\'e0\'e9\'eb\'e0\'f5. \'ca\'f0\'ee\'ec\'e5 \'f2\'ee\'e3\'ee, \'fd\'f2\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ed\'e5 \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'ee\'eb\'e5\'ec \'ea\'eb\'e0\'f1\'f1\'e0 \'e8 \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'e5\'f2 \'e5\'f9\'e5 \'e4\'ee \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2 \'fd\'f2\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0, \'ef\'ee\'fd\'f2\'ee\'ec\'f3 \'e5\'e5 \'ed\'e5 \'ed\'f3\'e6\'ed\'ee \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'e2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e5. \cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0 struct Process\{\cf0\kerning1\par
\cf1\kerning0       Process()\{ ++counter;\}\cf0\kerning1\par
\cf1\kerning0       ~Process()\{--counter;\}\cf0\kerning1\par
\cf1\kerning0       static int counter;\}\cf0\kerning1\par
\cf1\kerning0 Process::counter;\cf0\kerning1\par
\cf1\kerning0  5. Static \'ec\'e5\'f2\'ee\'e4 \'ea\'eb\'e0\'f1\'f1\'e0.\cf0\kerning1\par
\cf1\kerning0 class Process\{\cf0\kerning1\par
\cf1\kerning0    public:\cf0\kerning1\par
\cf1\kerning0       Process()\{ ++counter;\}\cf0\kerning1\par
\cf1\kerning0       ~Process()\{--counter;\}\cf0\kerning1\par
\cf1\kerning0       static int GetCounter()\{...\};\cf0\kerning1\par
\cf1\kerning0    private:\cf0\kerning1\par
\cf1\kerning0       static int counter;\}\cf0\kerning1\par
\cf1\kerning0\'cc\'e5\'f2\'ee\'e4 \'ec\'ee\'e6\'ed\'ee \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'f2\'ee\'ea\'eb\'fc\'ee \'f2\'e0\'ea Process::GetCounter(). \'c4\'eb\'ff \'e2\'fb\'e7\'ee\'e2\'e0 \'ed\'e5 \'ed\'f3\'e6\'ed\'ee \'e8\'ec\'e5\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2 \'ea\'eb\'e0\'f1\'f1\'e0 Process. \'cc\'e5\'f2\'ee\'e4 \'ed\'e5\'eb\'fc\'e7\'ff \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'f7\'e5\'f0\'e5\'e7 ".", \'f2\'e0\'ea \'ea\'e0\'ea \'ed\'e5 \'ef\'ee\'eb\'ed\'ee\'f6\'e5\'ed\'ed\'fb\'ec \'ec\'e5\'f2\'ee\'e4\'ee\'ec \'ea\'eb\'e0\'f1\'f1\'e0: \'ef\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 \'e2 \'ed\'e5\'e5 \'ed\'e5 \'ef\'e5\'f0\'e5\'e4\'e0\'e5\'f2\'f1\'ff \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc this. \'cc\'e5\'f2\'ee\'e4 \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc const. \cf0{\field{\*\fldinst{HYPERLINK "http://www.amse.ru/courses/cpp2/2011_02_07.html"}}{\fldrslt{\ul\cf2 http://www.amse.ru/courses/cpp2/2011_02_07.html}}}\kerning1\f0\fs22\par
\cf1\kerning0  6. \'cf\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \b\'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'fe\'f2\'f1\'ff \'ea\'e0\'ea auto\b0  - \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'ee\'e1\'eb\'e0\'f1\'f2\'fc \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 - \'eb\'ee\'ea\'e0\'eb\'fc\'ed\'e0\'ff, \'f2.\'e5. \'e2\'ed\'f3\'f2\'f0\'e8 \'ee\'e4\'ed\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8. \'d5\'f0\'e0\'ed\'e8\'f2\'f1\'ff \'ed\'e0 \'f1\'f2\'e5\'ea\'e5. \'c5\'f1\'f2\'fc \'e5\'f9\'b8 register - \'f3\'ea\'e0\'e7\'e0\'ed\'e8\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'f3 \'f5\'f0\'e0\'ed\'e8\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe \'e2 \'f0\'e5\'e3\'e8\'f1\'f2\'f0\'e5 \'ef\'f0\'ee\'f6\'e5\'f1\'ee\'ee\'f0\'e0. \'cc\'ee\'e6\'e5\'f2 \'f5\'f0\'e0\'ed\'e8\'f2\'fc\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff int \'e8\'eb\'e8 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'e4\'eb\'e8\'ed\'e0 \'ea\'ee\'f2\'ee\'f0\'ee\'e3\'ee \'e2\'f1\'e5\'e3\'e4\'e0 int.\cf0\kerning1\par
\cf1\kerning0\par
\b auto\b0  - \'f2\'e0\'ea\'e6\'e5 \'e2 \'d1++ 11 \'e1\'fb\'eb\'ee \'e2\'e2\'e5\'e4\'e5\'ed\'ee \'e4\'eb\'ff \'cd\'c5\'df\'c2\'cd\'ce\'c9 \'f2\'e8\'ef\'e8\'e7\'e0\'f6\'e8\'e8:\cf0\kerning1\par
\cf1\kerning0\tab int a = 10;\cf0\kerning1\par
\cf1\kerning0\tab auto b = a + 15;\tab // \'f2\'e8\'ef \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 b \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2 \'f1\'e0\'ec \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 - \'d1++ \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'f2\'e8\'ef\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'ff\'e7\'fb\'ea, \'e0 \'f5\'ee\'f7\'e5\'f2\'f1\'ff \'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc \'ec\'f3\'eb\'e5\'ea \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'ee\'e9 \'f2\'e8\'ef\'e8\'e7\'e0\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0\par
\'c2\'cd\'d3\'d2\'d0\'c5\'cd\'cd\'df\'df \'c8 \'c2\'cd\'c5\'d8\'cd\'df\'df \'cb\'c8\'cd\'ca\'ce\'c2\'ca\'c0 \'d4\'d3\'cd\'ca\'d6\'c8\'c9\cf0\kerning1\par
\cf1\kerning0\'c2\'ed\'e5\'f8\'ed\'ff\'ff: \'ea\'ee\'e3\'e4\'e0 \'ef\'ee\'f1\'eb\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'ee\'e3\'ee .cpp \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'f1\'ff \'f4\'e0\'e9\'eb, \'e2 \'ea\'ee\'f2\'ee\'f0\'ee\'ec \'e1\'f3\'e4\'e5\'f2 \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'ee "\'c2\'fb\'e7\'ee\'e2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'f1 \'e8\'ec\'e5\'ed\'e5\'ec hello()" \cf0\kerning1\par
\cf1\kerning0\par
\'c4\'e2\'e0 \'ef\'ee\'ed\'ff\'f2\'e8\'ff: \'ee\'e1\'eb\'e0\'f1\'f2\'e8 \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'e8 \'e2\'f0\'e5\'ec\'ff \'e6\'e8\'e7\'ed\'e8.\cf0\kerning1\par
\cf1\kerning0 extern - \'ee\'e1\'eb\'e0\'f1\'f2\'e8 \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'e2\'ee \'e2\'f1\'e5\'f5 \'e1\'eb\'ee\'ea\'e0\'f5, \'e2\'ee \'e2\'f1\'e5\'f5 \'f4\'e0\'e9\'eb\'e0\'f5; \'f5\'f0\'e0\'ed\'e8\'f2\'f1\'ff \'e2 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'ee\'e9 \'ef\'e0\'ec\'ff\'f2\'e8; \'e2\'f0\'e5\'ec\'ff \'e6\'e8\'e7\'ed\'e8 - \'f1 \'ed\'e0\'f7\'e0\'eb\'e0 \'e4\'ee \'ea\'ee\'ed\'f6\'e0\cf0\kerning1\par
\cf1\kerning0 static - \'ee\'e1\'eb\'e0\'f1\'f2\'e8 \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'d2\'ce\'cb\'dc\'ca\'ce \'e2 \'e1\'eb\'ee\'ea\'e5 \'e3\'e4\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0; \'f5\'f0\'e0\'ed\'e8\'f2\'f1\'ff \'e2 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'ee\'e9 \'ef\'e0\'ec\'ff\'f2\'e8; \'e2\'f0\'e5\'ec\'ff \'e6\'e8\'e7\'ed\'e8 - \'f1 \'ec\'ee\'ec\'e5\'ed\'f2\'e0 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'ff \'e8 \'e4\'ee \'ea\'ee\'ed\'f6\'e0.\cf0\kerning1\par
\cf1\kerning0 auto - \'ee\'e1\'eb\'e0\'f1\'f2\'e8 \'e2\'e8\'e4\'e8\'ec\'ee\'f1\'f2\'e8 \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'e1\'eb\'ee\'ea\'e5 \'e3\'e4\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0 \'e8 \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'f2\'ee\'ec \'f4\'e0\'e9\'eb\'e5 \'e3\'e4\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0; \'f5\'f0\'e0\'ed\'e8\'f2\'f1\'ff \'ed\'e0 \'f1\'f2\'e5\'ea\'e5; \'e2\'f0\'e5\'ec\'ff \'e6\'e8\'e7\'ed\'e8 - \'e4\'ee \'e7\'e0\'ea\'f0\'fb\'f2\'e8\'ff \'e1\'eb\'ee\'ea\'e0\cf0\kerning1\par
\cf1\kerning0\par
\ul Inline\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e2 \'ea\'ee\'e4 \'e2\'f1\'f2\'e0\'e2\'e8\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'fe, \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'ed\'f3\'fe \'ea\'e0\'ea inline, \'f2\'ee \'e4\'eb\'ff \'ed\'e5\'b8 \'ed\'e5 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'ee\'e2\'e0 call(). \'c2\'ec\'e5\'f1\'f2\'ee \'fd\'f2\'ee\'e3\'ee \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'fb\'e5 \'ea\'ee\'ec\'e0\'ed\'e4\'fb \'e2\'f1\'f2\'e0\'e2\'ff\'f2\'f1\'ff \'ef\'f0\'ff\'ec\'ee \'e2 \'ea\'ee\'e4.\cf0\kerning1\par
\cf1\kerning0\'d5\'ee\'f0\'ee\'f8\'e8\'e9 \'ef\'f0\'e8\'ec\'e5\'f0 inline \'f4\'f3\'ed\'ea\'f6\'e8\'e9 - \'fd\'f2\'ee abs() \'e8\'eb\'e8 ord()-\'ef\'e5\'f0\'e5\'e2\'ee\'e4 \'e8\'e7 char \kerning1\u8594? int\cf0\par
\par
\cf1\kerning0\'d0\'e0\'e7\'eb\'e8\'f7\'e8\'ff \'ec\'e5\'e6\'e4\'f3 class \'e8 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'ec: class - \'fd\'f2\'ee \'ee\'ef\'e8\'f1\'e0\'ed\'e8\'e5 \'ea\'e0\'ea \'f3\'f1\'f2\'f0\'ee\'e5\'ed \'ee\'e1\'fa\'e5\'ea\'f2 \'e8 \'ec\'e5\'f2\'ee\'e4\'ee\'e2. \'cf\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ea\'eb\'e0\'f1\'f1 \'ed\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'ed\'e5 \'e2\'ee \'f7\'f2\'ee !!!! \'ca\'eb\'e0\'f1\'f1 - \'fd\'f2\'ee \'ee\'ef\'e8\'f1\'e0\'ed\'e8\'e5. \'ca\'ee\'e3\'e4\'e0 \'ec\'fb \'ef\'e8\'f8\'e5\'ec \'ea\'eb\'e0\'f1\'f1 \'e2\'f1\'e5 \'ef\'ee\'eb\'ff \'e2 \'ed\'b8\'ec \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe private.\cf0\kerning1\par
\cf1\kerning0\'ce\'e1\'fa\'e5\'ea\'f2 - \'fd\'f2\'ee \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0 \'ea\'eb\'e0\'f1\'f1\'e0. \'cc\'ee\'e6\'ed\'ee \'f1\'ea\'e0\'e7\'e0\'f2\'fc \'ea\'f3\'f1\'ee\'f7\'e5\'ea \'ef\'e0\'ec\'ff\'f2\'e8, \'e2 \'ea\'ee\'f2\'ee\'f0\'ee\'ec \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2\'f1\'ff \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'ff, \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e0\'ff \'ea\'eb\'e0\'f1\'f1\'f3.\cf0\kerning1\par
\cf1\kerning0\'ca\'e0\'ea \'ef\'ee\'ed\'ff\'f2\'e8\'e5 int - \'fd\'f2\'ee \'e0\'ed\'e0\'eb\'ee\'e3 \'ea\'eb\'e0\'f1\'f1\'e0. \'d1\'e0\'ec int \'ed\'e5 \'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\'c0 \'e2\'ee\'f2 \'e5\'f1\'eb\'e8 int h, \'f2\'ee h - \'ec\'ee\'e6\'ed\'ee \'f1\'ea\'e0\'e7\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2 \'ea\'eb\'e0\'f1\'f1\'e0 int.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 : \'ce\'e4\'e8\'ed Hello.h, \'e2 \'ea\'ee\'f2\'ee\'f0\'ee\'ec \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'ff f(); \'d4\'e0\'e9\'eb Hello.h \'e2\'ea\'eb\'fe\'f7\'e5\'ed \'e2 1.cpp, 2.cpp, 3.cpp \'cf\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'e2\'f1\'b8 \'f5\'ee\'f0\'ee\'f8\'ee, \'ef\'f0\'e8 \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'e5 - fail. \'ce\'e4\'ed\'e0 \'e8 \'f2\'e0 \'e6\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e1\'f3\'e4\'e5\'f2 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e0 3-\'e8 \'f0\'e0\'e7\'e0.\cf0\kerning1\par
\cf1\kerning0\'c4\'e5\'eb\'e0\'e5\'ec \'f2\'e0\'ea: \'e2 Hello.h \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'ec \'ed\'e5 \'ef\'f0\'ee\'f1\'f2\'ee f(), \'e0 Class C\{... void f(); ...\}. \'cf\'f0\'e8 \'fd\'f2\'ee\'ec \'e2\'f1\'b8 \'f1\'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'e8 \'ef\'f0\'ee\'e9\'e4\'b8\'f2 \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'e0.\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee, \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'fe\'f2\'f1\'ff \'ea\'e0\'ea inline f(); - \'ea\'e0\'ea\'ee\'e9-\'f2\'ee \'ef\'f0\'ee\'e3\'ee\'ed.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c2 \'d1\'e8 \'ed\'e5 \'e1\'fb\'eb\'ee \'ea\'eb\'e0\'f1\'f1\'ee\'e2, \'ed\'ee \'e1\'fb\'eb\'e8 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb. \'d0\'e0\'e7\'ed\'e8\'f6\'e0 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb \'ee\'f2 \'ea\'eb\'e0\'f1\'f1\'e0 - \'e2 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e5 \'ed\'e5\'f2 \'ec\'e5\'f2\'ee\'e4\'ee\'e2 \'e8 \'ec\'ee\'e4\'e8\'f4\'e8\'ea\'e0\'f2\'ee\'f0\'ee\'e2 \'e4\'ee\'f1\'f2\'f3\'ef\'e0 (\'f0\'e5\'e3\'f3\'eb\'e8\'f0\'f3\'e5\'f2 \'ef\'f0\'e0\'e2\'e0 \'e4\'ee\'f1\'f2\'f3\'ef\'e0: private, public) + \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe, \'e2\'f1\'b8 \'f7\'f2\'ee \'ef\'e8\'f8\'e5\'f2\'f1\'ff \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 - private, \'e0 \'e2\'f1\'b8 \'f7\'f2\'ee \'ef\'e8\'f8\'e5\'f2\'f1\'ff \'e2 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e5 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe public.\cf0\kerning1\par
\cf1\kerning0 struct Point \{\tab struct Point \{\tab struct Point \{\tab struct Point \{\cf0\kerning1\par
\cf1\kerning0\tab double x;\tab\tab double x;\tab\tab double x;\tab\tab double x;\cf0\kerning1\par
\cf1\kerning0\tab double y;\}\tab\tab double y;\tab\tab double y;\};\tab\tab double y;\};\cf0\kerning1\par
\cf1\kerning0\tab Point p;\tab\tab\} p;\tab\tab\tab Point p=\{10,20\}\tab Point p=\{\cf0\kerning1\par
\cf1\kerning0\tab p.x=10;\tab\tab p.x=10;\tab\tab\tab\tab\tab .x=10,\cf0\kerning1\par
\cf1\kerning0\tab p.y=20;\tab\tab p.y=20;\tab\tab\tab\tab\tab .y=20\}\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 9.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'c2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2 \'ed\'e0 \'ca\'f3\'f7\'e5\ulnone :\cf0\kerning1\par
\cf1\kerning0 Complex* pC= new Complex(); - \'e2\'fb\'e7\'e2\'e0\'eb \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe, \'e7\'ed\'e0\'f7\'e8\'f2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'e1\'e5\'e7 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'e2 Complex()\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\cf1\kerning0\tab Complex(3,3); - \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'f1 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'d3 \'ee\'ef\'e5\'f0\'f6\'e8\'e8 new \'c4\'cb\'df \'cc\'c0\'d1\'d1\'c8\'c2\'ce\'c2 \'e5\'f1\'f2\'fc \'ed\'fc\'fe\'e0\'ed\'f1: \'ef\'ee\'f1\'eb\'e5 \'ee\'ef\'f0\'e5\'f0\'e0\'f2\'ee\'f0\'e0 new \'e4\'ee\'eb\'e6\'e5\'ed \'e8\'e4\'f2\'e8 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe, \'f2.\'e5 \'e1\'e5\'e7 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'e2. \'c5\'f1\'eb\'e8 \'f2\'e0\'ea\'ee\'e3\'ee \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0 \'f3 \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'ed\'e5\'f2, \'f2\'ee \'e1\'f3\'e4\'e5\'f2 \'ee\'f8\'e8\'e1\'ea\'e0.\cf0\kerning1\par
\cf1\kerning0\par
\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'f3\'e1\'e8\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2:\cf0\kerning1\par
\cf1\kerning0 delete pC;\cf0\kerning1\par
\cf1\kerning0 delete [] pArray; - \'e7\'e0\'e3\'e2\'ee\'e7\'e4\'ea\'e0 \'e2 [] - \'ea\'e0\'ea \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2: \'e2 \'ff\'f7\'e5\'e9\'ea\'e5 \'b9 -1 - \'eb\'e5\'e6\'e8\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e4\'eb\'e8\'ed\'fb \'ec\'e0\'f1\'f1\'e8\'e2\'e0, \'e2 \'ff\'f7\'e5\'e9\'ea\'e5 \'b9 0 \'eb\'e5\'e6\'e8\'f2 \'ef\'e5\'f0\'e2\'ee\'e5 \'e7\'ed\'e0\'e5\'ed\'e8\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'e0, \'e2 \'ff\'f7\'e5\'e9\'ea\'e5 \'b9 1 \'e2\'f2\'ee\'f0\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e8 \'f2.\'e4., \'ea\'ee\'e3\'e4\'e0 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'ec delete, \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ea \'ff\'f7\'e5\'e9\'ea\'e5 \'b9 0 \'ef\'f0\'e8\'ec\'e5\'ed\'ff\'e5\'f2 \'e4\'e8\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'e4\'eb\'ff pArray, \'e8 \'fd\'f2\'ee \'e4\'e5\'eb\'e0\'e5\'f2 N \'f0\'e0\'e7, \'ea\'ee\'f2\'ee\'f0\'ee\'e5 \'f3\'ea\'e0\'e7\'e0\'ed\'ee \'e2 \'ff\'f7\'e5\'e9\'ea\'e5 \'b9 -1, \'ec\'ee\'e6\'ed\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'fc \'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f0\'e0\'e7 \'ed\'e0\'e4\'ee \'ef\'f0\'e8\'ec\'e5\'ed\'e8\'f2\'fc \'e4\'e8\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0: delete [10] pArray;\cf0\kerning1\par
\cf1\kerning0\par
\'c4\'eb\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2 \'f1\'ee\'e7\'e4\'e0\'ed\'ed\'fb\'f5 \'e2 \'ca\'f3\'f7\'e5, \'f5\'ee\'f2\'e5\'eb\'ee\'f1\'fc \'e1\'fb \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'e8:\cf0\kerning1\par
\cf1\kerning0 (*pC).getRe() \'e8\'eb\'e8 pC -> getRe()\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 : \'d0\'e0\'f1\'f1\'ec\'ee\'f2\'f0\'e8\'ec \'f1\'eb\'f3\'f7\'e0\'e9, \'ea\'ee\'e3\'e4\'e0 \'ea\'eb\'e0\'f1\'f1 \'c0 \'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2 \'ea\'eb\'e0\'f1\'f1\'e0 \'c2\cf0\kerning1\par
\cf1\kerning0\'c2\'ee\'e7\'ec\'ee\'e6\'ed\'fb \'e2\'e0\'f0\'e8\'e0\'ed\'f2\'fb:\cf0\kerning1\par
\cf1\kerning0 1. \'ca\'eb\'e0\'f1\'f1 \'c0 \'e8\'ec\'e5\'e5\'f2 \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 \'ea\'eb\'e0\'f1\'f1 \'c2\cf0\kerning1\par
\cf1\kerning0 2. \'ca\'eb\'e0\'f1\'f1 \'c0 \'e8\'ec\'e5\'e5\'f2 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'ea\'eb\'e0\'f1\'f1 \'c2\cf0\kerning1\par
\cf1\kerning0 3. \'ca\'eb\'e0\'f1\'f1 \'c0 \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2 \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'ee\'eb\'ff \'ea\'eb\'e0\'f1\'f1 \'c2\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'e8\'eb\'fc\'ed\'ee \'f1\'e2\'ff\'e7\'e0\'ed\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'fb: \'ca\'eb\'e0\'f1\'f1 \'c0 \'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2 \'ca\'eb\'e0\'f1\'f1\'e0 \'c2 + \'ca\'eb\'e0\'f1\'f1 \'c2 \'e7\'e0\'e2\'e8\'f1\'e8\'f2 \'ee\'f2 \'ca\'eb\'e0\'f1\'f1\'e0 \'c0\cf0\kerning1\par
\cf1\kerning0\par
\'cc\'e0\'ea\'e5\'f2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'e8\'e3\'f0\'fb \'e2 \'ca\'f0\'e5\'f1\'f2\'e8\'ea\'e8-\'cd\'ee\'eb\'e8\'ea\'e8:\cf0\kerning1\par
\cf1\kerning0\'c1\'f3\'e4\'e5\'ec \'e4\'e5\'eb\'e0\'f2\'fc \'e8\'e7 2-\'f5 \'f7\'e0\'f1\'f2\'e5\'e9:\cf0\kerning1\par
\cf1\kerning0 1. Model - \'ef\'ee\'f1\'f2\'e0\'e2\'e8\'f2 \'ea\'f0\'e5\'f1\'f2\'e8\'ea \'e8\'eb\'e8 \'ed\'ee\'eb\'e8\'ea, \'ef\'ee\'f1\'ec\'ee\'f2\'f0\'e5\'f2\'fc \'f1\'ee\'f1\'f2\'ee\'ff\'ed\'e8\'e5 \'ff\'f7\'e5\'e9\'ea\'e8 \'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0 2. View - \'ef\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed\'e5 - \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1.\cf0\kerning1\par
\cf1\kerning0 Model \'ea\'e0\'ea \'ef\'f0\'e0\'e2\'e8\'eb\'ee \'ed\'e5 \'e8\'e7\'ec\'e5\'ed\'ff\'e5\'f2\'f1\'ff, \'e0 View \'e8\'e7\'ec\'e5\'ed\'ff\'e5\'f2\'f1\'ff \'f7\'e0\'f9\'e5. View \'ec\'ee\'e6\'ed\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'f2\'e5\'ea\'f1\'f2\'ee\'e2\'fb\'ec, \'ec\'ee\'e6\'ed\'ee \'e3\'f0\'e0\'f4\'e8\'f7\'e5\'f1\'ea\'e8\'ec, \'ec\'ee\'e6\'ed\'ee \'e2 \'e1\'f0\'e0\'f3\'e7\'e5\'f0\'e5 \'e8 \'f2.\'e4.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\cf1\kerning0 .h\tab .cpp\cf0\kerning1\par
\cf1\kerning0 class Board\{\tab const int Board::FIELD_SIZE=3; \'e8\'eb\'e8 \'f2\'e0\'ea\cf0\kerning1\par
\cf1\kerning0 private:\tab Board::Board() \{\tab\'e8\'eb\'e8 Board::Board():FIELD_SIZE(3);\cf0\kerning1\par
\cf1\kerning0  int b[3][3];\tab FIELD_SIZE=3;\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0  static const int FIELD_SIZE;\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0  Board();\cf0\kerning1\par
\cf1\kerning0  bool makeMove (int x, int y, int sign);\cf0\kerning1\par
\cf1\kerning0  int getSize();\cf0\kerning1\par
\cf1\kerning0  int isWin();\cf0\kerning1\par
\cf1\kerning0  int getCell(int x, int y);\}\cf0\kerning1\par
\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx2272\tx4544 class BoardView\{\tab int main()\{\tab BoardView::BoardView(Board* b)\{\cf0\kerning1\par
\cf1\kerning0 private:\tab Board b;\tab board = b;\}\cf0\kerning1\par
\cf1\kerning0  Board* board;\tab BoardView v(&b);\tab void BoardView::show()\{\cf0\kerning1\par
\cf1\kerning0  void show();\tab v.startGame();\}\tab for (i....)\{\cf0\kerning1\par
\cf1\kerning0 public:\tab\tab for (j....)\{\cf0\kerning1\par
\cf1\kerning0  void startGame();\tab\tab\'e2\'fb\'e2\'ee\'e4 \'ea\'eb\'e5\'f2\'ea\'e8 i, j \'ed\'e0\'e4\'ee \'f1\'ef\'f0\'ee\'f1\'e8\'f2\'fc \'f3 \'e4\'ee\'f1\'ea\'e8 b->getCell(i,j);\cf0\kerning1\par
\cf1\kerning0  BoardView(Board* b);\}\tab\tab BoardView::startGame()\{\cf0\kerning1\par
\cf1\kerning0\tab\tab while (\'ed\'e5 \'ea\'ee\'ed\'e5\'f6)\{\cf0\kerning1\par
\cf1\kerning0\tab\tab b->isWin()\cf0\kerning1\par
\cf1\kerning0\tab\tab\'f1\'ef\'f0\'ee\'f1\'e8\'f2\'fc \'f5\'ee\'e4 \'ef\'e5\'f0\'e2\'ee\'e3\'ee \'e8\'e3\'f0\'ee\'ea\'e0\cf0\kerning1\par
\cf1\kerning0\tab\tab b->makeMove\cf0\kerning1\par
\cf1\kerning0\tab\tab show()\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\b\'cb\'e5\'ea\'f6\'e8\'ff 11.\cf0\kerning1\b0\par
\cf1\kerning0\'cf\'f0\'e8\'ec\'e5\'f0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'f1\'ee \'f1\'e2\'ff\'e7\'e0\'ed\'ed\'fb\'ec \'f1\'ef\'e8\'f1\'ea\'ee\'ec:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 class List\{\tab main.cpp\cf0\kerning1\par
\cf1\kerning0 private:\tab List L(5);\cf0\kerning1\par
\cf1\kerning0  int myValue;\tab L.addValue(6);\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0  List* myNext;\tab\tab //\'ed\'e0 \'fd\'f2\'e0\'ef\'e5 List L(5) \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2 \'e8\'e7 2-\'f5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 myValue - \'fd\'f2\'ee int \'e8 List* myNext - \'f2\'e0\'ea \'ea\'e0\'ea \'fd\'f2\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'f2\'ee \'ee\'ed \'f0\'e0\'e2\'e5\'ed 4 \'e1\'e0\'e9\'f2\'e0\'ec.\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0  List (int Value)\{\tab\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\cf0\kerning1\par
\cf1\kerning0   myValue=Value;\cf0\kerning1\par
\cf1\kerning0   myNext=0;\}\cf0\kerning1\par
\cf1\kerning0  ~List ()\{....\}\tab\tab //\'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\cf0\kerning1\par
\cf1\kerning0  void addValue (int Value)\{\cf0\kerning1\par
\cf1\kerning0   List* current=this;\cf0\kerning1\par
\cf1\kerning0   while (current->myNext!=0)\{\cf0\kerning1\par
\cf1\kerning0    current=current->myNext;\}\cf0\kerning1\par
\cf1\kerning0   current->myNext=new List (Value);\}\cf0\kerning1\par
\cf1\kerning0  int length()\{\cf0\kerning1\par
\cf1\kerning0   int counter=0;\cf0\kerning1\par
\cf1\kerning0   for(List* current=this; current!=0; current=current->myNext)\{\cf0\kerning1\par
\cf1\kerning0    counter++;\}\cf0\kerning1\par
\cf1\kerning0   return counter;\}\cf0\kerning1\par
\cf1\kerning0\par
\'d5\'ee\'f7\'f3 \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'e2\'ee\'f2 \'f2\'e0\'ea: \'d1\'ee\'e7\'e4\'e0\'f2\'fc \'ed\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1, \'f7\'f2\'ee\'e1\'fb \'f5\'ee\'e4\'e8\'f2\'fc \'ef\'ee \'f1\'e2\'ff\'e7\'e0\'ed\'ed\'ee\'ec\'f3 \'f1\'ef\'e8\'f1\'ea\'f3 \'ed\'e5 \'f2\'ee\'eb\'fc\'ea\'ee \'e2\'ef\'e5\'f0\'b8\'e4 \'ea\'e0\'ea \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 List:myNext, \'ed\'ee \'e8 \'ed\'e0\'e7\'e0\'e4 myPrevious\cf0\kerning1\par
\cf1\kerning0 main.cpp\cf0\kerning1\par
\cf1\kerning0 DoubleList L1(5);\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cd\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e5\ulnone :\cf0\kerning1\par
\cf1\kerning0\b\'d1++ \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2 \'ec\'ed\'ee\'e6\'e5\'f1\'f2\'e2\'e5\'ed\'ed\'ee\'e5 \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e5\cf0\kerning1\b0\par
\cf1\kerning0 class DoubleList:public List\{\tab //\'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'e9 (Derived) \'ea\'eb\'e0\'f1\'f1 DoubleList \'f1\'ee\'e7\'e4\'e0\'ed \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'e1\'e0\'e7\'ee\'e2\'ee\'e3\'ee (Base) \'ea\'eb\'e0\'f1\'f1\'e0 List c \'ec\'ee\'e4\'e8\'f4\'e8\'ea\'e0\'f2\'ee\'f0\'ee\'ec \'e4\'ee\'f1\'f2\'f3\'ef\'e0 public\cf0\kerning1\par
\cf1\kerning0 private:\tab\tab\tab\tab //\'ee\'e1\'fa\'e5\'ea\'f2 \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'e1\'f3\'e4\'e5\'f2 \'eb\'e5\'e6\'e0\'f2\'fc: \'f1\'ed\'e0\'f7\'e0\'eb\'e0 \'ef\'ee\'eb\'ff \'ee\'f2 List, \'ef\'ee\'f2\'ee\'ec \ul\'ed\'ee\'e2\'fb\'e5\ulnone  \'ef\'ee\'eb\'ff \'ee\'f2 DoubleList\cf0\kerning1\par
\cf1\kerning0  List* myPrevious;\tab\tab //\'ef\'f0\'e8 \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e8 \'e2\'f1\'e5 \'ef\'ee\'eb\'ff \'e8 \'ec\'e5\'f2\'ee\'e4\'fb \'ea\'ee\'ef\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'e2 \'ed\'ee\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'e8 \'ef\'e8\'f1\'e0\'f2\'fc \'e8\'f5 \'e7\'e4\'e5\'f1\'fc \'ed\'e5 \'ed\'f3\'e6\'ed\'ee\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0  DoubleList (int Value):List (Value)\{\tab //\'ed\'f3\'e6\'e5\'ed \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0, \'f2.\'e5. \'f1\'ed\'e0\'f7\'e0\'eb\'e0 \'ed\'e0\'e4\'ee \'f1\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2 List (Value), \'e0 \'ef\'ee\'f2\'ee\'ec \'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc \'ef\'ee\'eb\'ff \'e8 \'ec\'e5\'f2\'ee\'e4\'fb DoubleList (int Value)\cf0\kerning1\par
\cf1\kerning0   myPrevious=0;\}\tab\tab\tab //\'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 List (Value) \'ec\'ee\'e6\'ed\'ee \'ed\'e5 \'ef\'e8\'f1\'e0\'f2\'fc, \'e5\'f1\'eb\'e8 \'ec\'fb \'f5\'ee\'f2\'e8\'ec \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'eb\'e0\'f1\'f1\'e0 List\cf0\kerning1\par
\cf1\kerning0  void addValue (int Value)\{\tab\tab //\'cd\'e0 \'e1\'f3\'e4\'f3\'f9\'e5\'e5. \'c4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'e2\'f1\'e5\'e3\'e4\'e0 \'ee\'e4\'e8\'ed !!! \'ca\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'ee\'e2 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee.\cf0\kerning1\par
\cf1\kerning0   DoubleList* current=this;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-3550\li3550\sl240\slmult1\cf1\kerning0  while (current->myNext!=0)\{\tab\tab //\'ed\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff, \'e1\'f3\'e4\'e5\'f2 \'ee\'f8\'e8\'e1\'ea\'e0, \'f7\'f2\'ee \'ec\'fb \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec myNext, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 private, \'ef\'ee\'fd\'f2\'ee\'ec\'f3 \'ed\'e0\'e4\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ec\'ee\'e4\'e8\'f4\'e8\'ea\'e0\'f2\'ee\'f0 \'e4\'ee\'f1\'f2\'f3\'ef\'e0 protected, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'e4\'e0\'ed\'ed\'fb\'e9 \'ec\'e5\'f2\'ee\'e4 \'ec\'ee\'e3\'f3\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'f1\'e0\'ec \'ea\'eb\'e0\'f1\'f1 \'e8 \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e8\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-4260\li4260\sl240\slmult1\cf1\kerning0   current= (DoubleList*)current->myNext;\}\tab\tab //\'e7\'e0\'ec\'ee\'f0\'ee\'f7 \'f1 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5\'ec \'f2\'e8\'ef\'ee\'e2 ! \'c4\'eb\'ff \'d1++ \'ea\'f0\'e8\'f2\'e8\'f7\'ed\'ee, \'e5\'f1\'eb\'e8 \'ef\'f0\'e8\'f0\'e0\'e2\'ed\'e8\'e2\'e0\'fe\'f2\'f1\'ff \'f2\'e8\'ef\'fb DoubleList = List - \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e4\'e0\'e2\'e0\'f2\'fc \'ee\'f8\'e8\'e1\'ea\'f3, \'ef\'ee\'fd\'f2\'ee\'ec\'f3 \'ed\'e0\'e4\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0  current->myNext= new DoubleList (Value);\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-4970\li4970\sl240\slmult1\cf1\kerning0  ((DoubleList*)current->myNext)->myPrevious=current;\}\tab //current - \'fd\'f2\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc. myNext - \'fd\'f2\'ee \'f2\'ee\'e6\'e5 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'f2.\'e5. current->myNext - \'fd\'f2\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'ee\'e1\'fa\'e5\'ea\'f2 \'ea\'eb\'e0\'f1\'f1\'e0 List. \'c0 current->myNext->myPrevious \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'f2\'f1\'ff, \'f7\'f2\'ee \'f2\'ee\'e6\'e5 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc, \'f2.\'ea. myPrevious - \'fd\'f2\'ee List* myPrevious\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0\par
\'c4\'ee\'ef\'f3\'f1\'f2\'e8\'ec \'e2 main.cpp \'e5\'f1\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'ff\cf0\kerning1\par
\cf1\kerning0 void addSequence (List* l, int num, int val)\{\tab //\'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e4\'ee\'e1\'e0\'e2\'eb\'ff\'e5\'f2 \'e2 \'f1\'ef\'e8\'f1\'ee\'ea l \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'ff\'f7\'e5\'e5\'ea = num \'f1\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff\'ec\'e8 = val\cf0\kerning1\par
\cf1\kerning0  for (int i=0; i<num; i++)\{\cf0\kerning1\par
\cf1\kerning0   l->addValue(val);\}\}\tab\tab\tab //\'e2 \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'ee\'e1\'fa\'ff\'f1\'ed\'ff\'e5\'f2\'f1\'ff, \'ee\'f2\'ea\'f3\'e4\'e0 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff addValue \'e8\'e7 \'ea\'e0\'ea\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0: \'e8\'e7 List \'e8\'eb\'e8 DoubleList. \'c2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e8\'e7\cf0\kerning1\par
\cf1\kerning0\par
\'c2\'fb\'e7\'ee\'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e2 main.cpp:\cf0\kerning1\par
\cf1\kerning0 List l(5);\cf0\kerning1\par
\cf1\kerning0 DoubleList dl(6);\cf0\kerning1\par
\cf1\kerning0 addSequence(l,10,5);\cf0\kerning1\par
\cf1\kerning0 addSequence(dl,10,6);\cf0\kerning1\par
\cf1\kerning0\'cc\'ee\'f0\'e0\'eb\'fc \'ef\'f0\'e8\'ec\'e5\'f0\'e0 - \'c7\'e0\'ef\'ee\'e2\'e5\'e4\'fc \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'ff: \'ce\'e1\'fa\'e5\'ea\'f2 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'f2\'e0\'ea\'e6\'e5 \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'ec \'e1\'e0\'e7\'ee\'e2\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0. \'d1 \'f2\'ee\'f7\'ea\'e8 \'e7\'f0\'e5\'ed\'e8\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'e9, \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'f3\'ec\'e5\'e5\'f2 \'e2\'f1\'b8 \'f7\'f2\'ee \'e8 \'e1\'e0\'e7\'ee\'e2\'fb\'e9. \'cf\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 addSequence \'f5\'ee\'f2\'fc \'e2 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'e5 \'e8 \'f1\'f2\'ee\'e8\'f2 (List* l,..), \'ec\'fb \'ec\'ee\'e6\'e5\'ec \'ef\'e5\'f0\'e5\'e4\'e0\'f2\'fc \'f2\'f3\'e4\'e0 \'e8 DoubleList. \'c5\'f1\'eb\'e8 \'ef\'e5\'f0\'e5\'e4\'e0\'e4\'e8\'ec \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'e0 List, \'f2\'ee \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff addValue \'e8\'e7 \'ea\'eb\'e0\'f1\'f1\'e0 List. \'c0 \'e5\'f1\'eb\'e8 \'ef\'e5\'f0\'e5\'e4\'e0\'e4\'e8\'ec \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2 DoubleList, \'f2\'ee \'e2\'fb\'e7\'ee\'e2\'e5\'f2\'f1\'ff addValue \'e8\'e7 DoubleList. \'c2\'e7\'e0\'e8\'ec\'ee\'e7\'e0\'ec\'e5\'ed\'ff\'e5\'ec\'ee\'f1\'f2\'fc \'e1\'eb\'ee\'ea\'ee\'e2. \'c2 \'f7\'b8\'ec \'ef\'eb\'fe\'f1\'fb: \'cd\'e0 \'ec\'ee\'ec\'e5\'ed\'f2 \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'e8\'ff addSequence(List* l,...) \'ea\'eb\'e0\'f1\'f1\'e0 DoubleList \'ec\'ee\'e3\'eb\'ee \'ed\'e5 \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'ee\'e2\'e0\'f2\'fc. \'cf\'ee\'f2\'ee\'ec \'ec\'fb \'e4\'ee\'ef\'e8\'f1\'e0\'eb\'e8 \'ed\'ee\'e2\'fb\'e9 \'e1\'eb\'ee\'ea DoubleList. \'ce\'ed \'e8\'e7\'ec\'e5\'ed\'e8\'eb \'ef\'ee\'e2\'e5\'e4\'e5\'ed\'e8\'e5 addValue.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0\par
int tmp=0;\cf0\kerning1\par
\cf1\kerning0 scanf("%d",&tmp);\tab // l \'ef\'f0\'e8\'f0\'e0\'e2\'ed\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'ea 0 - \'f4\'fd\'ed\'f8\'f3\'e9 - \'eb\'e5\'ea\'f2\'ee\'f0 \'ed\'e5 \'eb\'fe\'e1\'e8\'f2 \'ed\'e5 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'eb\'ee\'ea\'e0\'eb\'fc\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-2130\li2130\sl240\slmult1\cf1\kerning0 List* l=0;\tab\tab // \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ec\'ee\'e6\'e5\'f2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'ea\'e0\'ea \'ed\'e0 \'ee\'e1\'fa\'e5\'ea\'f2 List \'f2\'e0\'ea \'e8 \'ed\'e0 \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e8 \'f2\'e8\'ef\'e0 DoubleList, \'ef\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee \'e5\'f1\'eb\'e8 \'ec\'fb \'f5\'ee\'f2\'e8\'ec \'e8\'e7 List \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'fe, \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3, addValue, \'f2.\'e5. \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc l->addValue, \'f2\'ee \'fd\'f2\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'f2\'ee\'f7\'ed\'ee \'e1\'f3\'e4\'e5\'f2 \'e8 \'e2 \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e5. \'c2\'ee\'e7\'ec\'ee\'e6\'ed\'ee \'ee\'ed\'e0 \'e1\'f3\'e4\'e5\'f2 \'e4\'f0\'f3\'e3\'e0\'ff, \'ed\'ee \'f1\'e0\'ec\'e0 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'e0 \'e1\'f3\'e4\'e5\'f2 \'ef\'f0\'e8\'f1\'f3\'f2\'f1\'f2\'e2\'ee\'e2\'e0\'f2\'fc.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0 if (tmp==1)\{\cf0\kerning1\par
\cf1\kerning0\tab l=new List(5);\}\cf0\kerning1\par
\cf1\kerning0 else \{\cf0\kerning1\par
\cf1\kerning0\tab l=new DoubleList(6);\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0 l->addValue(6);\cf0\kerning1\par
\cf1\kerning0\par
\'ed\'e0 \'ec\'ee\'ec\'e5\'ed\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ed\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'ee \'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ec\'e5\'f1\'f2\'e0 \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'e1\'f3\'e4\'e5\'f2 \'e7\'e0\'ed\'e8\'ec\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2 L, \'f2\'e0\'ea \'ea\'e0\'ea \'ee\'ed \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'e8\'e7 \'ea\'eb\'e0\'f1\'f1\'e0 List, \'f2\'e0\'ea \'e8 \'e8\'e7 \'ea\'eb\'e0\'f1\'f1\'e0 DoubleList. \'c8 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'e5\'ed\'ed\'ee \'ef\'f0\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'ed\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'ee \'ea\'e0\'ea\'f3\'fe \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ef\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 l->addValue\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0\ulnone  (overload) ~ \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'cf\'ce\'cb\'c8\'cc\'ce\'d0\'d4\'c8\'c7\'cc: \'fd\'f2\'ee \'ea\'ee\'e3\'e4\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'f1 \'ee\'e4\'ed\'e8\'ec \'e8 \'f2\'e5\'ec \'e6\'e5 \'e8\'ec\'e5\'ed\'e5\'ec, \'ed\'ee \'f1 \'f0\'e0\'e7\'ed\'fb\'ec\'e8 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8, \'f2\'e8\'ef\'e0\cf0\kerning1\par
\cf1\kerning0 void func (int a);\cf0\kerning1\par
\cf1\kerning0 int func (double a);\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cf\'e5\'f0\'e5\'ea\'f0\'fb\'f2\'e8\'e5/\'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5\ulnone  (override) ~ \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'cf\'ce\'cb\'c8\'cc\'ce\'d0\'d4\'c8\'c7\'cc: \'fd\'f2\'ee \'ea\'ee\'e3\'e4\'e0 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'e0 (\'e8\'ec\'ff+\'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb) \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ee\'e4\'e8\'ed\'e0\'ea\'ee\'e2\'e0\'ff, \'ed\'ee \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'ee\'f1\'f2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'f0\'e0\'e7\'ed\'fb\'e5, \'ea\'e0\'ea \'e2 \'ed\'e0\'f8\'e5\'ec \'ef\'f0\'e8\'ec\'e5\'f0\'e5:\cf0\kerning1\par
\cf1\kerning0 void addValue (int Value) \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 List \'e8 \'f2\'e0 \'e6\'e5 \'f1\'e0\'ec\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 DoubleList\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'e2\'f1\'b8 \'f0\'e0\'e1\'ee\'f2\'e0\'eb\'ee \'ea\'ee\'f0\'f0\'e5\'ea\'f2\'ed\'ee, \'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'e2 \'e4\'e0\'eb\'fc\'ed\'e5\'e9\'f8\'e5\'ec \'ec\'ee\'e6\'ed\'ee \'e1\'fb\'eb\'ee \'e1\'fb \'ef\'e5\'f0\'e5\'ea\'f0\'fb\'e2\'e0\'f2\'fc, \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 List \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \b virtual \b0 void addValue (int Value) - \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'e0\'ff. \'d2.\'e5. \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea \'e5\'e9 \'ec\'ee\'e6\'ed\'ee \'e4\'e0\'f2\'fc \'ed\'ee\'e2\'ee\'e5 \'f2\'e5\'eb\'ee. \'c5\'f1\'eb\'e8 virtual \'ed\'e5 \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc, \'f2\'ee \'e2\'f1\'e5\'e3\'e4\'e0 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc\'f1\'ff addValue \'e1\'e0\'e7\'ee\'e2\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0, \'f2.\'e5. List.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5\ulnone :\cf0\kerning1\par
\cf1\kerning0\'d1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5 (Binding) - \'fd\'f2\'ee \'f1\'ee\'ef\'ee\'f1\'f2\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'e8\'ec\'e5\'ed\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'f1 \'e0\'e4\'f0\'e5\'f1\'ee\'ec \'ef\'e0\'ec\'ff\'f2\'e8, \'e3\'e4\'e5 \'eb\'e5\'e6\'e8\'f2 \'f2\'e5\'eb\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e8.\cf0\kerning1\par
\cf1\kerning0\'cf\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe, \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5 \'ee\'f1\'f3\'f9\'e5\'f1\'f2\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'eb\'e8\'ed\'ea\'ee\'e2\'ea\'e8. \'c7\'e0\'ef\'f0\'ee\'f1 \'ea \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e2 \'ee\'e4\'ed\'ee\'ec \'f4\'e0\'e9\'eb\'e5, \'f2\'e5\'eb\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e2 \'e4\'f0\'f3\'e3\'ee\'ec \'f4\'e0\'e9\'eb\'e5. \'d1\'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'eb\'e8 - \'e2\'f1\'b8 ok. \'c8 \'e4\'e0\'eb\'fc\'f8\'e5 \'f3\'e6\'e5 \'e8\'e4\'b8\'f2 binding.\cf0\kerning1\par
\cf1\kerning0\'c2 \i\'cf\'f0\'e8\'ec\'e5\'f0\'e5 \'b92\i0  \'e5\'f1\'eb\'e8 \'ed\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f1\'eb\'ee\'e2\'ee virtual, \'f2\'ee \'eb\'e8\'ed\'ea\'ee\'e2\'f9\'e8\'ea \'e1\'f3\'e4\'e5\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5, \'f2.\'e5. \'ef\'ee\'f1\'ec\'ee\'f2\'f0\'e8\'f2 \'ed\'e0 List *l=0 - \'e0\'e3\'e0 l - \'e8\'ec\'e5\'e5\'f2 \'f2\'e8\'ef List, \'e7\'ed\'e0\'f7\'e8\'f2 l->addValue() \'ee\'f2\'ed\'ee\'f1\'e8\'f2\'f1\'ff \'ea \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ea\'eb\'e0\'f1\'f1\'e0 List. \'c8 \'e2\'ec\'e5\'f1\'f2\'ee l->addValue() \'e2\'f1\'f2\'e0\'e2\'e8\'f2 \'e0\'e4\'f0\'e5\'f1 \'f2\'e5\'eb\'e0 addValue().\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5\ulnone  (\'e8\'eb\'e8 \'ef\'ee\'e7\'e4\'ed\'e5\'e5 \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5)\cf0\kerning1\par
\cf1\kerning0\'d1 \'e2\'e2\'e5\'e4\'e5\'ed\'e8\'e5\'ec \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'ff, \'e2 \'ed\'e0\'f8\'e5\'ec \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'f1 virtual, \'e2\'f1\'b8 \'e8\'e7\'ec\'e5\'ed\'e8\'eb\'ee\'f1\'fc. \'ca\'e0\'ea \'e2 \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'b92 \'f2\'e5\'eb\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e8 l->addValue \'e1\'f3\'e4\'e5\'f2 \'ef\'ee\'ed\'ff\'f2\'ed\'ee, \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'ec\'ee\'ec\'e5\'ed\'f2 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'f1\'e0\'ec\'ee\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 gcc \'e2\'ee \'e2\'f0\'e5\'ec\'ff \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'e2\'e8\'e4\'e8\'f2 l->addValue() \'e8 \'e7\'ed\'e0\'e5\'f2, \'f7\'f2\'ee virtual addValue(), \'f2\'ee \'e2\'ec\'e5\'f1\'f2\'ee \'e0\'e4\'f0\'e5\'f1\'e0 \'f2\'e5\'eb\'e0 addValue(), \'ea\'e0\'ea \'fd\'f2\'ee \'e4\'e5\'eb\'e0\'e5\'f2\'f1\'ff \'ef\'f0\'e8 \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'ec \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e8, \'e2\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e5:\cf0\kerning1\par
\cf1\kerning0\tab - \'f1\'f5\'ee\'e4\'e8\'f2\'fc \'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'f3 \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'f5 \'f4\'f3\'ed\'ea\'f6\'e8\'e9 VTABLE (\'e0\'e4\'f0\'e5\'f1 \'f2\'e0\'e1\'eb\'e8\'f6\'fb \'ea\'e0\'ea \'ef\'f0\'e0\'e2\'e8\'eb\'ee \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'f2 \'e2 \'ef\'e5\'f0\'e2\'fb\'f5 4 \'e1\'e0\'e9\'f2\'e0\'f5 \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'e5\'ec\'ee\'e3\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'e0)\cf0\kerning1\par
\cf1\kerning0\tab - \'ed\'e0\'e9\'e4\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'fe addValue() \'e8 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e8\'e9 \'e5\'e9 \'e0\'e4\'f0\'e5\'f1\cf0\kerning1\par
\cf1\kerning0\tab - \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'f2\'e5\'eb\'ee/\'ea\'ee\'e4 \'ef\'ee \'fd\'f2\'ee\'ec\'f3 \'e0\'e4\'f0\'e5\'f1\'f3\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'f2\'e8\'ef\'e0 List \'e0\'e4\'f0\'e5\'f1 VTABLE \'e1\'f3\'e4\'e5\'f2 \'ee\'e4\'e8\'ed. \'c4\'eb\'ff DoubleList \'e0\'e4\'f0\'e5\'f1 VTABLE \'e1\'f3\'e4\'e5\'f2 \'e4\'f0\'f3\'e3\'ee\'e9.\cf0\kerning1\par
\cf1\kerning0\par
\'c7\'e0\'ea\'ee\'ed: \'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'e8\'e7 \'ea\'eb\'e0\'f1\'f1\'e0 \'ec\'ee\'e6\'ed\'ee \'e1\'fb\'eb\'ee \'e1\'fb \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e0, \'ea\'eb\'e0\'f1\'f1 \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'ee\'f1\'ee\'e1\'ee \'f1\'ef\'f0\'ee\'e5\'ea\'f2\'e8\'f0\'ee\'e2\'e0\'ed: \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec protected \'e8 virtual\cf0\kerning1\par
\cf1\kerning0\par
class Base\{\cf0\kerning1\par
\cf1\kerning0\tab public:\cf0\kerning1\par
\cf1\kerning0\tab\tab virtual void VM();\cf0\kerning1\par
\cf1\kerning0\tab\tab void M();\cf0\kerning1\par
\cf1\kerning0 class Derived: public Base\{\cf0\kerning1\par
\cf1\kerning0\tab public:\cf0\kerning1\par
\cf1\kerning0\tab\tab void VM();\cf0\kerning1\par
\cf1\kerning0\tab\tab void M();\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0\tab Derived D;\cf0\kerning1\par
\cf1\kerning0\tab Derived *pD = &D;\cf0\kerning1\par
\cf1\kerning0\tab Base *pB = &D;\cf0\kerning1\par
\cf1\kerning0\par
\tab pD->VM();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 VM \'ea\'eb\'e0\'f1\'f1\'e0 Derived\cf0\kerning1\par
\cf1\kerning0\tab pB->VM();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 VM \'ea\'eb\'e0\'f1\'f1\'e0 Derived\cf0\kerning1\par
\cf1\kerning0\tab pD->M();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 M \'ea\'eb\'e0\'f1\'f1\'e0 Derived\cf0\kerning1\par
\cf1\kerning0\tab pB->M();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 M \'ea\'eb\'e0\'f1\'f1\'e0 Base\cf0\kerning1\par
\cf1\kerning0\par
\tab //\'e5\'f1\'eb\'e8 virtual \'ed\'e5 \'f1\'f2\'ee\'ff\'eb\'ee \'e2 Base, \'f2\'ee\cf0\kerning1\par
\cf1\kerning0\tab pD->VM();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 VM \'ea\'eb\'e0\'f1\'f1\'e0 Derived\cf0\kerning1\par
\cf1\kerning0\tab pB->VM();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 VM \'ea\'eb\'e0\'f1\'f1\'e0 Base\cf0\kerning1\par
\cf1\kerning0\tab pD->M();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 M \'ea\'eb\'e0\'f1\'f1\'e0 Derived\cf0\kerning1\par
\cf1\kerning0\tab pB->M();\tab //\'e2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 M \'ea\'eb\'e0\'f1\'f1\'e0 Base\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 \'ec\'e5\'f2\'ee\'e4\'e0 \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff \'ed\'e0 \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'e4\'e5\'e9\'f1\'f2\'e2\'f3\'fe\'f2 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'e5 \'ef\'f0\'e0\'e2\'e8\'eb\'e0:\cf0\kerning1\par
\cf1\kerning0\tab - \'e4\'eb\'ff \b virtual \'ec\'e5\'f2\'ee\'e4\'e0\b0  \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ec\'e5\'f2\'ee\'e4, \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e8\'e9 \'f2\'e8\'ef\'f3 \'ee\'e1\'fa\'e5\'ea\'f2\'e0, \'ed\'e0 \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc\cf0\kerning1\par
\cf1\kerning0\tab - \'e4\'eb\'ff \b\'ed\'e5\'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'ee\'e3\'ee \'ec\'e5\'f2\'ee\'e4\'e0\b0  \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ec\'e5\'f2\'ee\'e4, \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e8\'e9 \'f2\'e8\'ef\'f3 \'f1\'e0\'ec\'ee\'e3\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 12.\cf0\kerning1\b0\par
\cf1\kerning0\'c2 \'ec\'ee\'ec\'e5\'ed\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2 \'e8\'eb\'e8 List l \'e8\'eb\'e8 DoubleList dl. \'c5\'f1\'eb\'e8 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'e5\'f1\'f2\'fc \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff, \'f2\'ee \'f3 \'ee\'e1\'fa\'e5\'ea\'f2\'e0 dl \'ef\'e5\'f0\'e2\'fb\'e5 4-\'e5 \'e1\'e0\'e9\'f2\'e0 = \'e0\'e4\'f0\'e5\'f1 \'f2\'e0\'e1\'eb\'e8\'f6\'fb \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'f5 \'f4\'f3\'ed\'ea\'f6\'e8\'e9. \'cf\'e5\'f0\'e5\'f5\'ee\'e4\'e8\'ec \'ef\'ee \'e0\'e4\'f0\'e5\'f1\'f3 \'f2\'e0\'e1\'eb\'e8\'f6\'fb \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'f5 \'f4\'f3\'ed\'ea\'f6\'e8\'e9, \'e8\'f9\'e5\'ec \'ed\'f3\'e6\'ed\'f3\'fe (\'e5\'f1\'eb\'e8 \'e8\'f5 \'ec\'ed\'ee\'e3\'ee) \'f4\'f3\'ed\'ea\'f6\'e8\'fe addValue(), \'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'e5 \'ed\'e0\'ef\'f0\'ee\'f2\'e8\'e2 \'e1\'f3\'e4\'e5\'f2 \'e0\'e4\'f0\'e5\'f1 \'e2 \'ef\'ff\'ec\'ff\'f2\'e8 \'fd\'f2\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8. \'c2\'fb\'e7\'fb\'e2\'e0\'e5\'ec \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'ef\'ee \'fd\'f2\'ee\'ec\'f3 \'e0\'e4\'f0\'e5\'f1\'f3.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 class Worker\tab //\'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'ed\'e8\'ea\'e0\cf0\kerning1\par
\cf1\kerning0  char* name;\tab //\'f4\'f3\'ed\'ea\'f6\'e8\'ff calculate \'e2\'f1\'e5\'e3\'e4\'e0 \'e1\'f3\'e4\'e5\'f2 \'ef\'e5\'f0\'e5\'ea\'f0\'fb\'e2\'e0\'f2\'fc\'f1\'ff, \'ef\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee \'e4\'eb\'ff Sales - \'f1\'f7\'e8\'f2\'e0\'e5\'f2\'f1\'ff \'ef\'ee \'ee\'e4\'ed\'ee\'ec\'f3, \'e4\'eb\'ff Developer - \'ef\'ee-\'e4\'f0\'f3\'e3\'ee\'ec\'f3, \'e4\'eb\'ff Accounting - \'ef\'ee-\'f2\'f0\'e5\'f2\'fc\'e5\'ec\'f3.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\fi-2130\li2130\sl240\slmult1\cf1\kerning0  virtual int calculate()=0;\tab //\'f7\'e8\'f1\'f2\'ee \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff. \'ce\'e1\'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2\'f1\'ff \'ea\'ee\'e3\'e4\'e0 \'ef\'e8\'f8\'e5\'f2\'f1\'ff =0. \'d3 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'e5\'f1\'f2\'fc \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5, \'ed\'ee \'ed\'e5\'f2 \'f2\'e5\'eb\'e0 (\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'ff). \'ca\'eb\'e0\'f1\'f1 \'e0\'e1\'f1\'f2\'f0\'e0\'ea\'f2\'ed\'fb\'e9. \'cd\'e5\'eb\'fc\'e7\'ff \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0\'e0 - \'ee\'e1\'fa\'e5\'ea\'f2 Worker w.  \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'e4\'eb\'ff \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'ff. \'cd\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e8 \'e4\'ee\'eb\'e6\'ed\'fb \'ee\'e1\'ff\'e7\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'e4\'e0\'f2\'fc \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'f7\'e8\'f1\'f2\'ee \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8, \'e8\'ed\'e0\'f7\'e5 \'ee\'ed\'e8 \'f2\'e0\'ea \'e6\'e5 \'e1\'f3\'e4\'f3\'f2 \'e0\'e1\'f1\'f2\'e0\'ea\'f2\'ed\'fb\'ec \'ea\'eb\'e0\'f1\'f1\'ee\'ec, \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0\'fb \'ea\'ee\'f2\'ee\'f0\'ee\'e3\'ee \'ed\'e5\'eb\'fc\'e7\'ff \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'f2\'fc.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'c2 \'f7\'b8\'ec \'ee\'f2\'eb\'e8\'f7\'e8\'e5:\cf0\kerning1\par
\cf1\kerning0 Worker w[100]; - \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ec\'e0\'f1\'f1\'e8\'e2 \'e4\'e0\'ed\'ed\'fb\'f5 \'e8\'e7 100 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'ea\'e0\'e6\'e4\'fb\'e9 \'e8\'e7 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f4\'e8\'ea\'f1\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'e9 \'e4\'eb\'e8\'ed\'fb = \'ea\'eb\'e0\'f1\'f1\'f3 Worker\cf0\kerning1\par
\cf1\kerning0 Worker* w[100]; - \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ec\'e0\'f1\'f1\'e8\'e2 \'d3\'ca\'c0\'c7\'c0\'d2\'c5\'cb\'c5\'c9 \'e8\'e7 100 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'ea\'e0\'e6\'e4\'fb\'e9 \'e8\'e7 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 = 4 \'e1\'e0\'e9\'f2\'e0, \'f2.\'e5. \'ec\'ee\'e6\'ed\'ee \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \'ed\'e0 \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ea\'e0\'ea Worker, \'f2\'e0\'ea \'e8 \'e5\'e3\'ee \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'ee\'e2\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'eb\'e5\'ed\'e3:\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'e5\'f1\'f2\'fc \'ef\'ee\'eb\'ff \'e8 \'f7\'e8\'f1\'f2\'ee \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 - \'e0\'e1\'f1\'f2\'f0\'e0\'ea\'f2\'ed\'fb\'e9 \'ea\'eb\'e0\'f1\'f1.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'ed\'e5\'f2 \'ef\'ee\'eb\'e5\'e9, \'e0 \'f2\'ee\'eb\'fc\'ea\'ee \'f7\'e8\'f1\'f2\'ee \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 - \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1.\cf0\kerning1\par
\cf1\kerning0\par
\'c8\'ed\'ea\'e0\'ef\'f1\'f3\'eb\'ff\'f6\'e8\'ff:\tab\'c2\'ee\'e4\'e8\'f2\'e5\'eb\'fc \'e8 \'ec\'e0\'f8\'e8\'ed\'e0. \'cc\'e0\'f8\'e8\'ed\'e0 \'ed\'e0 \'ef\'e0\'f0\'ee\'e2\'ee\'ec \'e4\'e2\'e8\'e3\'e0\'f2\'e5\'eb\'e5 \'e8 \'f1\'ee\'e2\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff. \'cd\'ee \'e2\'ee\'e4\'e8\'f2\'e5\'eb\'fc \'e4\'eb\'ff \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'e8 \'f2\'e5\'ec \'e8 \'e4\'f0\'f3\'e3\'e8\'ec \'f1\'ee\'e2\'e5\'f0\'f8\'e0\'e5\'f2 \'ee\'e4\'e8\'ed\'e0\'ea\'ee\'e2\'fb\'e5 \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'ff. \'ca\'eb\'e0\'f1\'f1 "\'ef\'f0\'ff\'f7\'e5\'f2" \'f1\'e2\'ee\'e8 \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'ee\'f1\'f2\'e8, \'e4\'eb\'ff \'f2\'ee\'e3\'ee \'f7\'f2\'ee\'e1\'fb \'ed\'e5 \'e4\'e0\'f2\'fc \'f1\'e5\'e1\'ff \'ef\'ee\'eb\'ee\'ec\'e0\'f2\'fc + \'e5\'f1\'eb\'e8 \'ec\'ed\'e5 \'f7\'f2\'ee-\'f2\'ee \'ed\'e0\'e4\'ee \'e8\'e7\'ec\'e5\'ed\'e8\'f2\'fc \'e2\'ee \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'ee\'f1\'f2\'ff\'f5, \'ff \'ef\'f0\'ee\'f1\'f2\'ee \'ef\'e5\'f0\'e5\'ef\'e8\'f1\'fb\'e2\'e0\'fe \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e9 \'ea\'eb\'e0\'f1\'f1.\cf0\kerning1\par
\cf1\kerning0\'cd\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e5:\tab\'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'f0\'e0\'f9\'e0\'f2\'fc\'f1\'ff \'f1 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec\'e8 \'ea\'eb\'e0\'f1\'f1\'e0-\'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e0 \'f2\'ee\'f7\'ed\'ee \'f2\'e0\'ea \'e6\'e5, \'ea\'e0\'ea \'f1 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec\'e8 \'e1\'e0\'e7\'ee\'e2\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0. \'c8\'e7 Java: \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'ec \'f1 \'ea\'eb\'e0\'f1\'f1\'ee\'ec Vector \emdash  \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea \'ee\'f2 List. \'c7\'ed\'e0\'ff, \'ea\'e0\'ea \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 List, \'ec\'ee\'e6\'e5\'ec \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'f1 Vector + \'ed\'e5 \'ef\'e8\'f8\'e5\'ec \'e1\'eb\'ee\'ea\'e8 \'f1 \'ed\'f3\'eb\'ff, \'e0 \'e4\'ee\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'ec.\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec:\tab\'fd\'f2\'ee \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e5 + \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8. \'c8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1 \'e7\'e0\'ea\'f0\'e5\'ef\'eb\'ff\'e5\'f2\'f1\'ff \'e2 \'e2\'e8\'e4\'e5 \'ea\'eb\'e0\'f1\'f1\'e0.\cf0\kerning1\par
\cf1\kerning0\par
class Developer:public Worker\tab //\'ea\'eb\'e0\'f1\'f1 \'e4\'eb\'ff Developer-\'ee\'e2, \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea Worker\cf0\kerning1\par
\cf1\kerning0  char* name;\cf0\kerning1\par
\cf1\kerning0  int level;\tab //\'ed\'ee\'e2\'ee\'e5 \'ef\'ee\'eb\'e5, \'f2\'e0\'ea \'ea\'e0\'ea \'f3 Developer-\'ee\'e2 \'e7\'e0\'f0\'ef\'eb\'e0\'f2\'e0 \'f0\'e0\'f1\'f7\'e8\'f2\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e2 \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'e8 \'ee\'f2 \'f3\'f0\'ee\'e2\'ed\'ff -> \'ee\'e1\'fa\'e5\'ea\'f2\'fb Developer \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'e7\'e0\'ed\'e8\'ec\'e0\'fe\'f2 \'e1\'ee\'eb\'fc\'f8\'e5, \'f7\'e5\'ec Worker \'ed\'e0 int = 4 \'e1\'e0\'e9\'f2\'e0\cf0\kerning1\par
\cf1\kerning0\par
class DB\tab //\'f1\'ee\'ee\'e1\'f1\'f2\'e2\'e5\'ed\'ed\'ee \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea \'e7\'e0\'f0\'ef\'eb\'e0\'f2\'fb\cf0\kerning1\par
\cf1\kerning0  Workers* workers[100];\cf0\kerning1\par
\cf1\kerning0  int num;\tab // \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'f0\'e0\'e1\'ee\'f2\'ed\'e8\'ea\'ee\'e2 \'e2 \'e4\'e0\'ed\'ed\'fb\'e9 \'ec\'ee\'ec\'e5\'ed\'f2\cf0\kerning1\par
\cf1\kerning0  int calculateAll()\{\cf0\kerning1\par
\cf1\kerning0   int sum = 0;\cf0\kerning1\par
\cf1\kerning0   for (int i=0; i<num; i++)\{\cf0\kerning1\par
\cf1\kerning0    sum+ = workers[i]->calculateAll();\cf0\kerning1\par
\cf1\kerning0   \}\cf0\kerning1\par
\cf1\kerning0  return sum;\}\cf0\kerning1\par
\cf1\kerning0\par
main()\{\cf0\kerning1\par
\cf1\kerning0 Developer* vasya = new Developer("Vasya", 9);\cf0\kerning1\par
\cf1\kerning0 Sale* masha = new Sale("Masha",100,10);\cf0\kerning1\par
\cf1\kerning0 Sale* ira = new Sale("Ira",100,20);\cf0\kerning1\par
\cf1\kerning0 DB base;\cf0\kerning1\par
\cf1\kerning0 base.add(vasya);\cf0\kerning1\par
\cf1\kerning0 base.add(masha);\cf0\kerning1\par
\cf1\kerning0 base.add(ira);\cf0\kerning1\par
\cf1\kerning0 base.calculateAll();\cf0\kerning1\par
\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408 class Worker\tab Worker::Worker(const char* name)\{\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0. \'d2\'ee \'f7\'f2\'ee \'ed\'e0\'ec \'ef\'e5\'f0\'e5\'e4\'e0\'e4\'f3\'f2 \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0, \'ec\'fb \'ec\'e5\'ed\'ff\'f2\'fc \'ed\'e5 \'e1\'f3\'e4\'e5\'ec, \'ef\'ee\'fd\'f2\'ee\'ec\'f3 const\cf0\kerning1\par
\cf1\kerning0  protected:\tab  int l = strlen(name);\cf0\kerning1\par
\cf1\kerning0   char* name;\tab  this->name = new char[l+1];\cf0\kerning1\par
\cf1\kerning0  public:\tab  strcpy(this->name.name);\tab\tab //\'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2 sting.h \'ea\'ee\'ef\'e8\'f0\'f3\'e5\'f2 \'ee\'e4\'ed\'f3 \'f1\'f2\'f0\'ee\'f7\'ea\'f3 \'e2 \'e4\'f0\'f3\'e3\'f3\'fe. \'c7\'ed\'e0\'e5\'f2 \'e3\'e4\'e5 \'e7\'e0\'ea\'e0\'ed\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'f1\'f2\'f0\'ee\'ea\'e0, \'f2.\'ea. \'f1\'f2\'f0\'ee\'ea\'e0 \'e7\'e0\'ea\'e0\'ed\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff 0\cf0\kerning1\par
\cf1\kerning0   Worker(const char* name);\tab ~Worker()\{\cf0\kerning1\par
\cf1\kerning0   ~Worker();\tab  delete [] name;\}\cf0\kerning1\par
\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1 Worker* w = new Developer (...);\tab //\'f2\'e0\'ea \'e4\'e5\'eb\'e0\'f2\'fc \'ec\'ee\'e6\'ed\'ee (\'f1 \'ee\'e4\'ed\'ee\'e9 \'f1\'f2\'ee\'f0\'ee\'ed\'fb Worker \'f1 \'e4\'f0\'f3\'e3\'ee\'e9 Developer), \'ef\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee \'ef\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 \'eb\'fe\'e1\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 w, \'fd\'f2\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e5\'f1\'f2\'fc \'e2 \'ed\'e0\'f1\'eb\'e5\'e4\'ed\'e8\'ea\'e5 Develorer\cf0\kerning1\par
\cf1\kerning0 delete w;\tab // \'e1\'f3\'e4\'f3\'f2 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb \'e1\'e5\'e7 virtual \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0, \'f7\'f2\'ee-\'f2\'ee \'f2\'e0\'ec \'ef\'f0\'ee \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5... \'e8 \'e8\'e4\'f2\'e8 \'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'f3 \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'f5 \'f4\'f3\'ed\'ea\'f6\'e8\'e9 \'e8 \'e8\'f1\'ea\'e0\'f2\'fc \'f2\'e0\'ec \'ed\'f3\'e6\'ed\'fb\'e9 \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0\par
\'c7\'e0\'ea\'ee\'ed: \'c5\'f1\'eb\'e8 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'e5\'f1\'f2\'fc virtual \'f4\'f3\'ed\'ea\'f6\'e8\'ff, \'f2\'ee \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc virtual \'e4\'e5\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0.\cf0\kerning1\par
\cf1\kerning0\par
Worker* w - \'f2\'e0\'ea\'e8\'e5 \'f8\'f2\'f3\'ea\'e8 \'ed\'f3\'e6\'ed\'fb \'e4\'eb\'ff \'f0\'e0\'e7\'ed\'ee\'e9 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'ee\'e4\'ed\'ee\'e3\'ee \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\'e0, \'e0 \'f1\'eb\'e5\'e4\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'e4\'eb\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff Virtual \'f4\'f3\'ed\'ea\'f6\'e8\'e9\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 1.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'cf\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2\ulnone :\cf0\kerning1\par
\cf1\kerning0\'cd\'e0 \'e0\'ed\'e3\'eb\'e8\'e9\'f1\'ea\'ee\'ec \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2 \'ef\'e5\'f0\'e5\'e2\'ee\'e4\'e8\'f2\'f1\'ff \'ea\'e0\'ea casting.\cf0\kerning1\par
\cf1\kerning0 char* a = malloc(sizeof(char*)*100)\tab\tab - \'ed\'e5\'ff\'e2\'ed\'ee\'e5 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2\cf0\kerning1\par
\cf1\kerning0 char* a = \b (char*)\b0 malloc(sizeof(char*)*100)\tab - \'ff\'e2\'ed\'ee\'e5 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2\cf0\kerning1\par
\cf1\kerning0\'c2 \'d1\'e8 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'e0\'ec \'e4\'e5\'eb\'e0\'e5\'f2 \'ed\'e5\'ff\'e2\'ed\'ee\'e5 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2:\cf0\kerning1\par
\cf1\kerning0 1. \'cf\'f0\'e8 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 (init):\tab int i=3.5\cf0\kerning1\par
\cf1\kerning0 2. \'cf\'f0\'e8 \'ef\'f0\'e8\'f1\'e2\'ee\'e5\'ed\'e8\'e8 (assign):\tab double a=3.5; int c=5; c=a\cf0\kerning1\par
\cf1\kerning0 3. \'cf\'f0\'e8 \'e2\'fb\'e7\'ee\'e2\'e5 (call):\tab\tab foo(int a); double c=3.5; foo(c);\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0\'c4\'e0\'ed\'ee:\cf0\kerning1\par
\cf1\kerning0  class Complex\cf0\kerning1\par
\cf1\kerning0   Complex(int re=55; int im=34);\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'f1 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe !!!!!\cf0\kerning1\par
\cf1\kerning0\'c4\'e5\'eb\'e0\'e5\'ec:\cf0\kerning1\par
\cf1\kerning0  main.cpp\cf0\kerning1\par
\cf1\kerning0  Complex N=5;\cf0\kerning1\par
\cf1\kerning0\'d7\'f2\'ee \'e1\'f3\'e4\'e5\'f2 \'e4\'e5\'eb\'e0\'f2\'fc \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0? \'cf\'ee \'f5\'ee\'f0\'ee\'f8\'e5\'ec\'f3 \'e4\'ee\'eb\'e6\'ed\'ee \'e1\'fb\'f2\'fc \'f2\'e0\'ea:\cf0\kerning1\par
\cf1\kerning0  Complex N = Complex (5);\tab // \'f2.\'e5. \'f7\'e8\'f1\'eb\'ee 5 \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'e0\'eb\'e8 \'e2 \'ee\'e1\'fa\'e5\'ea\'f2 \'f2\'e8\'ef\'e0 Complex\cf0\kerning1\par
\cf1\kerning0  \'c4\'e0\'eb\'e5\'e5 \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2 N c \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'ee\'ec Complex (Complex(5)). \'cd\'ee \'f1\'ee\'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'ea\'ee\'f0\'e5\'e9 \'e2\'f1\'e5\'e3\'ee \'f1\'ee\'e7\'e4\'e0\'f1\'f2 \'ee\'e1\'fa\'e5\'ea\'f2 N \'f1 \'e2\'fb\'e7\'ee\'e2\'ee\'ec \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0 Complex(5), \'f7\'f2\'ee \'f0\'e0\'e2\'ed\'ee\'f1\'e8\'eb\'fc\'ed\'ee Complex(5,34) - \'ef\'f0\'e8\'ec\'e5\'f0 \'cd\'c5\'df\'c2\'cd\'ce\'c3\'ce \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'ff \'f2\'e8\'ef\'ee\'e2, \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'f1\'e0\'ec \'ef\'f0\'e8\'e2\'b8\'eb \'f2\'e8\'ef.\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'e7\'e0\'ef\'f0\'e5\'f2\'e8\'f2\'fc \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'f3 \'ed\'e5\'ff\'e2\'ed\'ee \'ef\'f0\'e8\'e2\'ee\'e4\'e8\'f2\'fc \'f2\'e8\'ef\'fb \'ed\'e0\'e4\'ee:\cf0\kerning1\par
\cf1\kerning0  \b explicit\b0  Complex(int,int)\cf0\kerning1\par
\cf1\kerning0\'d2\'e5\'ef\'e5\'f0\'fc \'ef\'f0\'e8\'e2\'e5\'f1\'f2\'e8 \'f2\'e8\'ef \'ec\'ee\'e6\'ed\'ee \'f2\'ee\'eb\'fc\'ea\'ee \'ff\'e2\'ed\'ee \'e2\'ec\'e5\'f1\'f2\'ee Complex N=5 \'ef\'e8\'f1\'e0\'f2\'fc Comlex N = (Complex) 5;\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0\'c4\'e0\'ed\'ee:\cf0\kerning1\par
\cf1\kerning0 class A\tab\tab class B\tab\tab //\'e5\'f1\'f2\'fc \'ed\'e5\'ea\'e8\'e5 \'ea\'eb\'e0\'f1\'f1\'fb\cf0\kerning1\par
\cf1\kerning0 A(const B& b)\tab B(const A& a)\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9, \'e2 \'ea\'eb\'e0\'f1\'f1\'e0\'f5 \'ec\'ee\'e6\'ed\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5\cf0\kerning1\par
\cf1\kerning0 main.cpp\tab\tab\tab //\'f2\'e8\'ef\'ee\'e2 \'e4\'f0\'f3\'e3 \'e2 \'e4\'f0\'f3\'e3\'e0, \'e2 \'f2\'e5\'eb\'e5 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0 \'ee\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2\'f1\'ff\cf0\kerning1\par
\cf1\kerning0 A a(3);\tab\tab\tab\tab //\'ea\'e0\'ea \'e1\'f3\'e4\'f3\'f2 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'ee\'e2\'e0\'f2\'fc \'ef\'ee\'eb\'ff \'ea\'eb\'e0\'f1\'f1\'ee\'e2 A \'e8 B\cf0\kerning1\par
\cf1\kerning0 B b(5);\cf0\kerning1\par
\cf1\kerning0 b=a;\tab //\'f1\'ed\'e0\'f7\'e0\'eb\'e0 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'ee\'e2\'e0\'ed \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'ea\'ee\'ef\'e8\'e9 B(const A& a) \'e8 \'ef\'ee\'f1\'f2\'f0\'ee\'e5\'f2\'f1\'ff \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2, \'ef\'ee\'f2\'ee\'ec \'e2 b \'e1\'f3\'e4\'e5\'f2 \'f1\'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'ec\'ee\'e5 \'fd\'f2\'ee\'e3\'ee \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e3\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'ef\'f0\'e8 \'ef\'ee\'ec\'ee\'f9\'e8 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b93\i0 :\cf0\kerning1\par
\cf1\kerning0\'c4\'e0\'ed\'ee:\cf0\kerning1\par
\cf1\kerning0 class Complex\cf0\kerning1\par
\cf1\kerning0 Complex N=3;\cf0\kerning1\par
\cf1\kerning0 int r = N;\tab //\'f5\'ee\'f2\'e8\'ec \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'e2\'ee\'f2 \'f2\'e0\'ea\cf0\kerning1\par
\cf1\kerning0\'cc\'ee\'f0\'e0\'eb\'fc: \'ec\'fb \'ed\'e5 \'ec\'ee\'e6\'e5\'ec \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ef\'ee \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'e8 \'f1 \'cf\'f0\'e8\'ec\'e5\'f0 2, \'f2.\'ea. \'ed\'e5\'f2 \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'ea \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'f3 \'ea\'ee\'ef\'e8\'e9 \'f3 int\cf0\kerning1\par
\cf1\kerning0\'d0\'e5\'f8\'e5\'ed\'e8\'e5:\cf0\kerning1\par
\cf1\kerning0 class Complex\{\cf0\kerning1\par
\cf1\kerning0  operator int()\{\cf0\kerning1\par
\cf1\kerning0   return myRe;\}\tab //\'f1\'ee\'e7\'e4\'e0\'b8\'ec \'f1\'e2\'ee\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 int \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 Complex, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'f2 myRe, \'f2.\'e5. \'f0\'e5\'e0\'eb\'fc\'ed\'f3\'fe \'f7\'e0\'f1\'f2\'fc \'ea\'ee\'ec\'ef\'eb\'e5\'ea\'f1\'ed\'ee\'e3\'ee \'f7\'e8\'f1\'eb\'e0\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b94\i0 :\cf0\kerning1\par
\cf1\kerning0\'c4\'e0\'ed\'ee:\cf0\kerning1\par
\cf1\kerning0 void foo(Complex R);\cf0\kerning1\par
\cf1\kerning0 foo(3);\tab //\'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff. \'d1\'ed\'e0\'f7\'e0\'eb\'e0 \'ef\'ee\'f1\'f2\'f0\'ee\'e8\'f2\'f1\'ff \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2 \'e8\'e7 3 \'e2 Complex. \'cf\'ee\'f2\'ee\'ec \'f7\'f2\'ee-\'f2\'ee \'e5\'f9\'b8 \'f1\'e2\'ff\'e7\'e0\'ed\'ed\'ee\'e5 \'f1 R. \'c2 \'ee\'e1\'f9\'e5\'ec \'ed\'e5\'fd\'f4\'f4\'e5\'ea\'f2\'e8\'e2\'ed\'ee !\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b95\i0 :\cf0\kerning1\par
\cf1\kerning0\'c0 \'e2\'ee\'f2 \'f2\'e0\'ea\'ee\'e9 \'e2\'e0\'f0\'e8\'e0\'ed\'f2 \'cd\'c5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff:\cf0\kerning1\par
\cf1\kerning0 void foo(Complex &a);\tab //\'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff\cf0\kerning1\par
\cf1\kerning0 foo(3);\tab //\'f1 \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f2\'e8\'ef\'ee\'e2 \'ef\'ee\'f1\'f2\'f0\'ee\'e8\'f2\'f1\'ff \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2, \'ef\'e5\'f0\'e5\'e4\'e0\'b8\'f2\'f1\'ff \'f1\'f1\'fb\'eb\'ea\'e0 \'ed\'e0 \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2, \'e7\'ed\'e0\'f7\'e8\'f2 \'e2\'ed\'f3\'f2\'f0\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'fd\'f2\'ee\'f2 \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2 \'ec\'ee\'e6\'ed\'ee \'e8\'e7\'ec\'e5\'ed\'ff\'f2\'fc, \'e0 \'ea\'e0\'ea\'ee\'e9 \'f1\'ec\'fb\'f1\'eb \'e8\'e7\'ec\'e5\'ed\'ff\'f2\'fc \'e2\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e9 \'ee\'e1\'fa\'e5\'ea\'f2, \'f2\'e0\'ea \'ea\'e0\'ea \'ef\'ee\'f1\'eb\'e5 \'f2\'ee\'e3\'ee \'ea\'e0\'ea \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e7\'e0\'e2\'e5\'f0\'f8\'e8\'f2\'f1\'ff \'ee\'e1\'fa\'e5\'ea\'f2 \'e8\'f1\'f7\'e5\'e7\'ed\'e5\'f2\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b96\i0 :\cf0\kerning1\par
\cf1\kerning0 void foo(const Complex &a);\tab //\'e8\'e7 \'cf\'f0\'e8\'ec\'e5\'f0\'ee\'e2 4-6 \'fd\'f2\'ee\'f2 \'f1\'e0\'ec\'fb\'e9 \'eb\'f3\'f7\'f8\'e8\'e9\cf0\kerning1\par
\cf1\kerning0 foo(3);\cf0\kerning1\par
\cf1\kerning0\par
\'c3\'e4\'e5 \'fd\'f2\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff:\cf0\kerning1\par
\cf1\kerning0\'c2 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e5 STL \'e5\'f1\'f2\'fc \'ea\'eb\'e0\'f1\'f1 string. \'c5\'f1\'f2\'fc \'ec\'ed\'ee\'e3\'ee \'ec\'e5\'f2\'ee\'e4\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2 string \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0.\cf0\kerning1\par
\cf1\kerning0 showText(const string&);\cf0\kerning1\par
\cf1\kerning0\'ce\'f7\'e5\'ed\'fc \'f3\'e4\'ee\'e1\'ed\'ee \'e4\'e5\'eb\'e0\'f2\'fc \'f2\'e0\'ea:\cf0\kerning1\par
\cf1\kerning0 showText("Hello");\tab //\'ea\'e0\'ea-\'f2\'ee \'fd\'f2\'ee \'f1\'e2\'ff\'e7\'e0\'ed\'ee \'f1 \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'f2\'e8\'ef\'ee\'e2\cf0\kerning1\par
\cf1\kerning0\par
String \'e2 \'d1\'e8 \'ec\'ee\'e6\'ed\'ee \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'f2\'fc \'ea\'e0\'ea:\cf0\kerning1\par
\cf1\kerning0 1. \'d1\'f2\'f0\'ee\'ea\'ee\'e2\'fb\'e5 \'ea\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'fb: printf("Hello"), Hello \'e1\'f3\'e4\'e5\'f2 \'eb\'e5\'e6\'e0\'f2\'fc \'e2 \'ef\'e0\'ec\'ff\'f2\'e8 \'e2 static \'f0\'e0\'e7\'e4\'e5\'eb\'e0 \'ef\'e0\'ec\'ff\'f2\'e8, \'e0 printf-\'f3 \'ef\'e5\'f0\'e5\'e4\'e0\'e4\'f3\'f2 \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 \'ef\'e5\'f0\'e2\'f3\'fe \'ff\'f7\'e5\'e9\'ea\'f3\cf0\kerning1\par
\cf1\kerning0 2. \'cc\'e0\'f1\'f1\'e8\'e2\'fb \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2: char m1[]="Hello", \'e4\'eb\'ff \'f5[1] \'e1\'f3\'e4\'e5\'f2 "\'e5'\cf0\kerning1\par
\cf1\kerning0 3. \'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 char *m2; m2=m1; *m2 \'e1\'f3\'e4\'e5\'f2  'H', *(m2+1) \'e1\'f3\'e4\'e5\'f2 'e'\cf0\kerning1\par
\cf1\kerning0 4. \'cc\'e0\'f1\'f1\'e8\'e2\'fb \'f1\'e8\'ec\'e2\'ee\'eb\'fc\'ed\'fb\'f5 \'f1\'f2\'f0\'ee\'ea: char *m3[]=\{"Hello", "world"\}, *m3[1] \'e1\'f3\'e4\'e5\'f2 'w', m3[1][2] \'e1\'f3\'e4\'e5\'f2 'r'\cf0\kerning1\par
\cf1\kerning0\ul\par
\'ca\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'ed\'fb\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'fb\ulnone (\b mutable\b0 ):\cf0\kerning1\par
\cf1\kerning0\'d7\'f2\'ee \'f2\'e0\'ea\'ee\'e5 \'ee\'e1\'fa\'e5\'ea\'f2 const:\cf0\kerning1\par
\cf1\kerning0 1. \'cd\'e5\'eb\'fc\'e7\'ff \'ec\'e5\'ed\'ff\'f2\'fc \'ef\'ee\'eb\'ff\cf0\kerning1\par
\cf1\kerning0 2. \'cd\'e5\'eb\'fc\'e7\'ff \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc \'ed\'e5 const \'ec\'e5\'f2\'ee\'e4\'fb\cf0\kerning1\par
\cf1\kerning0 3. \'cd\'e5\'eb\'fc\'e7\'ff \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'f2\'fc \'ef\'ee \'ed\'e5 const \'f1\'f1\'fb\'eb\'ea\'e5\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 const Complex Pi(3.14);\cf0\kerning1\par
\cf1\kerning0 Pi.getRe()\tab //\'ed\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff, \'e1\'f3\'e4\'e5\'f2 \'ee\'f8\'e8\'e1\'ea\'e0\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0\'cc\'fb \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'ec \'f1 3-\'f5 \'ec\'e5\'f0\'ed\'ee\'e9 \'e3\'f0\'e0\'f4\'e8\'ea\'ee\'e9. \'d3 \'ed\'e0\'f1 \'e5\'f1\'f2\'fc class Matrix. \'c2 \'ea\'eb\'e0\'f1\'f1\'e5 \'e5\'f1\'f2\'fc \'ec\'e5\'f2\'ee\'e4 int determinant() - \'f1\'eb\'ee\'e6\'ed\'fb\'e9 \'e2 \'ef\'eb\'e0\'ed\'e5 \'e2\'fb\'f7\'e8\'f1\'eb\'e5\'ed\'e8\'e9. \'c5\'f1\'eb\'e8 \'e5\'f1\'f2\'fc \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee\'f1\'f2\'fc \'e5\'e3\'ee \'f7\'e0\'f1\'f2\'ee \'e2\'fb\'f7\'e8\'f1\'eb\'ff\'f2\'fc, \'f1 \'f3\'f7\'b8\'f2\'ee\'ec \'f2\'ee\'e3\'ee \'f7\'f2\'ee \'f1\'e0\'ec\'e0 \'ec\'e0\'f2\'f0\'e8\'f6\'e0 \'ed\'e5 \'ec\'e5\'ed\'ff\'e5\'f2\'f1\'ff, \'f2\'ee \'ef\'f0\'ee\'f9\'e5 \'e5\'e3\'ee \'ee\'e4\'e8\'ed \'f0\'e0\'e7 \'ef\'ee\'f1\'f7\'e8\'f2\'e0\'f2\'fc \'e8 \'f1\'e4\'e5\'eb\'e0\'f2\'fc const.\cf0\kerning1\par
\cf1\kerning0\par
class Matrix\cf0\kerning1\par
\cf1\kerning0 private:\cf0\kerning1\par
\cf1\kerning0    int myDeterminant;\tab\tab //\'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e4\'e5\'f2\'e5\'f0\'ec\'e8\'ed\'e0\'ed\'f2\'e0\cf0\kerning1\par
\cf1\kerning0    bool myDeterminantIsChanged;\tab //\'f4\'eb\'e0\'e3 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'fe\'f9\'e8\'e9, \'e8\'e7\'ec\'e5\'ed\'e8\'eb\'f1\'ff \'eb\'e8 \'e4\'e5\'f2\'e5\'f0\'ec\'e8\'ed\'e0\'ed\'f2\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0    void set(int i, int j, int val)\{\tab //\'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'ec\'e0\'f2\'f0\'e8\'f6\'fb - \'f2\'e0\'ea\'e6\'e5 \'e2\'fb\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'f4\'eb\'e0\'e3 myIsDeterminantChanged = true\cf0\kerning1\par
\cf1\kerning0     .....\cf0\kerning1\par
\cf1\kerning0     myDeterminantIsChanged=true;\}\cf0\kerning1\par
\cf1\kerning0  int determinant() const\{\tab\tab //\'f1\'e0\'ec\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e2\'fb\'f7\'e8\'f1\'eb\'e5\'ed\'e8\'ff \'e4\'e5\'f2\'e5\'f0\'ec\'e8\'ed\'e0\'ed\'f2\'e0 - \'e2\'fb\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'f4\'eb\'e0\'e3 myDeterminantIsChanged = false\cf0\kerning1\par
\cf1\kerning0     if(myDeterminantIsChanged)\{\cf0\kerning1\par
\cf1\kerning0      .....\cf0\kerning1\par
\cf1\kerning0      myDeterminantIsChanged=false;\}\cf0\kerning1\par
\cf1\kerning0\par
\'cd\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff !!! \'cf\'ee\'f2\'ee\'ec\'f3 \'f7\'f2\'ee int determinant() \ul const\ulnone  \'e7\'ed\'e0\'f7\'e8\'f2 \'f7\'f2\'ee \'ee\'ed \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'ec\'e5\'ed\'ff\'f2\'fc \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe \'ea\'eb\'e0\'f1\'f1\'e0 myDeterminantIsChanged - \'e0 \'ee\'ed \'ec\'e5\'ed\'ff\'e5\'f2.\cf0\kerning1\par
\cf1\kerning0\'c2\'fb\'f5\'ee\'e4: \'ce\'e1\'fa\'ff\'e2\'e8\'f2\'fc int determinant() \'e1\'e5\'e7 const. \'d2\'ee\'e3\'e4\'e0 \'f2\'ee\'e6\'e5 \'e5\'f1\'f2\'fc \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb - \'ed\'e5 \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'f1\'ff \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'fe determinant \'f3 const Matrix, \'f2.\'e5.\cf0\kerning1\par
\cf1\kerning0 foo(const Matrix &m)\{\tab //\'ee\'e1\'fa\'e5\'ea\'f2 \'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ef\'ee const \'f1\'f1\'fb\'eb\'ea\'e5\cf0\kerning1\par
\cf1\kerning0  m.determinant();\}\tab //\'e8 \'f3 \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'ed\'e5\'eb\'fc\'e7\'ff \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 determinant\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'ee\'fd\'f2\'ee\'ec\'f3 \'ed\'e0\'e4\'ee \'ef\'e8\'f1\'f2\'fc \'f2\'e0\'ea:\cf0\kerning1\par
\cf1\kerning0 class Matrix\cf0\kerning1\par
\cf1\kerning0 private:\cf0\kerning1\par
\cf1\kerning0  \b mutable\b0  int myDeterminant;\cf0\kerning1\par
\cf1\kerning0  \b mutable\b0  bool myDeterminantIsChanged;\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0   int determinant() const;\cf0\kerning1\par
\cf1\kerning0\'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e5 \'e8 \'e5\'e4\'e8\'ed\'f1\'f2\'e2\'e5\'ed\'ed\'ee\'e5 \'ef\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5 mutable - \'fd\'f2\'ee \'ea\'fd\'f8\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e9.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe\ulnone :\cf0\kerning1\par
\cf1\kerning0\'cc\'ed\'ee\'e3\'e8\'e5 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'fb \'ed\'e0 \'d1\'e8: \'ff\'e4\'f0\'ee Linux, Quake \'e8 \'f2.\'e4. \'c2\'e7\'e0\'e8\'ec\'ee\'e7\'e0\'ec\'e5\'ed\'ff\'e5\'ec\'ee\'f1\'f2\'fc \'e1\'eb\'ee\'ea\'ee\'e2.\cf0\kerning1\par
\cf1\kerning0\'c2 \'d1++ \'e5\'f1\'f2\'fc virtual. \'c2 \'d1\'e8 - \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe. \'ca\'e0\'ea \'f8\'f2\'f3\'ea\'e8 \'f1 virtual \'f0\'e0\'e1\'ee\'f2\'e0\'fe\'f2 \'e2 \'d1\'e8.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 void f()\{\}\cf0\kerning1\par
\cf1\kerning0 void (*pf)()=&f; \'ee\'e4\'ed\'ee \'e8 \'f2\'ee\'e6\'e5 \'f7\'f2\'ee \'e8 void(*pf)()=f - \'e0\'e4\'f0\'e5\'f1 \'ef\'e0\'ec\'ff\'f2\'e8, \'e3\'e4\'e5 \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff f()\cf0\kerning1\par
\cf1\kerning0 pf();\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0 void f(int a)\{\}\tab //\'e5\'f1\'f2\'fc \'e4\'e2\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0 void g(int b)\{\}\cf0\kerning1\par
\cf1\kerning0 void (*pf)(int);\cf0\kerning1\par
\cf1\kerning0 int d=0;\cf0\kerning1\par
\cf1\kerning0 scanf("%d";&d);\cf0\kerning1\par
\cf1\kerning0 if(d==5)\{\cf0\kerning1\par
\cf1\kerning0  pf=&f;\tab\tab //\'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fe \'ec\'ee\'e6\'ed\'ee \'ef\'f0\'e8\'f1\'e2\'ee\'e8\'f2\'fc \'e0\'e4\'f0\'e5\'f1 \'eb\'e8\'e1\'ee \'ef\'e5\'f0\'e2\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8(\'e2\'f0\'ee\'e4\'e5 \'ea\'e0\'ea \'ec\'ee\'e6\'ed\'ee \'ef\'e8\'f1\'e0\'f2\'fc \'ef\'f0\'ee\'f1\'f2\'ee \b pf=f\b0 )\cf0\kerning1\par
\cf1\kerning0 else\cf0\kerning1\par
\cf1\kerning0  pf=&g;\}\tab\tab //\'eb\'e8\'e1\'ee \'e0\'e4\'f0\'e5\'f1 \'e2\'f2\'ee\'f0\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0 pf(20);\tab //\'e2\'fb\'e1\'ee\'f0 \'f2\'ee\'e3\'ee, \'ea\'e0\'ea\'e0\'ff \'e8\'e7 \'f4\'f3\'ed\'ea\'f6\'e8\'e9 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'f2\'fc\'f1\'ff \'f0\'e5\'f8\'e0\'e5\'f2\'f1\'ff \'ed\'e5 \'e2 \'ec\'ee\'ec\'e5\'ed\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8, \'e0 \'e2 \'ec\'ee\'ec\'e5\'ed\'f2 \'e7\'e0\'ef\'f3\'f1\'ea\'e0, \'ea\'e0\'ea \'e8 \'e2 \'ef\'f0\'e8\'ec\'e5\'f0\'e0\'f5 \'f1 virtual\cf0\kerning1\par
\cf1\kerning0\par
\'c3\'e4\'e5 \'f2\'e0\'ea\'ee\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff: void (*Tree, void (*pf)(Node *n)) \'ef\'e5\'f0\'e5\'e4\'e0\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0.\cf0\kerning1\par
\cf1\kerning0\'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'ec\'ee\'e6\'ed\'ee \'ee\'e1\'fa\'e5\'e4\'e5\'ed\'e8\'f2\'fc \'e2 struct - \'ea\'e0\'ea\'ee\'e9-\'f2\'ee \'ef\'f0\'ee\'e3\'ee\'ed.\cf0\kerning1\par
\cf1\kerning0\par
\'d1allback - \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'e4\'eb\'ff \'ee\'e1\'f0\'e0\'f2\'ed\'ee\'e3\'ee \'e2\'fb\'e7\'ee\'e2\'e0. \'c3\'f0\'e0\'f4\'e8\'f7\'e5\'f1\'ea\'e8\'e5 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 \'e2 Windows: \'f1\'f2\'e0\'f0\'e0\'ff MFC, \'ed\'ee\'e2\'e0\'ff \'e8\'e7 .NET Windows Forms. \'c5\'f1\'f2\'fc \'e5\'f9\'b8 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e8 QT \'e8 GTK (\'ed\'e0 \'ed\'e5\'e9 \'ed\'e0\'ef\'e8\'f1\'e0\'ed GNOME, \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0 \'cd\'c5 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'ee \'ee\'f0\'e8\'e5\'ed\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'e0\'ff, \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'e0 \'ed\'e0 \'d1).\cf0\kerning1\par
\kerning0{\field{\*\fldinst{HYPERLINK "http://developer.gnome.org/gtk-tutorial/stable/"}}{\fldrslt{\ul\cf2 http://developer.gnome.org/gtk-tutorial/stable/}}}\kerning1\f0\fs22\par
\cf1\kerning0\'c2 main \'e7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'f2\'f1\'ff gtk_init \'e8 \'e4\'ee \'f2\'e5\'f5 \'ef\'ee\'f0 \'ef\'ee\'ea\'e0 \'ee\'ea\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'ed\'ed\'ee\'e5 gtk \'ed\'e5 \'e7\'e0\'ea\'f0\'ee\'e5\'f2\'f1\'ff, \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'e1\'f3\'e4\'e5\'f2 \'e2\'e8\'f1\'e5\'f2\'fc \'f2\'e0\'ec. \'c1\'f3\'e4\'e5\'f2 \'e6\'e4\'e0\'f2\'fc \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'e5 \'f1\'ee\'e1\'fb\'f2\'e8\'ff, \'f2\'e8\'ef\'e0 \'ed\'e0\'e6\'e0\'f2\'e8\'e5 \'ed\'e0 \'ea\'eb\'e0\'e2\'e8\'e0\'f2\'f3\'f0\'f3 \'e8\'eb\'e8 \'ec\'fb\'f8\'ea\'f3 \'e8 \'e2 \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'e8 \'ee\'f2 \'fd\'f2\'ee\'e3\'ee \'e2\'fb\'e7\'fb\'e2\'e0\'f2\'fc \'f2\'e5 \'e8\'eb\'e8 \'e8\'ed\'fb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8. \'c2 \'ee\'e1\'f9\'e5\'ec \'ee\'f1\'f3\'f9\'e5\'f1\'f2\'e2\'eb\'ff\'e5\'f2\'f1\'ff, \'f2\'ee\'e6\'e5 \'f7\'e5\'f0\'e5\'e7 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'fe\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 2.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'d8\'e0\'e1\'eb\'ee\'ed\'fb \'e8\'eb\'e8 Template\ulnone .\cf0\kerning1\par
\cf1\kerning0\'c2 C++ \'ef\'ee default-\'f3 \'ed\'e5\'eb\'fc\'e7\'ff \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'ee\'e4\'e8\'ed \'e0\'eb\'e3\'ee\'f0\'e8\'f2\'ec \'e4\'eb\'ff \'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'ea\'e8 \'ec\'e0\'f1\'f1\'e8\'e2\'ee\'e2 \'e8 String \'e8 Integer. \'ce\'e1\'ff\'e7\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'ef\'e8\'f8\'e5\'ec \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e9 \'e0\'eb\'e3\'ee\'f0\'e8\'f2\'ec \'e4\'eb\'ff String. \'ce\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e9 \'e4\'eb\'ff Integer. C++ - \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'f2\'e8\'ef\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'ff\'e7\'fb\'ea. \'c2 \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8 \'f2\'e8\'ef\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'f5 \'ff\'e7\'fb\'ea\'e0\'f5 \'e0\'eb\'ff Phyton - \'ed\'e8\'ea\'e0\'ea\'e8\'f5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec \'ed\'e5 \'e1\'fb\'eb\'ee \'e1\'fb. \'c4\'eb\'ff \'ef\'ee\'e4\'f2\'ff\'e3\'e8\'e2\'e0\'ed\'e8\'ff \'f1\'e2\'ee\'e9\'f1\'f2\'e2 \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'ee\'e9 \'f2\'e8\'ef\'e8\'e7\'e0\'f6\'e8\'e8 \'ef\'f0\'e8\'e4\'f3\'ec\'e0\'eb\'e8 Template.\cf0\kerning1\par
\cf1\kerning0\par
\'c1\'fb\'eb \'f3 \'ed\'e0\'f1 \'e2 \'ef\'f0\'e8\'ec\'e5\'f0\'e0\'f5 \'f2\'e0\'ea\'ee\'e9 \'ea\'eb\'e0\'f1\'f1:\cf0\kerning1\par
\cf1\kerning0 class Array\{\cf0\kerning1\par
\cf1\kerning0    int *pData;\tab //\'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 int, \'ed\'ee \'e1\'fb\'e2\'e0\'e5\'f2, \'f7\'f2\'ee \'ed\'e0\'e4\'ee \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'f2\'ee\'e6\'e5 \'f1\'e0\'ec\'ee\'e5, \'f2\'ee\'eb\'fc\'ea\'ee \'ed\'e0 \'f2\'e8\'ef double \'e8\'eb\'e8 Comlex\cf0\kerning1\par
\cf1\kerning0    ...\};\cf0\kerning1\par
\cf1\kerning0\'c0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'e0\'ff \'e7\'e0\'e4\'e0\'f7\'e0 \'e1\'fb\'e2\'e0\'e5\'f2 \'e2 "\'d3\'ec\'ed\'fb\'f5 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff\'f5" \'e0\'eb\'ff shared_ptr\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'ef\'f0\'ee\'e1\'f3\'e5\'ec \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'e0\'ed\'e8\'e5 \'e8\'e7 int \'e2 double \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ef\'f0\'e8 \'ef\'ee\'ec\'ee\'f9\'e8 \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0\'e0:\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 #define ARRAY(Type)\\\tab //ARRAY - \'ed\'e0\'e7\'e2\'e0\'ed\'e8\'e5 \'ec\'e0\'ea\'f0\'ee\'f1\'e0, Type - \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0 \'ec\'e0\'ea\'f0\'ee\'f1\'e0. \cf0\kerning1\par
\cf1\kerning0 class \b Array\b0\{\\\tab\tab //\'ef\'ee \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1\'f3 \'ec\'e0\'ea\'f0\'ee\'f1 \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'e2\'fb\'f2\'ff\'ed\'f3\'f2 \'e2 \'ee\'e4\'ed\'f3 \'f1\'f2\'f0\'ee\'ea\'f3. \\ - \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'f1\'ee\'e5\'e4\'e8\'ed\'ff\'f2\'fc \'f1\'f2\'f0\'ee\'ea\'e8\cf0\kerning1\par
\cf1\kerning0    Type * pData;\\\cf0\kerning1\par
\cf1\kerning0    ...\};\cf0\kerning1\par
\cf1\kerning0\par
\'d2\'e5\'ef\'e5\'f0\'fc \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 \'ea\'ee\'e3\'e4\'e0 \'ed\'e0\'ef\'e8\'f8\'e5\'ec:\cf0\kerning1\par
\cf1\kerning0 ARRAY (int);\tab //\'e2\'ec\'e5\'f1\'f2\'ee \'fd\'f2\'ee\'e9 \'e7\'e0\'ef\'e8\'f1\'e8 \'ef\'ee\'e4\'f1\'f2\'e0\'e2\'e8\'f2\'f1\'ff \'e2\'f1\'b8 \'f7\'f2\'ee \'ee\'e1\'ee\'e7\'ed\'e0\'f7\'e5\'ed\'ed\'ee \'e2 define, \'e0 \'e2\'ec\'e5\'f1\'f2\'ee Type \'e1\'f3\'e4\'e5\'f2 int\cf0\kerning1\par
\cf1\kerning0\'cd\'ee \'e5\'f1\'eb\'e8 \'e2 \'ee\'e4\'ed\'ee\'ec \'e8 \'f2\'ee\'ec \'e6\'e5 \'f4\'e0\'e9\'eb\'e5 \'e1\'f3\'e4\'e5\'f2 \'e5\'f9\'b8 \'e8\cf0\kerning1\par
\cf1\kerning0 ARRAY (Complex);\tab //\'f2\'ee \'e1\'f3\'e4\'f3\'f2 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb: \'f1\'ee\'e7\'e4\'e0\'f1\'f2\'f1\'ff 2-\'e0 \'ea\'eb\'e0\'f1\'f1\'e0 \'f1 \'ee\'e4\'e8\'ed\'e0\'ea\'ee\'e2\'fb\'ec \'ed\'e0\'e7\'e2\'e0\'ed\'e8\'e5\'ec - Array\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'fd\'f2\'ee\'ec\'f3 \'f3\'f1\'ee\'e2\'e5\'f0\'f8\'e5\'ed\'f1\'f2\'e2\'f3\'e5\'ec:\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0 #define ARRAY (Type, Name)\\\cf0\kerning1\par
\cf1\kerning0  class Array#Name\{\\\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'ff \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'ed\'e0\'e4\'ee \'f1\'f0\'e0\'f1\'f2\'e8\'f2\'fc \'e8\'ec\'e5\'ed\'e0 Array + \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0 Name\cf0\kerning1\par
\cf1\kerning0   Type* pData;\\\cf0\kerning1\par
\cf1\kerning0   ...\};\cf0\kerning1\par
\cf1\kerning0\'d2\'e5\'ef\'e5\'f0\'fc \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 \'ed\'e0\'ef\'e8\'f8\'e5\'ec:\cf0\kerning1\par
\cf1\kerning0 ARRAY (int, INT);\cf0\kerning1\par
\cf1\kerning0 ARRAY (Complex, COMPLEX);\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'f1\'eb\'e5 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'ea\'e8 \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0\'ee\'ec \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'f1\'ff 2-\'e0 \'ea\'eb\'e0\'f1\'f1\'e0:\cf0\kerning1\par
\cf1\kerning0 ArrayINT \'e8 ArrayCOMPLEX\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'e5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb \'f3 \'ec\'e0\'ea\'f0\'ee\'f1\'ee\'e2:\cf0\kerning1\par
\cf1\kerning0 1. \'ca\'ee\'e4, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e2\'e8\'e4\'e8\'f2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f1\'f2 - \'fd\'f2\'ee \'ed\'e5 \'f2\'ee\'f2 \'ea\'ee\'e4, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e2\'e8\'e4\'e8\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0. \'ce\'f8\'e8\'e1\'ea\'e0 \'e1\'f3\'e4\'e5\'f2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc \'ed\'e0 \'ed\'ee\'ec\'e5\'f0 \'f1\'f2\'f0\'ee\'ea\'e8 23, \'e8 \'ed\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'ee \'e3\'e4\'e5 \'fd\'f2\'ee \'e2 \'ed\'e0\'f8\'e5\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5.\cf0\kerning1\par
\cf1\kerning0 2. \'c2\'ee\'e7\'ed\'e8\'ea\'ed\'f3\'f2 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb \'f1 \'ee\'f2\'eb\'e0\'e4\'ea\'ee\'e9.\cf0\kerning1\par
\cf1\kerning0 3. \'c5\'f1\'eb\'e8 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'e1\'f3\'e4\'e5\'f2 \'e5\'f9\'b8 \'e3\'e4\'e5-\'ed\'e8\'e1\'f3\'e4\'fc \'f1\'eb\'ee\'e2\'ee Type, \'f2\'ee \'ef\'f0\'e5\'e4\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'f0 \'e5\'e3\'ee \'f2\'ee\'e6\'e5 \'e7\'e0\'ec\'e5\'ed\'e8\'f2 \'ed\'e5 \'ef\'ee\'e4\'f3\'ec\'e0\'e2.\cf0\kerning1\par
\cf1\kerning0\par
\ul Template\ulnone  - \'fd\'f2\'ee \'f2\'ee\'f2 \'e6\'e5 \'ec\'e0\'ea\'f0\'ee\'f1, \'ed\'ee \'f2\'ee\'eb\'fc\'ea\'ee \'ed\'e0 \'f3\'f0\'ee\'e2\'ed\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'e0. \'c8\'e7\'e1\'e0\'e2\'eb\'ff\'e5\'f2 \'ee\'f2 \'e2\'f1\'e5\'f5 \'e2\'fb\'f8\'e5\'e8\'e7\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'f5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec.\cf0\kerning1\par
\cf1\kerning0 template <class T> \'ec\'ee\'e6\'ed\'ee \'f2\'e0\'ea\'e6\'e5 \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc template <typename T> \'f0\'e0\'e7\'ed\'e8\'f6\'fb \'ed\'e8\'ea\'e0\'ea\'ee\'e9\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b93\i0 :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 array.h\tab main.cpp\cf0\kerning1\par
\cf1\kerning0 template <class T>\tab Array <int> ia;\cf0\kerning1\par
\cf1\kerning0 class Array\{\tab Array <double> da;\cf0\kerning1\par
\cf1\kerning0   T* pData;\tab\'ef\'f0\'e8\'ec\'e5\'f0\'ed\'ee \'e0\'ed\'e0\'eb\'ee\'e3\'e8\'f7\'ed\'ee \'e7\'e0\'ef\'e8\'f1\'e8:\cf0\kerning1\par
\cf1\kerning0   T& operator[](size_t i)\{\tab class Array\{\cf0\kerning1\par
\cf1\kerning0    return data[i];\}\tab    double* pData;\cf0\kerning1\par
\cf1\kerning0\tab    double& operator[](size_t i)\{\cf0\kerning1\par
\cf1\kerning0\tab    return data[i];\};\cf0\kerning1\par
\cf1\kerning0\tab Array da;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\'cf\'ee\'e4\'f1\'f2\'e0\'ed\'ee\'e2\'ea\'e0 template \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2\'fc \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8. \'d2\'e5\'ea\'f1\'f2 \'e2\'f1\'e5\'e3\'ee \'f8\'e0\'e1\'eb\'ee\'ed\'e0 \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'e4\'ee\'f1\'f2\'f3\'ef\'e5\'ed \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8. \'d2\'e5\'ef\'e5\'f0\'fc \'f3\'e6\'e5 \'ed\'e5\'f2 \'f0\'e0\'e7\'e4\'e5\'eb\'fc\'ed\'ee\'e9 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8. \'c5\'f1\'eb\'e8 \'ec\'fb \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'ec \'f1 \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'ee\'e9, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'e0 \'ed\'e0 template, \'f2\'ee \'ee\'ed\'e0 \'ef\'ee\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'e2 \'e8\'f1\'f5\'ee\'e4\'ed\'e8\'ea\'e8.\cf0\kerning1\par
\cf1\kerning0\'c2\'f1\'e5 \'ec\'e5\'f2\'ee\'e4\'fb \'e2\'ed\'f3\'f2\'f0\'e8 template \'ef\'ee-\'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'ff\'e2\'eb\'ff\'fe\'f2\'f1\'ff inline. \'d2.\'e5. \'ea\'ee\'e4 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ef\'ee\'ec\'e5\'f9\'e0\'e5\'f2\'f1\'ff \'e2 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'ea\'e0\'ea \'e2 \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'b93.\cf0\kerning1\par
\cf1\kerning0\par
\'c2\'f2\'ee\'f0\'ee\'e9 \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1: \'f0\'e0\'e7\'e4\'e5\'eb\'fc\'ed\'ee\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'e8 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b94\i0 :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 array.h\tab array_impl.h\cf0\kerning1\par
\cf1\kerning0 template <class T>\tab template <class T>\cf0\kerning1\par
\cf1\kerning0  class Array\{\tab  T& Array<T>::operator[](size_t i)\{\cf0\kerning1\par
\cf1\kerning0   T* pData;\tab    return data[i];\}\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0   T& operator[](size_t i);\cf0\kerning1\par
\cf1\kerning0 #include "array_impl.h"\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d8\'e0\'e1\'eb\'ee\'ed\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff\ulnone :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 swap.h\tab main.cpp\cf0\kerning1\par
\cf1\kerning0 template <class T>\tab int i = 18;\cf0\kerning1\par
\cf1\kerning0  void swap(T& a,T& b)\{\tab int j = 20;\cf0\kerning1\par
\cf1\kerning0   T t(a);\tab swap <int> (i,j); \'ed\'ee \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ec\'ee\'e6\'e5\'f2 \'e8 \'f1\'e0\'ec \'e4\'ee\'e3\'e0\'e4\'e0\'f2\'fc\'f1\'ff \'ef\'f0\'ee \'f2\'e8\'ef int \'e5\'f1\'eb\'e8 \'ed\'e0\'ef\'e8\'f8\'e5\'ec \'ef\'f0\'ee\'f1\'f2\'ee swap (i,j)\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0   a=b;\cf0\kerning1\par
\cf1\kerning0   b=t;\}\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cd\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f8\'e0\'e1\'eb\'ee\'ed\'ed\'fb\'f5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'e2\ulnone :\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 template <class F, class S>\tab pair <int, double> idp;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0  struct pair\{\cf0\kerning1\par
\cf1\kerning0   F first;\cf0\kerning1\par
\cf1\kerning0   S second;\}\cf0\kerning1\par
\cf1\kerning0\par
\'cc\'ee\'e6\'ed\'ee \'e2 \'ee\'e4\'ed\'ee\'ec template \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'e4\'f0\'f3\'e3\'ee\'e9 template, \'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0: pair <int, Array<int>\'ef\'f0\'ee\'e1\'e5\'eb> obj - \'ed\'f3\'e6\'e5\'ed \'ef\'f0\'ee\'e1\'e5\'eb \'ec\'e5\'e6\'e4\'f3 >>\cf0\kerning1\par
\cf1\kerning0\par
pair <int, pair <int, double>> obj - \'ef\'f0\'e8 \'ea\'e0\'e6\'e4\'ee\'e9 \'e8\'ed\'f1\'f2\'e5\'ed\'f6\'e8\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5 (\'ee\'f2 \'f1\'eb\'ee\'e2\'e0 instance) template \'f1\'ee\'e7\'e4\'e0\'b8\'f2\'f1\'ff \'ed\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ea\'ee\'ef\'ec\'e8\'eb\'ff\'f2\'ee\'f0 \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'ef\'ee-\'f1\'e2\'ee\'e5\'ec\'f3 \'f7\'f2\'ee-\'f2\'ee \'f2\'e8\'ef\'e0 "sdfsdf1234", \'f2.\'e5. \'e2 \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'f0\'e5\'e0\'eb\'fc\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'f1\'f2\'f1\'ff 2-\'e0 \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'e0 "pair"\cf0\kerning1\par
\cf1\kerning0\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx4544 template <typename T>\tab Array <int> ia;\cf0\kerning1\par
\cf1\kerning0 template <typename V>\tab Array <double> da;\cf0\kerning1\par
\cf1\kerning0  void copy (Array <T>& a, const Array <V>& b)\{\tab copy (da,ia)\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0   if (a.size()!=b.size())\{\cf0\kerning1\par
\cf1\kerning0    return;\cf0\kerning1\par
\cf1\kerning0   for (int i=0; i<a.size(); i++)\{\cf0\kerning1\par
\cf1\kerning0    a.set(i,b.get(i));\}\cf0\kerning1\par
\cf1\kerning0\par
\'d3 \'ed\'e0\'f1 \'e5\'f1\'f2\'fc hello.cpp, \'e2 \'ea\'ee\'f2\'ee\'f0\'ee\'ec \'e5\'f1\'f2\'fc #include array.h c template \'f4\'f3\'ed\'ea\'f6\'e8\'e8 copy. Template \'ed\'e0\'f7\'ed\'b8\'f2 \'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'f2\'ee\'e3\'e4\'e0, \'ea\'ee\'e3\'e4\'e0 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.cpp \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'ee\'e2 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 copy. \'c5\'f1\'eb\'e8 \'e2 \'f4\'e0\'e9\'eb\'e5 hello.h \'ed\'e5\'f2 \'e2\'fb\'e7\'ee\'e2\'e0 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 copy, \'f2\'ee \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ea template \'e4\'e0\'e6\'e5 \'ed\'e5 \'ee\'e1\'f0\'e0\'f2\'e8\'f2\'fc\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d8\'e0\'e1\'eb\'ee\'ed\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff \'f8\'e0\'e1\'eb\'ee\'ed\'ed\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0\ulnone :\cf0\kerning1\par
\cf1\kerning0 template <typename T>\cf0\kerning1\par
\cf1\kerning0  class Array\{\cf0\kerning1\par
\cf1\kerning0  private:\cf0\kerning1\par
\cf1\kerning0   size_t size;\tab\tab //\'e2 \'ee\'e1\'f9\'e5\'ec \'ec\'f3\'f2\'fc \'f1\'e2\'ff\'e7\'e0\'ed\'ed\'e0\'ff \'f1 \'f2\'e5\'ec, \'f7\'f2\'ee template \'ee\'e4\'e8\'ed, \'e0 \'f0\'e5\'e0\'eb\'fc\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'fe\'f2\'f1\'ff \'f0\'e0\'e7\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'fb \'e8 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'e5\'ed\'ed\'ee \'f0\'e0\'e7\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb\cf0\kerning1\par
\cf1\kerning0   T* pData;\cf0\kerning1\par
\cf1\kerning0  public:\cf0\kerning1\par
\cf1\kerning0   template <typename V>\cf0\kerning1\par
\cf1\kerning0    Array <T>& operator= (const Array <V>& a)\{\cf0\kerning1\par
\cf1\kerning0     .....\cf0\kerning1\par
\cf1\kerning0     for (int i=0; i<a; i++)\{\cf0\kerning1\par
\cf1\kerning0      pData[i]=a.pData[i];\}\cf0\kerning1\par
\cf1\kerning0\par
\'cc\'ee\'e6\'ed\'ee \'f3\'ef\'f0\'ee\'f1\'f2\'e8\'f2\'fc \'e7\'e0\'ef\'e8\'f1\'e8 \'e2 template. \'c2\'ec\'e5\'f1\'f2\'ee:\cf0\kerning1\par
\cf1\kerning0 pair <int, Array <int>> obj;\cf0\kerning1\par
\cf1\kerning0\'e7\'e0\'ef\'e8\'f1\'e0\'f2\'fc\cf0\kerning1\par
\cf1\kerning0 typedef Array <int> AInt;\cf0\kerning1\par
\cf1\kerning0 pair <int, AInt> obj;\cf0\kerning1\par
\cf1\kerning0\par
\'d7\'f2\'ee \'ef\'ee\'ea\'e0 \'ed\'e5 \'f0\'e0\'f1\'f1\'ec\'ee\'f2\'f0\'e5\'eb\'e8:\cf0\kerning1\par
\cf1\kerning0 1. \'cf\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb template - \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0 \'ec\'ee\'e6\'e5\'f2 \'e2\'fb\'f1\'f2\'f3\'ef\'e0\'f2\'fc, \'e0 \'f7\'e0\'f1\'f2\'ed\'ee\'f1\'f2\'e8, \'f6\'e5\'eb\'ee\'f7\'e8\'f1\'eb\'e5\'ed\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'e5\cf0\kerning1\par
\cf1\kerning0 2. \'d1\'ef\'e5\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'f8\'e0\'e1\'eb\'ee\'ed\'e0: \'f5\'ee\'f7\'f3 \'e4\'eb\'ff \'e2\'f1\'e5\'f5 \'f2\'e8\'ef\'ee\'e2 (int, double) \'ee\'e1\'f9\'e8\'e9 \'f8\'e0\'e1\'eb\'ee\'ed, \'e0 \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'ee \'e4\'eb\'ff bool - \'f1\'ef\'e5\'f6\'e8\'e0\'eb\'fc\'ed\'fb\'e9 \'f8\'e0\'e1\'eb\'ee\'ed\cf0\kerning1\par
\cf1\kerning0 3. \'d7\'e0\'f1\'f2\'e8\'f7\'ed\'e0\'ff \'f1\'ef\'e5\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'f8\'e0\'e1\'eb\'ee\'ed\'e0: \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3, \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0 \'ea \'f8\'e0\'e1\'eb\'ee\'ed\'f3 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'ef\'e5\'f0\'e5\'e4\'e0\'ed \'f2\'ee\'eb\'fc\'ea\'ee \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc\cf0\kerning1\par
\cf1\kerning0  \cf0\kerning1\par
\cf1\kerning0\ul\'c2\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'fb\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c1\'fb\'eb\'ee:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 shared_ptr.h\tab main.cpp\cf0\kerning1\par
\cf1\kerning0 class storage\{....\};\tab storage S;\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0 class shared_ptr\{\tab //\'f2\'e5\'ef\'e5\'f0\'fc \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e8\'ec\'ff storage, \'f5\'ee\'f2\'ff storage \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'e2 shared_ptr\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0  storage* pStr;\}\cf0\kerning1\par
\cf1\kerning0\par
\'ca\'e0\'ea \'eb\'f3\'f7\'f8\'e5: - \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1 storage\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0 shared_ptr.h\tab main.cpp\cf0\kerning1\par
\cf1\kerning0 class shared_ptr\{\tab storage S;\tab\tab //\'e2\'ee\'f2 \'f2\'e0\'ea \'f3\'e6\'e5 \'ed\'e5 \'f1\'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2\cf0\kerning1\par
\cf1\kerning0 public:\tab shared_ptr::storage S;\tab //\'e2\'ee\'f2 \'f2\'e0\'ea \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc\cf0\kerning1\par
\cf1\kerning0  class storage\{\tab shared_ptr::storage::increment()\tab //\'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 increment \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 storage\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0   increment();\}\}\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cf\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'ee \'e8\'ec\'b8\'ed\ulnone :\cf0\kerning1\par
\kerning0{\field{\*\fldinst{HYPERLINK "http://mycpp.ru/cpp/book/c02_7.html"}}{\fldrslt{\ul\cf2 http://mycpp.ru/cpp/book/c02_7.html}}}\kerning1\f0\fs22\par
\cf1\kerning0 namespace std\tab\tab //\'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'ee \'e8\'ec\'b8\'ed \'fd\'f2\'ee \'f2\'e8\'ef\'e0 .h \'f4\'e0\'e9\'eb\'e0. \'cf\'e8\'f8\'e5\'f8\'fc \'e2 namespace \'f7\'f2\'ee-\'f2\'ee \'e8 \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'f8\'fc \'ea\'f3\'f7\'f3 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5. \'c7\'e0\'e4\'e0\'f7\'e0 \'f0\'e0\'e7\'e3\'f0\'f3\'e7\'e8\'f2\'fc \'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'ee \'e8\'ec\'b8\'ed. \'d7\'f2\'ee\'e1\'fb, \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3, \'e1\'fb\'eb\'ee \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f4\'f3\'ed\'ea\'f6\'e8\'e9 copy. \'c2 \'ee\'e1\'f9\'e5\'ec \'e4\'eb\'ff \'f3\'e4\'ee\'e1\'f1\'f2\'e2\'e0 \'e8 \'ed\'e5 \'ef\'f3\'f2\'e0\'ed\'e8\'f6\'fb.\cf0\kerning1\par
\cf1\kerning0 ~\~\'e2 Python \'e5\'f1\'f2\'fc import, \'e2 \'d1++ \'fd\'f2\'ee namespace.\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx1704\tx3408\cf1\kerning0 util.h\tab\tab util.cpp\tab\tab main.cpp \cf0\kerning1\par
\cf1\kerning0 namespace utils\{\tab namespace utils\tab utils::f();\cf0\kerning1\par
\cf1\kerning0  void f();\tab\tab  void f()\{...\};\tab utils::A obj;\cf0\kerning1\par
\cf1\kerning0  class A;\}\tab\tab  class A\{...\};\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\tx3408\cf1\kerning0\par
\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'ea\'e0\'e6\'e4\'fb\'e9 \'f0\'e0\'e7 \'ed\'e5 \'ef\'e8\'f1\'e0\'f2\'fc utils::f() \'e8 \'ef\'ee\'e4\'ee\'e1\'ed\'ee\'e5, \'ec\'ee\'e6\'ed\'ee \'e2 \'ed\'e0\'f7\'e0\'eb\'e5 \'f4\'e0\'e9\'eb\'e0 \'ee\'e1\'fa\'ff\'e2\'e8\'f2\'fc:\cf0\kerning1\par
\cf1\kerning0\par
using utils::f()\cf0\kerning1\par
\cf1\kerning0 using namespace utils //\'ed\'e5 \'f0\'e5\'ea\'ee\'ec\'e5\'ed\'e4\'f3\'e5\'f2 \'f2\'e0\'ea \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc, \'f0\'e0\'e7\'e2\'e5 \'f7\'f2\'ee \'f2\'ee\'eb\'fc\'ea\'ee \'e2 demo\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 3.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'c8\'f1\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'ff\ulnone :\cf0\kerning1\par
\cf1\kerning0\'cb\'ee\'e2\'e8\'f2 \'e2 \'f7\'e0\'f1\'f2\'ed\'ee\'f1\'f2\'e8 \'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ed\'e0 0. \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2 \'ea\'eb\'fe\'f7\'e5\'e2\'fb\'e5 \'f1\'eb\'ee\'e2\'e0: try, catch, throw - \'ef\'ee \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e5 \'ee\'f7\'e5\'ed\'fc \'ef\'ee\'f5\'ee\'e6\'e5 \'ed\'e0 if-else. \'ce\'e4\'ed\'e0\'ea\'ee \'e8\'f1\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'ff \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0\'f5 \'ed\'e0\'e4\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e2 \'f1\'eb\'f3\'f7\'e0\'ff\'f5, \'ea\'ee\'e3\'e4\'e0 \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'fb \'f1\'e8\'f2\'f3\'e0\'f6\'e8\'e8: system failures \'e8\'eb\'e8 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'f1 \'ef\'ee\'f2\'e5\'ed\'f6\'e8\'e0\'eb\'fc\'ed\'fb\'ec race conditions.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c4\'f0\'f3\'e6\'e5\'f1\'f2\'e2\'e5\'ed\'ed\'fb\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\ulnone :\cf0\kerning1\par
\cf1\kerning0 class Woman25\{\cf0\kerning1\par
\cf1\kerning0 private:\cf0\kerning1\par
\cf1\kerning0    char *name;\tab //\'e2 \'e4\'f0\'f3\'e6\'e5\'f1\'f2\'e2\'e5\'ed\'ed\'f3\'fe \'f4\'f3\'ed\'ea\'f6\'e8\'fe \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'ea\'eb\'e0\'f1\'f1\'e0 \'ed\'e0\'e4\'ee \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'f2\'fc \'ff\'e2\'ed\'ee \'ea\'e0\'ea \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\cf0\kerning1\par
\cf1\kerning0    int weight;\tab //\'f2\'e0\'ea \'ea\'e0\'ea \'ee\'ed\'e0 \'ed\'e5 \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ea\'ee\'ec\'ef\'ee\'ed\'e5\'ed\'f2\'ee\'ec \'ea\'eb\'e0\'f1\'f1\'e0, \'ee\'ed\'e0 \'ed\'e5 \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'f2 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc this.\cf0\kerning1\par
\cf1\kerning0    \b friend\b0  void setData(char*,int,Woman25&);\tab //\'ef\'f0\'ee\'f2\'ee\'f2\'e8\'ef, \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'f2\'fc\'f1\'ff \'ec\'ee\'e6\'e5\'f2 \'e2 \'eb\'fe\'e1\'ee\'ec \'ec\'e5\'f1\'f2\'e5 \'ea\'eb\'e0\'f1\'f1\'e0 \'ea\'e0\'ea \'e2 private, \'f2\'e0\'ea \'e8 \'e2 protected\cf0\kerning1\par
\cf1\kerning0    \b friend\b0  void getData(Woman25&);\tab\tab //\'ee\'e1\'ff\'e7\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'e4\'ee\'eb\'e6\'ed\'e0 \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'f2\'fc\'f1\'ff \ul\'f1\'f1\'fb\'eb\'ea\'e0\ulnone  \'ed\'e0 Woman25\cf0\kerning1\par
\cf1\kerning0 public:\tab\tab\tab\tab\tab\tab //\'e8\'ec\'e5\'e5\'f2 \'e4\'ee\'f1\'f2\'f3\'ef \'ea\'ee \'e2\'f1\'e5\'ec \'ef\'ee\'eb\'ff\'ec \'ea\'eb\'e0\'f1\'f1\'e0 !\cf0\kerning1\par
\cf1\kerning0    void setData(char*,int);\tab\tab\tab\tab //\'ea \'e4\'e0\'ed\'ed\'fb\'ec \'f4\'f3\'ed\'ea\'f6\'e8\'ff\'ec \'ec\'ee\'e6\'ed\'ee \'ee\'e1\'f0\'e0\'f9\'e0\'f2\'fc\'f1\'ff \'e2\'ed\'e5 \'ea\'eb\'e0\'f1\'f1\'e0, \'ed\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'ff \'f1\'ef\'e5\'f6.\'ec\'e5\'f2\'ee\'e4\'ee\'e2\cf0\kerning1\par
\cf1\kerning0    void getData();\};\cf0\kerning1\par
\cf1\kerning0 void setData(char* n,int w; Woman25& object)\{...\};//\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'e4\'f0\'f3\'e6\'e5\'f1\'f2\'e2\'e5\'ed\'ed\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8\cf0\kerning1\par
\cf1\kerning0 void getData(Woman25& object);\tab\tab\tab //\'ee\'e1\'ff\'e7\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'e4\'ee\'eb\'e6\'ed\'e0 \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'f2\'fc\'f1\'ff \ul\'f1\'f1\'fb\'eb\'ea\'e0\ulnone  \'ed\'e0 Woman25\cf0\kerning1\par
\cf1\kerning0 void Woman25::setData(char* n,int w)\{...\};\tab //\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'e0 \'ea\'eb\'e0\'f1\'f1\'e0\cf0\kerning1\par
\cf1\kerning0 void Woman25::getData()\{...\};\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0    Woman25 Anna;\tab\tab //\'f1\'ee\'e7\'e4\'e0\'b8\'ec \'ee\'e1\'fa\'e5\'ea\'f2 Anna\cf0\kerning1\par
\cf1\kerning0    Anna.setData("Anna",100);\tab //\'e2\'fb\'e7\'fb\'e2\'e0\'e5\'ec \'ec\'e5\'f2\'ee\'e4 \'e8\'e7 setData \'ea\'eb\'e0\'f1\'f1\'e0 Woman25 (\'e2\'ed\'e8\'ec\'e0\'ed\'e8\'e5 \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1) \cf0\kerning1\par
\cf1\kerning0    Anna.getData;\cf0\kerning1\par
\cf1\kerning0    Woman25 Inna;\tab\tab //\'f1\'ee\'e7\'e4\'e0\'b8\'ec \'ee\'e1\'fa\'e5\'ea\'f2 Inna\cf0\kerning1\par
\cf1\kerning0    setData("Inna",50,Inna);\tab //\'e2\'fb\'e7\'fb\'e2\'e0\'e5\'ec \'ec\'e5\'f2\'ee\'e4 setData \'e4\'f0\'f3\'e6\'e5\'f1\'f2\'e2\'e5\'ed\'ed\'ee\'e9 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 (\'e2\'ed\'e8\'ec\'e0\'ed\'e8\'e5 \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1)\cf0\kerning1\par
\cf1\kerning0    getData(Inna);\}\cf0\kerning1\par
\cf1\kerning0\par
\ul\'d0\'e0\'e7\'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'e8\'e5\ulnone :\cf0\kerning1\par
\cf1\kerning0 int i=100;\cf0\kerning1\par
\cf1\kerning0 int main()\{\cf0\kerning1\par
\cf1\kerning0 int i=30;\cf0\kerning1\par
\cf1\kerning0 printf("%d",i);\tab //\'e2\'fb\'e4\'e0\'f1\'f2\'f1\'ff 30\cf0\kerning1\par
\cf1\kerning0 printf("%d",::i);\tab //\'ef\'f0\'ee\'e8\'e7\'ee\'e9\'e4\'b8\'f2 \'f0\'e0\'e7\'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'e8\'e5 \'e8 \'e2\'fb\'e4\'e0\'f1\'f2\'f1\'ff 100\cf0\kerning1\par
\cf1\kerning0 return 0;\}\cf0\kerning1\par
\cf1\kerning0\par
\'ce\'e4\'e8\'ed\'e0\'f0\'ed\'ee\'e5 \'e4\'e2\'ee\'e5\'f2\'ee\'f7\'e8\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff:\cf0\kerning1\par
\cf1\kerning0 1. \'d3\'ea\'e0\'e7\'e0\'ed\'e8\'e5 \'e1\'e0\'e7\'ee\'e2\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'ef\'f0\'e8 \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e8.\cf0\kerning1\par
\cf1\kerning0 2. \'d1\'ef\'e8\'f1\'ee\'ea \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'e2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e5.\cf0\kerning1\par
\cf1\kerning0 3. \'c2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'ff\'f5 \'f2\'e8\'ef\'e0:\cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\li720\sl240\slmult1\cf1\kerning0 struct A\{\cf0\kerning1\par
\cf1\kerning0         unsigned int f1:10;\tab\'e2 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e5 \'c0 \'ef\'e5\'f0\'e2\'fb\'e5 10 \'e1\'e8\'f2 \'ee\'f2\'ed\'ee\'f1\'ff\'f2\'f1\'ff \'ea f1, \'e0 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'e5 20 \'e1\'e8\'f2 \'ea f2\cf0\kerning1\par
\cf1\kerning0         unsigned int f2:20;\} \cf0\kerning1\par
\pard\nowidctlpar\hyphpar0\sl240\slmult1\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 4.\cf0\kerning1\b0\par
\cf1\kerning0 STL - Standart Template Library\cf0\kerning1\par
\cf1\kerning0\ul\par
\'cf\'ee\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'ed\'fb\'e5 \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'fb\ulnone :\cf0\kerning1\par
\cf1\kerning0\'ca\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0 - \'fd\'f2\'ee \'ea\'eb\'e0\'f1\'f1, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ef\'f0\'e5\'e4\'ed\'e0\'e7\'ed\'e0\'f7\'e5\'ed \'e4\'eb\'ff \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2. \'ca\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'fb: list, vector, string, wstring, deque\cf0\kerning1\par
\cf1\kerning0\'ca\'e0\'e6\'e4\'fb\'e9 \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f2 \'e8\'ec\'e5\'e5\'f2 \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'e5 \'f1\'ea\'ee\'f0\'ee\'f1\'f2\'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'e1\'e0\'e7\'ee\'e2\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9:\cf0\kerning1\par
\cf1\kerning0 1. \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\\\'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'e2 \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\cf0\kerning1\par
\cf1\kerning0 2. \'e2\'f1\'f2\'e0\'e2\'e8\'f2\'fc \'f3\'e4\'e0\'eb\'e8\'f2\'fc \'e2 \'f1\'e5\'f0\'e5\'e4\'e8\'ed\'f3\cf0\kerning1\par
\cf1\kerning0 3. \'ef\'ee\'e8\'f1\'ea\cf0\kerning1\par
\cf1\kerning0 4. \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'eb\'fc\'ed\'fb\'e9 \'e4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3, \'ed\'e0 \'ef\'f0\'e8\'ec\'e5\'f0 v[15] = 5;\cf0\kerning1\par
\cf1\kerning0\par
\'c5\'f1\'eb\'e8 \'f7\'e0\'f1\'f2\'ee \'ed\'e0\'e4\'ee \'e2\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'e2 \'f1\'e5\'f0\'e5\'e4\'e8\'ed\'f3 - \'f2\'ee \'e2\'fb\'e1\'e8\'f0\'e0\'e5\'ec list.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'f7\'e0\'f1\'f2\'ee \'ed\'f3\'e6\'e5\'ed \'e4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3 - \'f2\'ee vector.\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'f7\'e0\'f1\'f2\'ee \'ed\'e0\'e4\'ee \'e2\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'e2 \'ed\'e0\'f7\'e0\'eb\'ee \'e8 \'ea\'ee\'ed\'e5\'f6 - \'f2\'ee deque.\cf0\kerning1\par
\cf1\kerning0\par
#include <vector>\cf0\kerning1\par
\cf1\kerning0\'d0\'e0\'e4\'e8 \'f4\'e5\'ed\'f8\'f3\'ff, \'f5\'ee\'f2\'e8\'ec \'f7\'f2\'ee\'e1\'fb \'e2\'f1\'e5 include \'e8\'ec\'e5\'eb\'e8 \'ee\'e4\'e8\'ed \'e8 \'f2\'ee\'f2 \'e6\'e5 \'e2\'e8\'e4, \'f2\'e8\'ef\'e0 #include <...> \'c5\'f1\'eb\'e8 \'f0\'e0\'ed\'fc\'f8\'e5 stdio \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'eb\'e8 \'ea\'e0\'ea #include <stdio.h>, \'f2\'ee \'ec\'ee\'e6\'ed\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc #include <cstdio> - \'e4\'ee\'e1\'e0\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'e1\'f3\'ea\'e2\'e0 'c", \'f2.\'e5. \'e1\'e8\'e1\'eb\'e8\'ee\'f2\'e5\'ea\'e0 \'d1\'e8, \'e0 \'ed\'e5 \'d1++\cf0\kerning1\par
\cf1\kerning0\par
Vector - \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'ec\'e0\'f1\'f1\'e8\'e2 \'e8\'e7 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'e2 \'ed\'e0\'f8\'e5\'ec \'ef\'f0\'e8\'ec\'e5\'f0\'e5 int. \'cc\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'eb\'fe\'e1\'fb\'ec.\cf0\kerning1\par
\cf1\kerning0 std::vector <int> v;\tab //\'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 - \'f8\'e0\'e1\'eb\'ee\'ed\'ed\'fb\'e9 \'ea\'eb\'e0\'f1\'f1\cf0\kerning1\par
\cf1\kerning0 std::vector <int> v(10);\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 \'f1 size=0, capacity=10\cf0\kerning1\par
\cf1\kerning0 std::vector <int> v(10,5);\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0 10 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e5 5\cf0\kerning1\par
\cf1\kerning0 v.push_back(5);\tab\tab //\'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc \'e2 \'ea\'ee\'ed\'e5\'f6 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'f1\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\'ec 5\cf0\kerning1\par
\cf1\kerning0 v.pop_back();\tab\tab //\'f3\'e4\'e0\'eb\'e5\'ed\'e8\'ff \'ef\'ee\'f1\'eb\'e5\'e4\'ed\'e5\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\cf0\kerning1\par
\cf1\kerning0 v.size();\tab\tab\tab //\'ed\'e0\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f1\'e5\'e9\'f7\'e0\'f1 \'ec\'e0\'f1\'f1\'e8\'e2 \'e7\'e0\'ef\'ee\'eb\'ed\'e5\'ed\cf0\kerning1\par
\cf1\kerning0 v.capacity();\tab\tab //\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'e2\'f1\'e5\'e3\'ee \'ec\'ee\'e6\'e5\'f2 \'ec\'e0\'f1\'f1\'e8\'e2 \'ef\'e5\'f0\'e5\'e2\'e0\'f0\'e8\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f1\'e5\'e9\'f7\'e0\'f1 \'e2\'fb\'e4\'e5\'eb\'e5\'ed\'ee \'ef\'e0\'ec\'ff\'f2\'e8\cf0\kerning1\par
\cf1\kerning0 v[0] = 6;\tab\tab\tab //\'e8\'e7\'ec\'e5\'ed\'e8\'f2\'fc \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'fb\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\cf0\kerning1\par
\cf1\kerning0 v.at(0) = 6;\tab\tab //\'f2\'ee\'e6\'e5 \'f1\'e0\'ec\'ee\'e5, \'f7\'f2\'ee \'e8 \'ef\'f0\'e5\'e4\'fb\'e4\'f3\'f9\'e5\'e5, \'f2\'ee\'eb\'fc\'ea\'ee \'e5\'f1\'f2\'fc \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e0 \'ed\'e0 \'e3\'f0\'e0\'ed\'e8\'f6\'fb \'ec\'e0\'f1\'f1\'e8\'e2\'e0\cf0\kerning1\par
\cf1\kerning0 v.resize(100);\tab\tab //"\'ed\'ee\'e2\'fb\'e9" \'ec\'e0\'f1\'f1\'e8\'e2 \'e1\'f3\'e4\'e5\'f2 \'ed\'e0 100 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'c5\'f1\'eb\'e8 \'ed\'e0\'e4\'ee \'e8\'e7\'ec\'e5\'ed\'e8\'f2\'f1\'ff capacity, \'e5\'f1\'eb\'e8 \'ed\'e5 \'ed\'e0\'e4\'ee, \'f2.\'e5. 100 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'e2\'eb\'e0\'e7\'ff\'f2 \'e2 capacity, \'f2\'ee \'ed\'e5\'f2\cf0\kerning1\par
\cf1\kerning0 v.resize(100, MyArray(10));// \'ed\'ee\'e2\'fb\'e9 \'ec\'e0\'f1\'f1\'e8\'e2 \'e8\'e7 100 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f2\'e8\'ef\'e0\\\'ea\'eb\'e0\'f1\'f1\'e0 MyArray \'f1 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e5\'e9 \'ea\'e0\'e6\'e4\'ee\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0, \'e2 \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'e8 \'ee\'f2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'e0 \'ea\'eb\'e0\'f1\'f1\'e0 \'e4\'e5\'f1\'ff\'f2\'ea\'ee\'e9\cf0\kerning1\par
\cf1\kerning0 v.reserve(100);\tab\tab //\'ec\'e5\'ed\'ff\'e5\'f2 \'f2\'ee\'eb\'fc\'ea\'ee capacity\cf0\kerning1\par
\cf1\kerning0 v.clear();\tab\tab //size = 0\cf0\kerning1\par
\cf1\kerning0\par
deque - \'e4\'e2\'f3\'f5\'f1\'e2\'ff\'e7\'ed\'fb\'e9 \'f1\'ef\'e8\'f1\'ee\'ea \'ef\'ee\'e4\'ec\'e0\'f1\'f1\'e8\'e2\'ee\'e2, \'e1\'fb\'f1\'f2\'f0\'e5\'e5 \'f3\'e4\'e0\'eb\'ff\'e5\'f2 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e8\'e7 \'e3\'ee\'eb\'ee\'e2\'fb + \'e7\'e0\'ed\'e8\'ec\'e0\'e5\'f2 \'ec\'e5\'ed\'fc\'f8\'e5 \'ec\'e5\'f1\'f2\'e0, \'f7\'e5\'ec \'e2\'e5\'ea\'f2\'ee\'f0\cf0\kerning1\par
\cf1\kerning0 std::deque<int> d;\cf0\kerning1\par
\cf1\kerning0 d.push_back(5);\tab\tab //\'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc \'e2 \'ea\'ee\'ed\'e5\'f6\cf0\kerning1\par
\cf1\kerning0 d.push_front(3);\tab\tab //\'e4\'ee\'e1\'e0\'e2\'e8\'f2\'fc \'e2 \'ed\'e0\'f7\'e0\'eb\'ee\cf0\kerning1\par
\cf1\kerning0\par
\'c2 STL \'e5\'f1\'f2\'fc \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'f8\'e0\'e1\'eb\'ee\'ed\'ed\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 basic_string\cf0\kerning1\par
\cf1\kerning0\'cf\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'e9 \'ed\'e5 \'f8\'e0\'e1\'eb\'ee\'ed\'ed\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 string - \'fd\'f2\'ee basic_string c \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'ec char\cf0\kerning1\par
\cf1\kerning0\'d2\'ee\'e6\'e5 \'e8 \'ef\'f0\'ee wstaring.\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'fd\'f2\'ee\'ec\'f3 \'ec\'ee\'e6\'ed\'ee \'e4\'e5\'eb\'e0\'f2\'fc \'f2\'e0\'ea: deque <string> a;\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'fb\ulnone :\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc \'ee\'e3\'f0\'ee\'ec\'ed\'fb\'e9 \'ec\'e0\'f1\'f1\'e8\'e2 \'e4\'e0\'ed\'ed\'fb\'f5. \'cc\'fb \'f5\'ee\'f2\'e8\'ec \'ef\'ee \'ed\'e5\'ec\'f3 \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e0\'f2\'fc\'f1\'ff \'ed\'e5 1-2-3-4, \'e0 \'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, 4-3-2-1 \'e8\'eb\'e8 1-3-2-4. \'c4\'eb\'ff \'ee\'e1\'fb\'f7\'ed\'ee\'e3\'ee \'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'ff \'ef\'ee 1-2-3-4, \'e5\'f1\'eb\'e8 \'ec\'fb \'ed\'e0\'f5\'ee\'e4\'e8\'ec\'f1\'ff \'ed\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e5 2, \'f2\'ee getNext() \'e1\'f3\'e4\'e5\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 3. \'c4\'eb\'ff \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'e0 1-3-2-4 getNext() \'e1\'f3\'e4\'e5\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 4. \'ca\'e0\'e6\'e4\'fb\'e9 \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0 ~ \'fd\'f2\'ee \'e1\'e5\'e3\'f3\'ed\'ee\'ea \'ef\'ee "\'ea\'e0\'ea\'e8\'ec-\'f2\'ee \'ee\'e1\'f0\'e0\'e7\'ee\'ec \'ee\'f2\'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'ec \'e4\'e0\'ed\'ed\'fb\'ec", \'ef\'f0\'e8 \'fd\'f2\'ee\'ec \'f1\'e0\'ec \'ec\'e0\'f1\'f1\'e8\'e2 \'ed\'e8\'ea\'e0\'ea \'ed\'e5 \'e8\'e7\'ec\'e5\'ed\'ff\'e5\'ec.\cf0\kerning1\par
\cf1\kerning0\'c2\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'e2 \'f1\'e5\'f0\'e5\'e4\'e8\'ed\'f3 \'e8\'eb\'e8 \'f3\'e4\'e0\'eb\'ff\'f2\'fc \'e8\'e7 \'f1\'e5\'f0\'e5\'e4\'e8\'ed\'fb vector-\'e0, deque \'e8 \'f2.\'e4. \'ea\'e0\'ea\'ee\'e3\'ee-\'ed\'e8\'e1\'f3\'e4\'fc \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'e0.\cf0\kerning1\par
\cf1\kerning0\'ca\'eb\'e0\'f1\'f1 \'e4\'eb\'ff \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'ea \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'f3, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f7\'e5\'f1\'ea\'e8 \'ef\'ee\'f5\'ee\'e6 \'ed\'e0 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8.\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'ed\'e5\'e3\'ee \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'fb \'ee\'ef\'f0\'e5\'e0\'f6\'e8\'e8 ++, --, ->, *\cf0\kerning1\par
\cf1\kerning0\par
\'ca\'e0\'ea \'ef\'f0\'ee\'e9\'f2\'e8 \'ef\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'f3 \'ea\'eb\'e0\'f1\'f1\'e0 list:\cf0\kerning1\par
\cf1\kerning0 std::list <int> l;\cf0\kerning1\par
\cf1\kerning0 std::list <int>::iterator it\tab //\'ea\'e0\'ea\'ee\'e9-\'f2\'ee \'eb\'ee\'e6\'ed\'fb\'e9\cf0\kerning1\par
\cf1\kerning0 for (it=l.begin();it!=l.end();++it)\{\cf0\kerning1\par
\cf1\kerning0    printf("%d",*it);\}\tab //*it \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 int\cf0\kerning1\par
\cf1\kerning0 List - \'e4\'e2\'f3\'f5\'f1\'e2\'ff\'e7\'ed\'fb\'e9 \'f1\'ef\'e8\'f1\'ee\'ea. \'c2\'f1\'b8 \'f5\'ee\'f0\'ee\'f8\'ee, \'ed\'ee \'ed\'e5\'f2 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'eb\'fc\'ed\'ee\'e3\'ee \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3, \'f2.\'e5. \'ed\'e5\'eb\'fc\'e7\'ff \'f1\'e4\'e5\'eb\'e0\'f2\'fc l[3]=10. \'cc\'ee\'e6\'ed\'ee \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'f7\'e5\'f0\'e5\'e7 \'c8\'f2\'e5\'f0\'e0\'f2\'ee\'f0.\cf0\kerning1\par
\cf1\kerning0\par
\ul\'c8\'ed\'e2\'e0\'eb\'e8\'e4\'e0\'f6\'e8\'ff \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2\ulnone  (\'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'ed\'e5 \'f2\'f3\'e4\'e0):\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc \'ec\'e0\'f1\'f1\'e8\'e2 \'e8\'e7 10 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'ea \'ef\'f0\'e8\'ec\'e5\'f0\'f3 vector. \'c2 \'ed\'b8\'ec \'e5\'f1\'f2\'fc 2-\'e8 \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'e0: 1-\'fb\'e9 \'f3\'ea\'e0\'e7\'fb\'e2\'e5\'f2 \'ed\'e0 4-\'fb\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2, 2-\'ee\'e9 \'ed\'e0 8-\'ee\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'ec\'e0\'f1\'f1\'e8\'e2\'e0. \'c4\'e0\'eb\'e5\'e5 \'e4\'e5\'eb\'e0\'e5\'ec push_back, \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'ef\'e5\'f0\'e5\'e2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ef\'e0\'ec\'ff\'f2\'e8, \'e8 \'f2\'e5\'ef\'e5\'f0\'fc \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'fe\'f2 \'e2 \'ef\'f3\'f1\'f2\'ee\'f2\'f3.\cf0\kerning1\par
\cf1\kerning0\'c8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'e8\'ed\'e2\'e0\'eb\'e8\'e4\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'ef\'f0\'e8:\cf0\kerning1\par
\cf1\kerning0 1. \'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ef\'e5\'f0\'e5\'e2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'ff \'ef\'e0\'ec\'ff\'f2\'e8 - \'c2\'d1\'c5 \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'e8\'ed\'e2\'e0\'eb\'e8\'e4\'e8\'f0\'f3\'fe\'f2\'f1\'ff\cf0\kerning1\par
\cf1\kerning0 2. \'cf\'f0\'e8 \'e2\'f1\'f2\'e0\'e2\'ea\'e5\\\'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e8 \'e8\'ed\'e2\'e0\'eb\'e8\'e4\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ed\'e0\'f5\'ee\'e4\'ff\'f2\'f1\'ff \'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5 \'ef\'f0\'e0\'e2\'e5\'e5 \'ec\'e5\'f1\'f2\'e0 \'e2\'f1\'f2\'e0\'e2\'ea\'e8. \'dd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e6 \'f1\'ec\'e5\'f9\'e0\'fe\'f2\'f1\'ff \'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5.\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b91\i0 :\cf0\kerning1\par
\cf1\kerning0 int p=10; x=p++; x - \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e2\'ed\'ee 10, \'f0 - \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e2\'ed\'ee 11\cf0\kerning1\par
\cf1\kerning0 p++()\{\cf0\kerning1\par
\cf1\kerning0    temp=p;\cf0\kerning1\par
\cf1\kerning0    p=p+1;\cf0\kerning1\par
\cf1\kerning0    return temp;\}\cf0\kerning1\par
\cf1\kerning0 int p=10; x=++p; x - \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e2\'ed\'ee 11, \'f0 - \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e2\'ed\'ee 11\cf0\kerning1\par
\cf1\kerning0 ++p()\{\cf0\kerning1\par
\cf1\kerning0    p=p+1;\cf0\kerning1\par
\cf1\kerning0    return p;\}\tab //\'ee\'f2\'eb\'e8\'f7\'e0\'e5\'f2\'f1\'ff \'ee\'f2 p++ \'ee\'e4\'ed\'e8\'ec \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5\'ec !\cf0\kerning1\par
\cf1\kerning0\par
\i\'cf\'f0\'e8\'ec\'e5\'f0 \'b92\i0 :\cf0\kerning1\par
\cf1\kerning0 void sw(char* p,...)\tab //\'f4\'f3\'ed\'ea\'f6\'e8\'ff \'ec\'ee\'e6\'e5\'f2 \'ef\'f0\'e8\'ed\'ff\'f2\'fc \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'eb\'fc\'ed\'ee\'e5 \'f7\'e8\'f1\'eb\'ee \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'e2\cf0\kerning1\par
\cf1\kerning0\{ while(*p) \{ std::cout << *(p++); \}; \}//\'ef\'ee\'ea\'e0 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e2 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e5 p \kerning1\u8800?\kerning0  0, \'e1\'f3\'e4\'e5\'f2 \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'f6\'e8\'ea\'eb\cf0\kerning1\par
\cf1\kerning0 int main() \{ sw("asdf0");\}\tab //\'f4\'f3\'ed\'ea\'f6\'e8\'ff sw \'e2 \'ea\'e0\'f7\'e5\'f1\'f2\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0: "asdf0" - \'fd\'f2\'ee const char*\cf0\kerning1\par
\cf1\kerning0\par
\par
\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 5.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'c0\'f1\'f1\'ee\'f6\'e8\'e0\'f2\'e8\'e2\'ed\'fb\'e5 \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'fb\ulnone .\cf0\kerning1\par
\cf1\kerning0 SET - \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0 \'f3\'ed\'e8\'ea\'e0\'eb\'fc\'ed\'fb\'f5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'d1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e0: \'e4\'e2\'ee\'e8\'f7\'ed\'ee\'e5 \'e4\'e5\'f0\'e5\'e2\'ee \'ef\'ee\'e8\'f1\'ea\'e0 \cf0{\field{\*\fldinst{HYPERLINK "https://ru.wikipedia.org/wiki/\'e4\'e2\'ee\'e8\'f7\'ed\'ee\'e5_\'e4\'e5\'f0\'e5\'e2\'ee_\'ef\'ee\'e8\'f1\'ea\'e0"}}{\fldrslt{\ul\cf2 https://ru.wikipedia.org/wiki/\'e4\'e2\'ee\'e8\'f7\'ed\'ee\'e5_\'e4\'e5\'f0\'e5\'e2\'ee_\'ef\'ee\'e8\'f1\'ea\'e0}}}\kerning1\f0\fs22\par
\cf1\kerning0 std::set<int> s;\cf0\kerning1\par
\cf1\kerning0 s.insert(10);\cf0\kerning1\par
\cf1\kerning0 s.insert(20);\cf0\kerning1\par
\cf1\kerning0 s.insert(10);\tab //\'f3\'e6\'e5 \'ed\'e5 \'e7\'e0\'ef\'e8\'f8\'e5\'f2\'f1\'ff\cf0\kerning1\par
\cf1\kerning0\'d1\'ea\'ee\'f0\'ee\'f1\'f2\'fc \'ef\'ee\'e8\'f1\'ea\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'ee\'f1\'f3\'f9\'e5\'f1\'f2\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'e7\'e0 \'ce(log(n)).\cf0\kerning1\par
\cf1\kerning0 MULTISET - \'f2\'ee\'e6\'e5 \'f1\'e0\'ec\'ee\'e5, \'f7\'f2\'ee \'e8 set, \'f2\'ee\'eb\'fc\'ea\'ee \'f2\'f3\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ec\'ee\'e6\'e5\'f2 \'ef\'ee\'e2\'f2\'ee\'f0\'ff\'f2\'fc\'f1\'ff\cf0\kerning1\par
\cf1\kerning0 MAP - \'e0\'f1\'f1\'ee\'f6\'e8\'e0\'f2\'e8\'e2\'ed\'fb\'e9 \'ec\'e0\'f1\'f1\'e8\'e2 \'e8\'eb\'e8 \'f1\'eb\'ee\'e2\'e0\'f0\'fc. \'d2\'ee\'e6\'e5 \'e4\'e2\'ee\'e8\'f7\'ed\'ee\'e5 \'e4\'e5\'f0\'e5\'e2\'ee, \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'f3\'e7\'eb\'e5 \'f5\'f0\'e0\'ed\'e8\'f2\'f1\'ff (\'ea\'eb\'fe\'f7, \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5), \'e0 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e0 \'e4\'e5\'f0\'e5\'e2\'e0 \'f1\'f2\'f0\'ee\'e8\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'ef\'ee \'ea\'eb\'fe\'f7\'f3.\cf0\kerning1\par
\cf1\kerning0 MULTIMAP - \cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 6.\cf0\kerning1\b0\par
\cf1\kerning0\ul XML\ulnone .\cf0\kerning1\par
\cf1\kerning0 1. \'ca\'ee\'e4\'e8\'f0\'ee\'e2\'ea\'e0\cf0\kerning1\par
\cf1\kerning0 2. \'d1\'e8\'ec\'e2\'ee\'eb\'fb \'f0\'e0\'e7\'e4\'e5\'eb\'e8\'f2\'e5\'eb\'e8 (\'ef\'f0\'ee\'e1\'e5\'eb, TAB, \'ef\'e5\'f0\'e5\'e2\'ee\'e4 \'f1\'f2\'f0\'ee\'ea\'e8 - \'e2 \'ea\'e0\'e6\'e4\'ee\'e9 \'ce\'d1 \'f1\'e2\'ee\'e9 \'f1\'e8\'ec\'e2\'ee\'eb)\cf0\kerning1\par
\cf1\kerning0 3. \'d4\'ee\'f0\'ec\'e0\'f2 \'e2\'e5\'f9\'e5\'f1\'f2\'e2\'e5\'ed\'ed\'fb\'f5 \'f7\'e8\'f1\'e5\'eb (\'f2\'ee\'f7\'ea\'e0, \'e7\'e0\'ef\'ff\'f2\'e0\'ff, \'fd\'ea\'f1\'ef\'ee\'ed\'e5\'ed\'f6\'e8\'e0\'eb\'fc\'ed\'fb\'e9 \'f4\'ee\'f0\'ec\'e0\'f2)\cf0\kerning1\par
\cf1\kerning0 4. \'ce\'f8\'e8\'e1\'ea\'e8\cf0\kerning1\par
\cf1\kerning0\'c2\'f1\'e5\'e3\'e4\'e0 \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff \'f1 <?xml version="1.0" encoding="UTF-8"?> - \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2 \'ea\'ee\'e4\'e8\'f0\'ee\'e2\'ea\'f3\cf0\kerning1\par
\cf1\kerning0\'d2\'e5\'e3\'e8 \'e4\'ee\'eb\'e6\'ed\'fb \'ee\'f2\'ea\'f0\'fb\'e2\'e0\'f2\'fc\'f1\'ff \'e8 \'e7\'e0\'ea\'f0\'fb\'e2\'e0\'f2\'fc\'f1\'ff: <point number="1"> ... </point> \'e8\'eb\'e8 <point number="1"\b /\b0 >\cf0\kerning1\par
\cf1\kerning0\'cd\'e5 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'f2\'e0\'ea\'ee\'e3\'ee: <b> <i> </b> </i>\cf0\kerning1\par
\cf1\kerning0\'d1\'e8\'ec\'e2\'ee\'eb < \'e7\'e0\'ec\'e5\'ed\'ff\'e5\'f2\'f1\'ff &lt, > \'e7\'e0\'ec\'e5\'ed\'ff\'e5\'f2\'f1\'ff &gt \'e8 \'f7\'f2\'ee-\'f2\'ee \'f2\'e0\'ec \'e5\'f9\'b8.\cf0\kerning1\par
\cf1\kerning0\'cf\'ee\'ed\'ff\'f2\'e8\'e5 parser - \'e4\'e2\'e8\'e6\'ee\'ea, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'f0\'e0\'e7\'e1\'e8\'f0\'e0\'e5\'f2 \'e2\'f1\'b8 \'f7\'f2\'ee \'ed\'e0\'ef\'e8\'f1\'e0\'ed\'ee \'e2 XML.\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 7.\cf0\kerning1\b0\par
\cf1\kerning0\ul\'d8\'e0\'e1\'eb\'ee\'ed\'fb\ulnone :\cf0\kerning1\par
\cf1\kerning0\'d7\'f2\'ee \'ec\'ee\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'f2\'fc \'e2 \'f8\'e0\'e1\'eb\'ee\'ed\'fb:\cf0\kerning1\par
\cf1\kerning0 1. \'d2\'e8\'ef - std::vector <int>\cf0\kerning1\par
\cf1\kerning0 2. \'d6\'e5\'eb\'ee\'e5 \'f7\'e8\'f1\'eb\'ee:\cf0\kerning1\par
\cf1\kerning0    template <size_t size>\cf0\kerning1\par
\cf1\kerning0    class BitSet\{\cf0\kerning1\par
\cf1\kerning0       char m[size];\};\cf0\kerning1\par
\cf1\kerning0    BitSet <16> bit;\tab //\'f1\'ee\'e7\'e4\'e0\'b8\'f2 \'ec\'e0\'f1\'f1\'e8\'e2 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'b8\'ed\'ed\'ee\'e3\'ee \'f0\'e0\'e7\'ec\'e5\'f0\'e0\cf0\kerning1\par
\cf1\kerning0 3. \'d3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc\\\'f1\'f1\'fb\'eb\'ea\'e0 \'ed\'e0 \'e3\'eb\'ee\'e1\'e0\'eb\'fc\'ed\'f3\'fe \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe - \'fd\'ea\'e7\'ee\'f2\'e8\'ea\'e0 !\cf0\kerning1\par
\cf1\kerning0 4. \'cd\'e5\'e8\'f1\'f2\'e0\'ed\'f6\'e8\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'f8\'e0\'e1\'eb\'ee\'ed:\cf0\kerning1\par
\cf1\kerning0    template <typename T,template <typename V>>\cf0\kerning1\par
\cf1\kerning0    V<T> create_container (size_t s)\{\cf0\kerning1\par
\cf1\kerning0       V<T> t;\cf0\kerning1\par
\cf1\kerning0       return t;\}\cf0\kerning1\par
\cf1\kerning0\par
\'d1\'ef\'e5\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'f8\'e0\'e1\'eb\'ee\'ed\'e0 \'e4\'eb\'ff \'ea\'eb\'e0\'f1\'f1\'ee\'e2:\cf0\kerning1\par
\cf1\kerning0 template <typename T>\cf0\kerning1\par
\cf1\kerning0    class MyArray\{...\}\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'f1\'ef\'e5\'f6\'e8\'e0\'eb\'fc\'ed\'ee \'e4\'eb\'ff \'f2\'e8\'ef\'e0 int \'f5\'ee\'f7\'f3 \'ed\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'f7\'f2\'ee-\'f2\'ee \'e4\'f0\'f3\'e3\'ee\'e5, \'f2.\'e5. \'e4\'eb\'ff \'e2\'fb\'e7\'ee\'e2\'e0 MyArray <int> my \'e1\'f3\'e4\'e5\'f2\cf0\kerning1\par
\cf1\kerning0 template <>\cf0\kerning1\par
\cf1\kerning0    class MyArray<int>\{...\}\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe:\cf0\kerning1\par
\cf1\kerning0 template <typename T=string>\cf0\kerning1\par
\cf1\kerning0    class V\{T name;\};\cf0\kerning1\par
\cf1\kerning0 V<> obj;\tab //\'e5\'f1\'eb\'e8 \'f2\'e0\'ea \'f8\'e0\'e1\'eb\'ee\'ed \'e8\'ed\'f1\'f2\'e0\'ed\'f6\'e8\'e8\'f0\'ee\'e2\'e0\'f2\'fc, \'f2\'ee \'f3 T \'e1\'f3\'e4\'e5\'f2 \'f2\'e8\'ef string\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 8.\cf0\kerning1\b0\par
\cf1\kerning0\'cf\'f0\'ee\'e4\'ee\'eb\'e6\'e5\'ed\'e8\'e5 \'cb\'e5\'ea\'f6\'e8\'e8 3 \'ef\'f0\'ee \'e8\'f1\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'ff: try, catch, throw.\cf0\kerning1\par
\cf1\kerning0\'cf\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e2 \'e2 \'d1++:\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'f7\'e5\'e3\'ee \'e2\'e2\'e5\'eb\'e8 \'ed\'ee\'e2\'fb\'e5 \'e8\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e8 - \'e4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'e2 \'ea\'ee\'e4\'e5 \'ff\'e2\'ed\'ee \'e1\'fb\'eb\'ee \'e2\'e8\'e4\'ed\'ee, \'e3\'e4\'e5 \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'e0: const_cast, static_cast, reinterpret_cast, dynamic_cast. \'c8\'eb\'e8 grep-\'ee\'ec \'ef\'ee \'ea\'ee\'e4\'f3 \'e8\'f9\'e5\'ec "_cast"\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'eb\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'ef\'f0\'e8\'ec\'e8\'f2\'e8\'e2\'ed\'fb\'e5 \'f2\'e8\'ef\'fb, \'f2\'ee \'eb\'f3\'f7\'f8\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ee\'e1\'fb\'f7\'ed\'fb\'e9 \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1 \'d1++, \'f2.\'e5 (...). \'c5\'f1\'eb\'e8 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8, \'f2\'ee \'eb\'f3\'f7\'f8\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc _cast.\cf0\kerning1\par
\cf1\kerning0 1. const_cast - \'e4\'ee\'e1\'fb\'e2\'e8\'f2\'fc \'e8\'eb\'e8 \'f3\'e1\'f0\'e0\'f2\'fc const\cf0\kerning1\par
\cf1\kerning0\tab int i=5;\tab\tab //\'e1\'fb\'eb\'ee \'f1\'ed\'e0\'f7\'e0\'eb\'e0 \'ed\'e5 \'ea\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'ed\'ee\'e5\cf0\kerning1\par
\cf1\kerning0\tab const int *pi=&i;\tab //\'ef\'ee\'f2\'ee\'ec \'ef\'ee\'ff\'e2\'e8\'eb\'e0\'f1\'fc \'ea\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'ed\'e0\'ff \'f1\'f1\'fb\'eb\'ea\'e0\cf0\kerning1\par
\cf1\kerning0\tab int *j=const_cast <int*> (pi);\cf0\kerning1\par
\cf1\kerning0\tab *j=6;\cf0\kerning1\par
\cf1\kerning0\par
\tab const char *str = "Hello";\tab //\'e1\'fb\'eb\'ee \'e8\'e7\'ed\'e0\'f7\'e0\'eb\'fc\'ed\'ee \'ea\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'ed\'ee\'e5\cf0\kerning1\par
\cf1\kerning0\tab char *s1=const_cast<char*>str;\cf0\kerning1\par
\cf1\kerning0 2. reinterpret_cast - \'ef\'f0\'e8\'e2\'ee\'e4\'e8\'f2\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'e8 \'f0\'e0\'e7\'ed\'fb\'f5 \'f2\'e8\'ef\'ee\'e2 \'e8\'eb\'e8 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'e2 \'f7\'e8\'f1\'eb\'ee \'e8\'eb\'e8 \'f7\'e8\'f1\'eb\'ee \'e2 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc - \'f1\'ef\'e5\'f6\'e8\'f4\'e8\'f7\'e5\'f1\'ea\'e0\'ff \'e2\'e5\'f9\'fc.\cf0\kerning1\par
\cf1\kerning0 3. static_cast - \'e7\'ed\'e0\'e5\'f2 \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e5 \'e8 \'ef\'ee \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'fe \'ef\'f0\'ee\'e2\'e5\'f0\'e8\'f2\'fc \'e2\'f1\'b8 \'eb\'e8 \'f5\'ee\'f0\'ee\'f8\'ee. \'cf\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'f2\'e8\'ef\'ee\'e0 \'ee\'f2 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'ea \'e1\'e0\'e7\'ee\'e2\'ee\'ec\'f3. \'c5\'f1\'eb\'e8 \'ea\'eb\'e0\'f1\'f1\'fb \'ed\'e5 \'f1\'e2\'ff\'e7\'e0\'ed\'fb \'ee\'f2\'ed\'ee\'f8\'e5\'ed\'e8\'e5\'ec \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'e8 \'ef\'ee\'f2\'ee\'ec\'ee\'ea, \'f2\'ee \'ed\'e5 \'f1\'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'f3\'e5\'f2\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0 4. dynamic_cast - \'e5\'f1\'eb\'e8 \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e8 \'e2 \'ef\'f0\'e5\'e4\'fb\'e4\'f3\'f9\'e8\'f5 \'e2\'e5\'f9\'e0\'f5 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'eb\'e8\'f1\'fc \'ef\'f0\'e8 \'ea\'ee\'ec\'ef\'e5\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e8, \'f2\'ee \'fd\'f2\'ee\'f2 \'ef\'f0\'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e8. \'c5\'f1\'f2\'fc \'ee\'e3\'f0\'e0\'ed\'e8\'f7\'e5\'ed\'e8\'ff - \'ed\'f3\'e6\'ed\'e0 \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff. - \'f2\'ee\'e6\'e5 \'f1\'ef\'e5\'f6\'e8\'f4\'e8\'f7\'ed\'e0\'ff \'e2\'e5\'f9\'fc.\cf0\kerning1\par
\cf1\kerning0\'c4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb dynamic_cast \'e7\'e0\'f0\'e0\'e1\'ee\'f2\'e0\'eb, \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec RTTI (Run-Time Type Identification):\cf0\kerning1\par
\cf1\kerning0 #include <typrinfo>\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 9.\cf0\kerning1\b0\par
\cf1\kerning0\ul STL Input\\Output\ulnone :\cf0\kerning1\par
\cf1\kerning0 1. \'dd\'ea\'f0\'e0\'ed, \'ea\'eb\'e0\'e2\'e8\'e0\'f2\'f3\'f0\'e0, \'f4\'e0\'e9\'eb\'fb.\cf0\kerning1\par
\cf1\kerning0 2. \'ce\'f8\'e8\'e1\'ea\'e8.\cf0\kerning1\par
\cf1\kerning0 3. \'d1\'ee\'e1\'f1\'f2\'e2\'e5\'ed\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'fb.\cf0\kerning1\par
\cf1\kerning0 #include <iostream>\cf0\kerning1\par
\cf1\kerning0 std::cin>>a>>d;\cf0\kerning1\par
\cf1\kerning0 std::cout<<a<<" "<<d;\cf0\kerning1\par
\cf1\kerning0 std::cerr<<std::endl; - cerr \'ed\'e5 \'e1\'f3\'f4\'e5\'f0\'e8\'e7\'e8\'f0\'f3\'e5\'f2, \'f1\'f0\'e0\'e7\'f3 \'e2\'fb\'e2\'ee\'e4\'e8\'f2 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed, \'e5\'f1\'eb\'e8 \'e2\'ee\'e7\'ed\'e8\'ea\'eb\'e0 \'ee\'f8\'e8\'e1\'ea\'e0 \'f1 \'f7\'e5\'ec-\'f2\'ee, \'f2\'ee \'ef\'f0\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e8 \'e1\'f3\'f4\'e5\'f0\'e0 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'e5 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'e8 \'ed\'e5 \'f3\'f1\'ef\'e5\'f2\'fc \'ef\'ee\'ff\'e2\'e8\'f2\'fc\'f1\'ff.\cf0\kerning1\par
\cf1\kerning0\tab\tab std::ios\tab\tab\tab //\'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'ef\'ee\'f2\'ee\'ea\'e0 \'e2\'e2\'ee\'e4\'e0/\'e2\'fb\'e2\'ee\'e4\'e0\cf0\kerning1\par
\cf1\kerning0\tab\tab |\tab |\cf0\kerning1\par
\cf1\kerning0\tab std::istream\tab std::ostream\tab //i - input, \'ed\'e0\'f1\'eb\'e5\'e4\'f3\'fe\'f2\'f1\'ff \'ef\'ee\'f2\'ee\'ea\'e8, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'f3\'ec\'e5\'fe\'f2 \'f7\'e8\'f2\'e0\'f2\'fc; o-output, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'f3\'ec\'e5\'fe\'f2 \'ef\'e8\'f1\'e0\'f2\'fc\cf0\kerning1\par
\cf1\kerning0\tab |\tab |\tab |\tab |\tab\cf0\kerning1\par
\cf1\kerning0 std::ifstream\tab std::iostream\tab std::ofstream\tab //if-input file - \'f7\'f2\'e5\'ed\'e8\'e5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0; of-output file - \'e7\'e0\'ef\'e8\'f1\'fc \'e2 \'f4\'e0\'e9\'eb; iostream - \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'e8 \'e4\'eb\'ff \'f7\'f2\'e5\'ed\'e8\'ff \'e8 \'e4\'eb\'ff \'e7\'e0\'ef\'e8\'f1\'e8\cf0\kerning1\par
\cf1\kerning0\tab\tab |\tab |\cf0\kerning1\par
\cf1\kerning0\tab std::fstream\tab std::stringstream\tab //string - \'e0\'ed\'e0\'eb\'ee\'e3 \'e2 \'d1\'c8 sscanf \'f7\'f2\'ee-\'f2\'ee \'e4\'e5\'eb\'e0\'e5\'f2 \'e2 \'f1\'f2\'f0\'ee\'f7\'ea\'f3; f-file \'e7\'e0\'ef\'e8\'f1\'fc \'e8 \'f7\'f2\'e5\'ed\'e8\'e5 \'e2 \'f4\'e0\'e9\'eb\cf0\kerning1\par
\cf1\kerning0\par
\'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'e4\'eb\'ff \'ef\'ee\'f2\'ee\'ea\'ee\'e2: >>, <<, char get(), put(char) - \'ef\'ee\'f1\'eb\'e5\'e4\'ed\'e8\'e5 2-\'e5 \'e0\'ed\'e0\'eb\'ee\'e3\'e8 read \'e8 write \'e4\'ee\'f1\'ec\'ee\'f2\'f0\'e5\'eb \'e4\'ee 25 \'ec\'e8\'ed.\cf0\kerning1\par
\cf1\kerning0\par
\b\'cb\'e5\'ea\'f6\'e8\'ff 10.\cf0\kerning1\b0\par
\cf1\kerning0 STL \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'e7 \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'fb (vector, list \'e8 \'f2.\'e4.), \'e2\'e2\'ee\'e4\\\'e2\'fb\'e2\'ee\'e4 \'e8 \'e0\'eb\'e3\'ee\'f0\'e8\'f2\'ec\'fb\cf0\kerning1\par
\cf1\kerning0\'c5\'f1\'f2\'fc \'ea\'eb\'e0\'f1\'f1\'fb, \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ea\'ee\'f2\'ee\'f0\'fb\'f5 \'e4\'ee\'eb\'e6\'ed\'fb \'e1\'fb\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'ee\'e4\'ed\'ee\'ec \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0\'e5: log-\'e5\'f0\'fb, \'ed\'e0\'f1\'f2\'f0\'ee\'e9\'ea\'e8. \'ca\'eb\'e0\'f1\'f1 \'f3 \'ea\'ee\'f2\'ee\'f0\'ee\'e3\'ee \'ec\'ee\'e6\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'ee\'e4\'e8\'ed \'ee\'e1\'fa\'e5\'ea\'f2 - singleton\cf0\kerning1\par
\cf1\kerning0 class Singleton\{\cf0\kerning1\par
\cf1\kerning0 private:\cf0\kerning1\par
\cf1\kerning0    static logger l;\cf0\kerning1\par
\cf1\kerning0    Singleton();\tab\tab //\'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f2\'ee\'f0\'fb \'e7\'e0\'e3\'ee\'ed\'ff\'e5\'ec \'e2 private\cf0\kerning1\par
\cf1\kerning0    Singleton(const Singleton&);\cf0\kerning1\par
\cf1\kerning0    Singleton operator=(...);\cf0\kerning1\par
\cf1\kerning0 public:\cf0\kerning1\par
\cf1\kerning0    Logger\cf0\kerning1\par
\cf1\kerning0\par
\'c0\'eb\'e3\'ee\'f0\'e8\'f2\'ec\'fb:\cf0\kerning1\par
\cf1\kerning0 #include <algorithms> //\'e2\'f1\'e5 \'f2\'f3\'f2 ~100 \'e0\'eb\'e3\'ee\'f0\'e8\'f2\'ec\'ee\'e2. \'d5\'ee\'f0\'ee\'f8\'e8\'e9 \'f1\'e0\'e9\'f2 \'ef\'ee STL: \cf0{\field{\*\fldinst{HYPERLINK "http://cplusplus.com"}}{\fldrslt{\ul\cf2 http://cplusplus.com}}}\kerning1\f0\fs22\par
\cf1\kerning0 1. \'cc\'e8\'ea\'f0\'ee\'e0\'eb\'e3\'ee\'f0\'e8\'f2\'ec\'fb:\cf0\kerning1\par
\cf1\kerning0\tab swap (T& a, T& b) - \'ec\'e5\'ed\'ff\'e5\'f2 \'ec\'e5\'f1\'f2\'e0\'ec\'e8 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb\cf0\kerning1\par
\cf1\kerning0\tab iter_swap (T& a, T& b) - \'ec\'e5\'ed\'ff\'e5\'f2 \'ec\'e5\'f1\'f2\'e0\'ec\'e8 \'e4\'e2\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0, \'ed\'e0 \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'fe\'f2 \'e4\'e2\'e0 \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'e0\cf0\kerning1\par
\cf1\kerning0\tab max (const T& a, const T& b) - \'ec\'e0\'ea\'f1\'e8\'ec\'e0\'eb\'fc\'ed\'ee\'e5 \'f1\'f0\'e5\'e4\'e8...\cf0\kerning1\par
\cf1\kerning0\tab min (const T& a, const T& b) - \'ec\'e8\'ed\'e8\'ec\'e0\'eb\'fc\'ed\'ee\'e5 \'f1\'f0\'e5\'e4\'e8\cf0\kerning1\par
\cf1\kerning0\tab\'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0 2. \'cd\'e5\'ec\'ee\'e4\'e8\'f4\'e8\'f6\'e8\'f0\'f3\'fe\'f9\'e8\'e5:\cf0\kerning1\par
\cf1\kerning0\tab find (It p, It q, const T& a) - \'e8\'f9\'e5\'f2\'f1\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2 a, \'ec\'e5\'e6\'e4\'f3 \'e8\'f2\'e5\'f0\'e0\'f2\'ee\'f0\'e0\'ec\'e8 p \'e8 q\cf0\kerning1\par
\cf1\kerning0\tab\'e8 \'f2.\'e4.\cf0\kerning1\par
\cf1\kerning0\par
\b enum\b0  A \{two=2, three, four\}\tab\tab\'ef\'ee default \'ef\'e5\'f0\'e2\'ee\'e9 \'ef\'e5\'f0\'e5\'f7\'e8\'f1\'eb\'ff\'e5\'ec\'ee\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 0, \'e2\'f2\'ee\'f0\'ee\'e9 =1 \'e8 \'f2.\'e4. \'cc\'fb \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'eb\'e8 - \'ef\'e5\'f0\'e2\'ee\'e9 =2.\cf0\kerning1\par
\cf1\kerning0 printf("%d",four)\tab\tab\tab\tab\'e2\'fb\'e4\'e0\'f1\'f2 4\cf0\kerning1\par
\cf1\kerning0\par
enum A \{zero, one, two\}\cf0\kerning1\par
\cf1\kerning0 enum A x = one;\cf0\kerning1\par
\cf1\kerning0 printf("%d",x)\tab\tab\tab\tab\'e2\'fb\'e4\'e0\'f1\'f2 1\cf0\kerning1\par
\cf1\kerning0\par
\ul\'ca\'eb\'fe\'f7\'e5\'e2\'fb\'e5 \'f1\'eb\'ee\'e2\'e0 \'d1++\ulnone :\cf0\kerning1\par
\cf1\kerning0 asm\tab\tab else\tab\tab new\tab\tab\tab this\cf0\kerning1\par
\cf1\kerning0 auto\tab\tab enum\tab\tab operator\tab\tab throw\cf0\kerning1\par
\cf1\kerning0 bool\tab\tab explicit\tab private\tab\tab true\cf0\kerning1\par
\cf1\kerning0 break\tab\tab export\tab protected\tab\tab try\cf0\kerning1\par
\cf1\kerning0 case\tab\tab extern\tab public\tab\tab typedef\cf0\kerning1\par
\cf1\kerning0 catch\tab\tab false\tab\tab register\tab\tab typeid\cf0\kerning1\par
\cf1\kerning0 char\tab\tab float\tab\tab reinterpret_cast\tab typename\cf0\kerning1\par
\cf1\kerning0 class\tab\tab for\tab\tab return\tab\tab union\cf0\kerning1\par
\cf1\kerning0 const\tab\tab friend\tab short\tab\tab\tab unsigned\cf0\kerning1\par
\cf1\kerning0 const_cast\tab goto\tab\tab signed\tab\tab using\cf0\kerning1\par
\cf1\kerning0 continue\tab if\tab\tab sizeof\tab\tab virtual\cf0\kerning1\par
\cf1\kerning0 default\tab inline\tab static\tab\tab void\cf0\kerning1\par
\cf1\kerning0 delete\tab int\tab\tab static_cast\tab\tab volatile\cf0\kerning1\par
\cf1\kerning0 do\tab\tab long\tab\tab struct\tab\tab wchar_t\cf0\kerning1\par
\cf1\kerning0 double\tab mutable\tab switch\tab\tab while\cf0\kerning1\par
\cf1\kerning0 dynamic_cast\tab\tab namespace\tab\tab template\cf0\kerning1\par
\cf1\kerning0\par
and\tab\tab bitor\tab\tab not_eq\tab xor\cf0\kerning1\par
\cf1\kerning0 and_eq\tab compl\tab\tab or\tab\tab xor_eq\cf0\kerning1\par
\cf1\kerning0 bitand\tab not\tab\tab or_eq\cf0\kerning1\par
\cf1\kerning0\par
\par
\ul ANSI \'d1\'e8\cf0\kerning1\ulnone\par
\cf4\kerning0\b bool\cf1\b0  \'e2 \'d1\'e8 \'ed\'e5\'f2 !!\cf0\kerning1\par
\cf1\kerning0\par
auto\tab\tab double\tab int\tab\tab struct\cf0\kerning1\par
\cf1\kerning0 break\tab\tab else\tab\tab long\tab\tab switch\cf0\kerning1\par
\cf1\kerning0 case\tab\tab enum\tab\tab register\tab typedef\cf0\kerning1\par
\cf1\kerning0 char\tab\tab extern\tab return\tab union\cf0\kerning1\par
\cf1\kerning0 const\tab\tab float\tab\tab short\tab\tab unsigned\cf0\kerning1\par
\cf1\kerning0 continue\tab for\tab\tab signed\tab void\cf0\kerning1\par
\cf1\kerning0 default\tab goto\tab\tab sizeof\tab volatile\cf0\kerning1\par
\cf1\kerning0 do\tab\tab if\tab\tab static\tab while\cf0\kerning1\par
\cf1\kerning0\par
#define\tab #if\tab\tab #line\tab\tab #else\tab\tab #ifndef\tab #pragma\cf0\kerning1\par
\cf1\kerning0 #elif\tab\tab #ifdef\tab #undef\tab #endif\tab #include\cf0\kerning1\par
\cf1\kerning0\par
\b default\b0  - \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e2 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e8 switch/case\cf0\kerning1\par
\cf1\kerning0\b union\b0  - \'e0\'ed\'e0\'eb\'ee\'e3 struct \'f2\'ee\'eb\'fc\'ea\'ee \'f1 \'ef\'f0\'e5\'ec\'f3\'e4\'f0\'ee\'f1\'f2\'ff\'ec\'e8. sizeof union \{int, float, char[20]\} = sizeof \'f1\'e0\'ec\'ee\'e3\'ee \'e1\'ee\'eb\'fc\'f8\'ee\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 = sizeof char[20] = 20 \'e1\'e0\'e9\'f2.\cf0\kerning1\par
\cf1\kerning0\b volatile\b0  \'ed\'e5 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'f3 \'e4\'e5\'eb\'e0\'f2\'fc \'ee\'ef\'f2\'e8\'ec\'e8\'e7\'e0\'f6\'e8\'fe\cf0\kerning1\par
\cf1\kerning0\'cf\'f0\'e8\'ec\'e5\'f0 \'b91.\cf0\kerning1\par
\cf1\kerning0\tab int *s = (int *) 0x1000\tab\tab\'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'e5\'ec s \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 0\'f51000\cf0\kerning1\par
\cf1\kerning0\tab while (*s == 0)\{\}\tab\tab\tab\'f6\'e8\'ea\'eb \'e7\'e0\'ef\'f0\'e0\'f8\'e8\'e2\'e0\'e5\'f2 \'ff\'f7\'e5\'e9\'ea\'f3 \'ef\'e0\'ec\'ff\'f2\'e8 \'f1 \'e0\'e4\'f0\'e5\'f1\'ee\'ec 0\'f51000\cf0\kerning1\par
\cf1\kerning0\'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ed\'e5 \'e4\'ee\'e4\'f3\'ec\'e0\'e5\'f2\'f1\'ff, \'f7\'f2\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'ff\'f7\'e5\'e9\'ea\'e8 \'ec\'ee\'e6\'e5\'f2 \'e8\'e7\'ec\'e5\'ed\'ff\'f2\'fc\'f1\'ff \'e2 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e5 \'f0\'e0\'e1\'ee\'f2\'fb, \'ef\'ee\'fd\'f2\'ee\'ec\'f3 \'ee\'ef\'f2\'e8\'ec\'e8\'e7\'e8\'f0\'f3\'e5\'f2 \'e4\'ee\cf0\kerning1\par
\cf1\kerning0\tab mov ptr, #0x1000\cf0\kerning1\par
\cf1\kerning0\tab mov a, @ptr\cf0\kerning1\par
\cf1\kerning0 loop:\cf0\kerning1\par
\cf1\kerning0\tab bz loop\cf0\kerning1\par
\cf1\kerning0\par
\'c5\'f1\'eb\'e8 \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'f2\'e0\'ea\cf0\kerning1\par
\cf1\kerning0\tab int volatile *s = (int volatile *) 0x1000\cf0\kerning1\par
\cf1\kerning0\tab while (*s == 0)\{\}\cf0\kerning1\par
\cf1\kerning0\'f2\'ee \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0 \'ed\'e8\'f7\'e5\'e3\'ee \'ee\'ef\'f2\'e8\'ec\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'ed\'e5 \'e1\'f3\'e4\'e5\'f2. \'cd\'e0\'e4\'ee \'e2 \'ea\'e0\'e6\'e4\'ee\'e9 \'e8\'f2\'e5\'f0\'e0\'f6\'e8\'e8 \'f6\'e8\'ea\'eb\'e0 \'f7\'e5\'f1\'f2\'ed\'ee \'f7\'e8\'f2\'e0\'f2\'fc \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e8\'e7 \'ff\'f7\'e5\'e9\'ea\'e8, \'e2\'ee\'f2 \'e8 \'f7\'e8\'f2\'e0\'e5\'ec.\cf0\kerning1\par
\cf1\kerning0\tab mov ptr, #0x1000\cf0\kerning1\par
\cf1\kerning0 loop:\cf0\kerning1\par
\cf1\kerning0\tab mov a, @ptr\cf0\kerning1\par
\cf1\kerning0\tab bz loop\cf0\kerning1\par
\cf1\kerning0\par
\'cf\'f0\'e8\'ec\'e5\'f0 \'b92: \'e4\'e2\'e0 \'ef\'ee\'f2\'ee\'ea\'e0 \'ee\'e1\'f0\'e0\'f9\'e0\'fe\'f2\'f1\'ff \'ea \'ee\'e4\'ed\'ee\'e9 \'e8 \'f2\'ee\'e9 \'e6\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 -> race condition.\cf0\kerning1\par
\cf1\kerning0\par
volatile int x;\cf0\kerning1\par
\cf1\kerning0 // Thread 1:\cf0\kerning1\par
\cf1\kerning0 while (!stop) \{\cf0\kerning1\par
\cf1\kerning0   x++;\cf0\kerning1\par
\cf1\kerning0   \'85\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0 // Thread 2:\cf0\kerning1\par
\cf1\kerning0 while (!stop) \{\cf0\kerning1\par
\cf1\kerning0   if (x%2 == 0)\cf0\kerning1\par
\cf1\kerning0     System.out.println("x=" + x);\cf0\kerning1\par
\cf1\kerning0   \'85\cf0\kerning1\par
\cf1\kerning0\}\cf0\kerning1\par
\cf1\kerning0\par
\ul\'cf\'f0\'e8\'ee\'f0\'e8\'f2\'e5\'f2 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9\ulnone : \cf0{\field{\*\fldinst{HYPERLINK "http://ru.cppreference.com/w/cpp/language/operator_precedence"}}{\fldrslt{\ul\cf2 http://ru.cppreference.com/w/cpp/language/operator_precedence}}}\kerning1\f0\fs22\par
}
 