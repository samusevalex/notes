Хорошая фраза: Cache приносит проблем едва ли не больше, чем решает.
Если можете обойтись без cache, то так и сделайте.

Проблемы Cache:
1. Дилемма - что лучше? Каждый раз по-новый вычислять данные (или долго считывать из RAM или DB) или пользоваться cache, который тоже требует ресурсов.
2. Определить когда cache стал Invalid.
3. Обеспечение когерентности - та ещё задачка.
4. "Холодность" cache - высокий cache miss.

Можно блокам данных навешивать state-ы типа Modified, Exclusive, Shared, Invalid
Самое простое кэшировать файлы - легко проверять cache на Invalid - время, когда файл был закэширован > времени последнего изменения.

Хотим закэшировать объект. Он зависит от другого объекта. Тот в свою очередь от третьего.
Создаём "таблицу зависимости" из двух столбцов: объект - время последнего изменения. И отслеживаем это время.

Организация ЭВМ. Орлов С.А стр.476
L1 cache в системе с одним CPU 2-а подхода:
	Write-back - CPU делает write=изменение какого-либо блока данных в cache. По шине управления в сторону CPU отправляем ok. Но в RAM данные сразу не пишем, ждём. Считаем, что если идут изменения какого-либо блока, то этих изменений будет череда. И только через некоторое время или после нескольких изменений пишем в RAM.
	Write-through ("Запись через кэш") - CPU делает write какого-либо блока данных в cache. Сразу пишем в RAM. Только потом отправляем ok. Более медленней, но снижает риск потери данных.

Если несколько CPU, т.е. несколько L1 кэшей, то возникает проблема cache coherence. Решения:
1. Отказаться от локальных L1/L2 кэшей. Все CPU работают с одним большим L3 кэшем.
2. Разделить данные на 2-а блока: которые мы будем кэшировать и которые нет. Один из вариантов разделить на: Read-Write и Read-Only. RO - кэшируем, а RW нет. Или на этапе компиляции можем определить, одни данные будут использоваться совместно, а другие нет.
3. Все L1 кэши связаны шиной. CPU 1 изменяет какой-то блок в своём L1 cache-е. Cache контроллер отправляет по шине либо Write Invalidate - типа во всех остальных L1 кэшах этот блок сделать Invalid, либо Write Update - друзья (все остальные L1 cache + RAM), все дружно изменяем данные в этом блоке на это.
4. Через протоколы наблюдения. Организация ЭВМ. Орлов С.А стр.480
http://en.wikipedia.org/wiki/Cache_coherency_protocols_(examples)
http://www.youtube.com/watch?v=7n_8cOBpQrg	26:00
В терминах MOESI	Реальные состояния	Протокол			Компания	
	SI							Write Through
	MSI			D-V-I				Synapse protocol
	MEI											IBM PowerPC 750
	MES			D-VE-S 			Firefly protocol		DEC
	MESI						Write-once или Write-first	Intel Pentium +
	MOSI			D-SD-V-I			Berkeley protocol
	MOES							Dragon protocol		Xerox
	MOESI											AMD64